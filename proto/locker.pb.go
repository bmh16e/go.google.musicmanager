// Code generated by protoc-gen-go.
// source: locker.proto
// DO NOT EDIT!

package musicmanager

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type AudioRef_Store int32

const (
	AudioRef_BLOBSTORE AudioRef_Store = 1
	AudioRef_SM_V2     AudioRef_Store = 2
)

var AudioRef_Store_name = map[int32]string{
	1: "BLOBSTORE",
	2: "SM_V2",
}
var AudioRef_Store_value = map[string]int32{
	"BLOBSTORE": 1,
	"SM_V2":     2,
}

func (x AudioRef_Store) Enum() *AudioRef_Store {
	p := new(AudioRef_Store)
	*p = x
	return p
}
func (x AudioRef_Store) String() string {
	return proto.EnumName(AudioRef_Store_name, int32(x))
}
func (x *AudioRef_Store) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AudioRef_Store_value, data, "AudioRef_Store")
	if err != nil {
		return err
	}
	*x = AudioRef_Store(value)
	return nil
}

type ImageRef_Store int32

const (
	ImageRef_SHOEBOX ImageRef_Store = 3
)

var ImageRef_Store_name = map[int32]string{
	3: "SHOEBOX",
}
var ImageRef_Store_value = map[string]int32{
	"SHOEBOX": 3,
}

func (x ImageRef_Store) Enum() *ImageRef_Store {
	p := new(ImageRef_Store)
	*p = x
	return p
}
func (x ImageRef_Store) String() string {
	return proto.EnumName(ImageRef_Store_name, int32(x))
}
func (x *ImageRef_Store) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ImageRef_Store_value, data, "ImageRef_Store")
	if err != nil {
		return err
	}
	*x = ImageRef_Store(value)
	return nil
}

type ImageRef_Origin int32

const (
	ImageRef_PERSONAL ImageRef_Origin = 1
	ImageRef_STORE    ImageRef_Origin = 2
)

var ImageRef_Origin_name = map[int32]string{
	1: "PERSONAL",
	2: "STORE",
}
var ImageRef_Origin_value = map[string]int32{
	"PERSONAL": 1,
	"STORE":    2,
}

func (x ImageRef_Origin) Enum() *ImageRef_Origin {
	p := new(ImageRef_Origin)
	*p = x
	return p
}
func (x ImageRef_Origin) String() string {
	return proto.EnumName(ImageRef_Origin_name, int32(x))
}
func (x *ImageRef_Origin) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ImageRef_Origin_value, data, "ImageRef_Origin")
	if err != nil {
		return err
	}
	*x = ImageRef_Origin(value)
	return nil
}

type Track_AvailabilityStatus int32

const (
	Track_PENDING                   Track_AvailabilityStatus = 1
	Track_MATCHED                   Track_AvailabilityStatus = 2
	Track_UPLOAD_REQUESTED          Track_AvailabilityStatus = 3
	Track_AVAILABLE                 Track_AvailabilityStatus = 4
	Track_FORCE_REUPLOAD            Track_AvailabilityStatus = 5
	Track_UPLOAD_PERMANENTLY_FAILED Track_AvailabilityStatus = 6
)

var Track_AvailabilityStatus_name = map[int32]string{
	1: "PENDING",
	2: "MATCHED",
	3: "UPLOAD_REQUESTED",
	4: "AVAILABLE",
	5: "FORCE_REUPLOAD",
	6: "UPLOAD_PERMANENTLY_FAILED",
}
var Track_AvailabilityStatus_value = map[string]int32{
	"PENDING":                   1,
	"MATCHED":                   2,
	"UPLOAD_REQUESTED":          3,
	"AVAILABLE":                 4,
	"FORCE_REUPLOAD":            5,
	"UPLOAD_PERMANENTLY_FAILED": 6,
}

func (x Track_AvailabilityStatus) Enum() *Track_AvailabilityStatus {
	p := new(Track_AvailabilityStatus)
	*p = x
	return p
}
func (x Track_AvailabilityStatus) String() string {
	return proto.EnumName(Track_AvailabilityStatus_name, int32(x))
}
func (x *Track_AvailabilityStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Track_AvailabilityStatus_value, data, "Track_AvailabilityStatus")
	if err != nil {
		return err
	}
	*x = Track_AvailabilityStatus(value)
	return nil
}

type Track_ContentType int32

const (
	Track_MP3  Track_ContentType = 1
	Track_M4A  Track_ContentType = 2
	Track_AAC  Track_ContentType = 3
	Track_FLAC Track_ContentType = 4
	Track_OGG  Track_ContentType = 5
	Track_WMA  Track_ContentType = 6
	Track_M4P  Track_ContentType = 7
	Track_ALAC Track_ContentType = 8
)

var Track_ContentType_name = map[int32]string{
	1: "MP3",
	2: "M4A",
	3: "AAC",
	4: "FLAC",
	5: "OGG",
	6: "WMA",
	7: "M4P",
	8: "ALAC",
}
var Track_ContentType_value = map[string]int32{
	"MP3":  1,
	"M4A":  2,
	"AAC":  3,
	"FLAC": 4,
	"OGG":  5,
	"WMA":  6,
	"M4P":  7,
	"ALAC": 8,
}

func (x Track_ContentType) Enum() *Track_ContentType {
	p := new(Track_ContentType)
	*p = x
	return p
}
func (x Track_ContentType) String() string {
	return proto.EnumName(Track_ContentType_name, int32(x))
}
func (x *Track_ContentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Track_ContentType_value, data, "Track_ContentType")
	if err != nil {
		return err
	}
	*x = Track_ContentType(value)
	return nil
}

type Track_Channels int32

const (
	Track_MONO   Track_Channels = 1
	Track_STEREO Track_Channels = 2
)

var Track_Channels_name = map[int32]string{
	1: "MONO",
	2: "STEREO",
}
var Track_Channels_value = map[string]int32{
	"MONO":   1,
	"STEREO": 2,
}

func (x Track_Channels) Enum() *Track_Channels {
	p := new(Track_Channels)
	*p = x
	return p
}
func (x Track_Channels) String() string {
	return proto.EnumName(Track_Channels_name, int32(x))
}
func (x *Track_Channels) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Track_Channels_value, data, "Track_Channels")
	if err != nil {
		return err
	}
	*x = Track_Channels(value)
	return nil
}

type Track_TrackType int32

const (
	Track_MATCHED_TRACK               Track_TrackType = 1
	Track_UNMATCHED_TRACK             Track_TrackType = 2
	Track_LOCAL_TRACK                 Track_TrackType = 3
	Track_PURCHASED_TRACK             Track_TrackType = 4
	Track_METADATA_ONLY_MATCHED_TRACK Track_TrackType = 5
	Track_PROMO_TRACK                 Track_TrackType = 6
)

var Track_TrackType_name = map[int32]string{
	1: "MATCHED_TRACK",
	2: "UNMATCHED_TRACK",
	3: "LOCAL_TRACK",
	4: "PURCHASED_TRACK",
	5: "METADATA_ONLY_MATCHED_TRACK",
	6: "PROMO_TRACK",
}
var Track_TrackType_value = map[string]int32{
	"MATCHED_TRACK":               1,
	"UNMATCHED_TRACK":             2,
	"LOCAL_TRACK":                 3,
	"PURCHASED_TRACK":             4,
	"METADATA_ONLY_MATCHED_TRACK": 5,
	"PROMO_TRACK":                 6,
}

func (x Track_TrackType) Enum() *Track_TrackType {
	p := new(Track_TrackType)
	*p = x
	return p
}
func (x Track_TrackType) String() string {
	return proto.EnumName(Track_TrackType_name, int32(x))
}
func (x *Track_TrackType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Track_TrackType_value, data, "Track_TrackType")
	if err != nil {
		return err
	}
	*x = Track_TrackType(value)
	return nil
}

// Possible ratings for a track.
type Track_Rating int32

const (
	Track_NOT_RATED   Track_Rating = 1
	Track_ONE_STAR    Track_Rating = 2
	Track_TWO_STARS   Track_Rating = 3
	Track_THREE_STARS Track_Rating = 4
	Track_FOUR_STARS  Track_Rating = 5
	Track_FIVE_STARS  Track_Rating = 6
)

var Track_Rating_name = map[int32]string{
	1: "NOT_RATED",
	2: "ONE_STAR",
	3: "TWO_STARS",
	4: "THREE_STARS",
	5: "FOUR_STARS",
	6: "FIVE_STARS",
}
var Track_Rating_value = map[string]int32{
	"NOT_RATED":   1,
	"ONE_STAR":    2,
	"TWO_STARS":   3,
	"THREE_STARS": 4,
	"FOUR_STARS":  5,
	"FIVE_STARS":  6,
}

func (x Track_Rating) Enum() *Track_Rating {
	p := new(Track_Rating)
	*p = x
	return p
}
func (x Track_Rating) String() string {
	return proto.EnumName(Track_Rating_name, int32(x))
}
func (x *Track_Rating) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Track_Rating_value, data, "Track_Rating")
	if err != nil {
		return err
	}
	*x = Track_Rating(value)
	return nil
}

type Playlist_PlaylistType int32

const (
	Playlist_USER_GENERATED Playlist_PlaylistType = 1
	Playlist_MAGIC          Playlist_PlaylistType = 2
	Playlist_PROMO          Playlist_PlaylistType = 3
)

var Playlist_PlaylistType_name = map[int32]string{
	1: "USER_GENERATED",
	2: "MAGIC",
	3: "PROMO",
}
var Playlist_PlaylistType_value = map[string]int32{
	"USER_GENERATED": 1,
	"MAGIC":          2,
	"PROMO":          3,
}

func (x Playlist_PlaylistType) Enum() *Playlist_PlaylistType {
	p := new(Playlist_PlaylistType)
	*p = x
	return p
}
func (x Playlist_PlaylistType) String() string {
	return proto.EnumName(Playlist_PlaylistType_name, int32(x))
}
func (x *Playlist_PlaylistType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Playlist_PlaylistType_value, data, "Playlist_PlaylistType")
	if err != nil {
		return err
	}
	*x = Playlist_PlaylistType(value)
	return nil
}

type PlaylistEntry_RelativePositionIdType int32

const (
	PlaylistEntry_SERVER PlaylistEntry_RelativePositionIdType = 1
	PlaylistEntry_CLIENT PlaylistEntry_RelativePositionIdType = 2
)

var PlaylistEntry_RelativePositionIdType_name = map[int32]string{
	1: "SERVER",
	2: "CLIENT",
}
var PlaylistEntry_RelativePositionIdType_value = map[string]int32{
	"SERVER": 1,
	"CLIENT": 2,
}

func (x PlaylistEntry_RelativePositionIdType) Enum() *PlaylistEntry_RelativePositionIdType {
	p := new(PlaylistEntry_RelativePositionIdType)
	*p = x
	return p
}
func (x PlaylistEntry_RelativePositionIdType) String() string {
	return proto.EnumName(PlaylistEntry_RelativePositionIdType_name, int32(x))
}
func (x *PlaylistEntry_RelativePositionIdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaylistEntry_RelativePositionIdType_value, data, "PlaylistEntry_RelativePositionIdType")
	if err != nil {
		return err
	}
	*x = PlaylistEntry_RelativePositionIdType(value)
	return nil
}

type TrackSearchRestriction_TrackAttribute int32

const (
	TrackSearchRestriction_TITLE               TrackSearchRestriction_TrackAttribute = 1
	TrackSearchRestriction_ARTIST              TrackSearchRestriction_TrackAttribute = 2
	TrackSearchRestriction_ALBUM               TrackSearchRestriction_TrackAttribute = 3
	TrackSearchRestriction_ALBUM_ARTIST        TrackSearchRestriction_TrackAttribute = 4
	TrackSearchRestriction_GENRE               TrackSearchRestriction_TrackAttribute = 5
	TrackSearchRestriction_AVAILABILITY_STATUS TrackSearchRestriction_TrackAttribute = 6
	TrackSearchRestriction_TRACK_TYPE          TrackSearchRestriction_TrackAttribute = 7
	TrackSearchRestriction_YEAR                TrackSearchRestriction_TrackAttribute = 8
	TrackSearchRestriction_STORE_ID            TrackSearchRestriction_TrackAttribute = 9
	TrackSearchRestriction_ALBUM_METAJAM_ID    TrackSearchRestriction_TrackAttribute = 10
)

var TrackSearchRestriction_TrackAttribute_name = map[int32]string{
	1:  "TITLE",
	2:  "ARTIST",
	3:  "ALBUM",
	4:  "ALBUM_ARTIST",
	5:  "GENRE",
	6:  "AVAILABILITY_STATUS",
	7:  "TRACK_TYPE",
	8:  "YEAR",
	9:  "STORE_ID",
	10: "ALBUM_METAJAM_ID",
}
var TrackSearchRestriction_TrackAttribute_value = map[string]int32{
	"TITLE":               1,
	"ARTIST":              2,
	"ALBUM":               3,
	"ALBUM_ARTIST":        4,
	"GENRE":               5,
	"AVAILABILITY_STATUS": 6,
	"TRACK_TYPE":          7,
	"YEAR":                8,
	"STORE_ID":            9,
	"ALBUM_METAJAM_ID":    10,
}

func (x TrackSearchRestriction_TrackAttribute) Enum() *TrackSearchRestriction_TrackAttribute {
	p := new(TrackSearchRestriction_TrackAttribute)
	*p = x
	return p
}
func (x TrackSearchRestriction_TrackAttribute) String() string {
	return proto.EnumName(TrackSearchRestriction_TrackAttribute_name, int32(x))
}
func (x *TrackSearchRestriction_TrackAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TrackSearchRestriction_TrackAttribute_value, data, "TrackSearchRestriction_TrackAttribute")
	if err != nil {
		return err
	}
	*x = TrackSearchRestriction_TrackAttribute(value)
	return nil
}

type TrackSearchRestriction_ComparisonType int32

const (
	TrackSearchRestriction_EQUAL         TrackSearchRestriction_ComparisonType = 0
	TrackSearchRestriction_NOT_EQUAL     TrackSearchRestriction_ComparisonType = 1
	TrackSearchRestriction_GREATER_THAN  TrackSearchRestriction_ComparisonType = 2
	TrackSearchRestriction_GREATER_EQUAL TrackSearchRestriction_ComparisonType = 3
	TrackSearchRestriction_LESS_THAN     TrackSearchRestriction_ComparisonType = 4
	TrackSearchRestriction_LESS_EQUAL    TrackSearchRestriction_ComparisonType = 5
	TrackSearchRestriction_PARTIAL_MATCH TrackSearchRestriction_ComparisonType = 6
)

var TrackSearchRestriction_ComparisonType_name = map[int32]string{
	0: "EQUAL",
	1: "NOT_EQUAL",
	2: "GREATER_THAN",
	3: "GREATER_EQUAL",
	4: "LESS_THAN",
	5: "LESS_EQUAL",
	6: "PARTIAL_MATCH",
}
var TrackSearchRestriction_ComparisonType_value = map[string]int32{
	"EQUAL":         0,
	"NOT_EQUAL":     1,
	"GREATER_THAN":  2,
	"GREATER_EQUAL": 3,
	"LESS_THAN":     4,
	"LESS_EQUAL":    5,
	"PARTIAL_MATCH": 6,
}

func (x TrackSearchRestriction_ComparisonType) Enum() *TrackSearchRestriction_ComparisonType {
	p := new(TrackSearchRestriction_ComparisonType)
	*p = x
	return p
}
func (x TrackSearchRestriction_ComparisonType) String() string {
	return proto.EnumName(TrackSearchRestriction_ComparisonType_name, int32(x))
}
func (x *TrackSearchRestriction_ComparisonType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TrackSearchRestriction_ComparisonType_value, data, "TrackSearchRestriction_ComparisonType")
	if err != nil {
		return err
	}
	*x = TrackSearchRestriction_ComparisonType(value)
	return nil
}

type TrackSearchRestrictionSet_RestrictionSetType int32

const (
	TrackSearchRestrictionSet_AND TrackSearchRestrictionSet_RestrictionSetType = 0
	TrackSearchRestrictionSet_OR  TrackSearchRestrictionSet_RestrictionSetType = 1
)

var TrackSearchRestrictionSet_RestrictionSetType_name = map[int32]string{
	0: "AND",
	1: "OR",
}
var TrackSearchRestrictionSet_RestrictionSetType_value = map[string]int32{
	"AND": 0,
	"OR":  1,
}

func (x TrackSearchRestrictionSet_RestrictionSetType) Enum() *TrackSearchRestrictionSet_RestrictionSetType {
	p := new(TrackSearchRestrictionSet_RestrictionSetType)
	*p = x
	return p
}
func (x TrackSearchRestrictionSet_RestrictionSetType) String() string {
	return proto.EnumName(TrackSearchRestrictionSet_RestrictionSetType_name, int32(x))
}
func (x *TrackSearchRestrictionSet_RestrictionSetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TrackSearchRestrictionSet_RestrictionSetType_value, data, "TrackSearchRestrictionSet_RestrictionSetType")
	if err != nil {
		return err
	}
	*x = TrackSearchRestrictionSet_RestrictionSetType(value)
	return nil
}

type TrackSortOrder_TrackAttribute int32

const (
	TrackSortOrder_LAST_MODIFIED_TIME TrackSortOrder_TrackAttribute = 1
	TrackSortOrder_ARTIST             TrackSortOrder_TrackAttribute = 2
	TrackSortOrder_ALBUM              TrackSortOrder_TrackAttribute = 3
	TrackSortOrder_TITLE              TrackSortOrder_TrackAttribute = 4
	TrackSortOrder_TRACK_NUMBER       TrackSortOrder_TrackAttribute = 6
	TrackSortOrder_PLAY_COUNT         TrackSortOrder_TrackAttribute = 9
	TrackSortOrder_DURATION_MILLIS    TrackSortOrder_TrackAttribute = 10
	TrackSortOrder_RATING             TrackSortOrder_TrackAttribute = 11
	TrackSortOrder_CREATION_TIME      TrackSortOrder_TrackAttribute = 12
)

var TrackSortOrder_TrackAttribute_name = map[int32]string{
	1:  "LAST_MODIFIED_TIME",
	2:  "ARTIST",
	3:  "ALBUM",
	4:  "TITLE",
	6:  "TRACK_NUMBER",
	9:  "PLAY_COUNT",
	10: "DURATION_MILLIS",
	11: "RATING",
	12: "CREATION_TIME",
}
var TrackSortOrder_TrackAttribute_value = map[string]int32{
	"LAST_MODIFIED_TIME": 1,
	"ARTIST":             2,
	"ALBUM":              3,
	"TITLE":              4,
	"TRACK_NUMBER":       6,
	"PLAY_COUNT":         9,
	"DURATION_MILLIS":    10,
	"RATING":             11,
	"CREATION_TIME":      12,
}

func (x TrackSortOrder_TrackAttribute) Enum() *TrackSortOrder_TrackAttribute {
	p := new(TrackSortOrder_TrackAttribute)
	*p = x
	return p
}
func (x TrackSortOrder_TrackAttribute) String() string {
	return proto.EnumName(TrackSortOrder_TrackAttribute_name, int32(x))
}
func (x *TrackSortOrder_TrackAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TrackSortOrder_TrackAttribute_value, data, "TrackSortOrder_TrackAttribute")
	if err != nil {
		return err
	}
	*x = TrackSortOrder_TrackAttribute(value)
	return nil
}

type GetTracksRequest_TrackProjection int32

const (
	GetTracksRequest_FULL          GetTracksRequest_TrackProjection = 1
	GetTracksRequest_FRONTEND_VIEW GetTracksRequest_TrackProjection = 2
)

var GetTracksRequest_TrackProjection_name = map[int32]string{
	1: "FULL",
	2: "FRONTEND_VIEW",
}
var GetTracksRequest_TrackProjection_value = map[string]int32{
	"FULL":          1,
	"FRONTEND_VIEW": 2,
}

func (x GetTracksRequest_TrackProjection) Enum() *GetTracksRequest_TrackProjection {
	p := new(GetTracksRequest_TrackProjection)
	*p = x
	return p
}
func (x GetTracksRequest_TrackProjection) String() string {
	return proto.EnumName(GetTracksRequest_TrackProjection_name, int32(x))
}
func (x *GetTracksRequest_TrackProjection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetTracksRequest_TrackProjection_value, data, "GetTracksRequest_TrackProjection")
	if err != nil {
		return err
	}
	*x = GetTracksRequest_TrackProjection(value)
	return nil
}

type GetTracksResponse_ResponseCode int32

const (
	GetTracksResponse_OK           GetTracksResponse_ResponseCode = 1
	GetTracksResponse_NOT_MODIFIED GetTracksResponse_ResponseCode = 2
	GetTracksResponse_GONE         GetTracksResponse_ResponseCode = 3
)

var GetTracksResponse_ResponseCode_name = map[int32]string{
	1: "OK",
	2: "NOT_MODIFIED",
	3: "GONE",
}
var GetTracksResponse_ResponseCode_value = map[string]int32{
	"OK":           1,
	"NOT_MODIFIED": 2,
	"GONE":         3,
}

func (x GetTracksResponse_ResponseCode) Enum() *GetTracksResponse_ResponseCode {
	p := new(GetTracksResponse_ResponseCode)
	*p = x
	return p
}
func (x GetTracksResponse_ResponseCode) String() string {
	return proto.EnumName(GetTracksResponse_ResponseCode_name, int32(x))
}
func (x *GetTracksResponse_ResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetTracksResponse_ResponseCode_value, data, "GetTracksResponse_ResponseCode")
	if err != nil {
		return err
	}
	*x = GetTracksResponse_ResponseCode(value)
	return nil
}

type GetPlaylistEntriesResponse_ResponseCode int32

const (
	GetPlaylistEntriesResponse_OK           GetPlaylistEntriesResponse_ResponseCode = 1
	GetPlaylistEntriesResponse_NOT_MODIFIED GetPlaylistEntriesResponse_ResponseCode = 2
	GetPlaylistEntriesResponse_GONE         GetPlaylistEntriesResponse_ResponseCode = 3
)

var GetPlaylistEntriesResponse_ResponseCode_name = map[int32]string{
	1: "OK",
	2: "NOT_MODIFIED",
	3: "GONE",
}
var GetPlaylistEntriesResponse_ResponseCode_value = map[string]int32{
	"OK":           1,
	"NOT_MODIFIED": 2,
	"GONE":         3,
}

func (x GetPlaylistEntriesResponse_ResponseCode) Enum() *GetPlaylistEntriesResponse_ResponseCode {
	p := new(GetPlaylistEntriesResponse_ResponseCode)
	*p = x
	return p
}
func (x GetPlaylistEntriesResponse_ResponseCode) String() string {
	return proto.EnumName(GetPlaylistEntriesResponse_ResponseCode_name, int32(x))
}
func (x *GetPlaylistEntriesResponse_ResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetPlaylistEntriesResponse_ResponseCode_value, data, "GetPlaylistEntriesResponse_ResponseCode")
	if err != nil {
		return err
	}
	*x = GetPlaylistEntriesResponse_ResponseCode(value)
	return nil
}

type PlaylistSortOrder_PlaylistAttribute int32

const (
	PlaylistSortOrder_LAST_MODIFIED_TIME PlaylistSortOrder_PlaylistAttribute = 1
	PlaylistSortOrder_TITLE              PlaylistSortOrder_PlaylistAttribute = 2
	PlaylistSortOrder_CREATION_TIME      PlaylistSortOrder_PlaylistAttribute = 3
	PlaylistSortOrder_RECENT_TIMESTAMP   PlaylistSortOrder_PlaylistAttribute = 4
)

var PlaylistSortOrder_PlaylistAttribute_name = map[int32]string{
	1: "LAST_MODIFIED_TIME",
	2: "TITLE",
	3: "CREATION_TIME",
	4: "RECENT_TIMESTAMP",
}
var PlaylistSortOrder_PlaylistAttribute_value = map[string]int32{
	"LAST_MODIFIED_TIME": 1,
	"TITLE":              2,
	"CREATION_TIME":      3,
	"RECENT_TIMESTAMP":   4,
}

func (x PlaylistSortOrder_PlaylistAttribute) Enum() *PlaylistSortOrder_PlaylistAttribute {
	p := new(PlaylistSortOrder_PlaylistAttribute)
	*p = x
	return p
}
func (x PlaylistSortOrder_PlaylistAttribute) String() string {
	return proto.EnumName(PlaylistSortOrder_PlaylistAttribute_name, int32(x))
}
func (x *PlaylistSortOrder_PlaylistAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaylistSortOrder_PlaylistAttribute_value, data, "PlaylistSortOrder_PlaylistAttribute")
	if err != nil {
		return err
	}
	*x = PlaylistSortOrder_PlaylistAttribute(value)
	return nil
}

type GetPlaylistsResponse_ResponseCode int32

const (
	GetPlaylistsResponse_OK           GetPlaylistsResponse_ResponseCode = 1
	GetPlaylistsResponse_NOT_MODIFIED GetPlaylistsResponse_ResponseCode = 2
	GetPlaylistsResponse_GONE         GetPlaylistsResponse_ResponseCode = 3
)

var GetPlaylistsResponse_ResponseCode_name = map[int32]string{
	1: "OK",
	2: "NOT_MODIFIED",
	3: "GONE",
}
var GetPlaylistsResponse_ResponseCode_value = map[string]int32{
	"OK":           1,
	"NOT_MODIFIED": 2,
	"GONE":         3,
}

func (x GetPlaylistsResponse_ResponseCode) Enum() *GetPlaylistsResponse_ResponseCode {
	p := new(GetPlaylistsResponse_ResponseCode)
	*p = x
	return p
}
func (x GetPlaylistsResponse_ResponseCode) String() string {
	return proto.EnumName(GetPlaylistsResponse_ResponseCode_name, int32(x))
}
func (x *GetPlaylistsResponse_ResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetPlaylistsResponse_ResponseCode_value, data, "GetPlaylistsResponse_ResponseCode")
	if err != nil {
		return err
	}
	*x = GetPlaylistsResponse_ResponseCode(value)
	return nil
}

type BatchLookupRequest_MetadataType int32

const (
	BatchLookupRequest_TRACK          BatchLookupRequest_MetadataType = 1
	BatchLookupRequest_PLAYLIST       BatchLookupRequest_MetadataType = 2
	BatchLookupRequest_PLAYLIST_ENTRY BatchLookupRequest_MetadataType = 3
)

var BatchLookupRequest_MetadataType_name = map[int32]string{
	1: "TRACK",
	2: "PLAYLIST",
	3: "PLAYLIST_ENTRY",
}
var BatchLookupRequest_MetadataType_value = map[string]int32{
	"TRACK":          1,
	"PLAYLIST":       2,
	"PLAYLIST_ENTRY": 3,
}

func (x BatchLookupRequest_MetadataType) Enum() *BatchLookupRequest_MetadataType {
	p := new(BatchLookupRequest_MetadataType)
	*p = x
	return p
}
func (x BatchLookupRequest_MetadataType) String() string {
	return proto.EnumName(BatchLookupRequest_MetadataType_name, int32(x))
}
func (x *BatchLookupRequest_MetadataType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BatchLookupRequest_MetadataType_value, data, "BatchLookupRequest_MetadataType")
	if err != nil {
		return err
	}
	*x = BatchLookupRequest_MetadataType(value)
	return nil
}

type MutateResponse_MutateResponseCode int32

const (
	MutateResponse_OK                 MutateResponse_MutateResponseCode = 1
	MutateResponse_CONFLICT           MutateResponse_MutateResponseCode = 2
	MutateResponse_INVALID_REQUEST    MutateResponse_MutateResponseCode = 3
	MutateResponse_METADATA_TOO_LARGE MutateResponse_MutateResponseCode = 4
)

var MutateResponse_MutateResponseCode_name = map[int32]string{
	1: "OK",
	2: "CONFLICT",
	3: "INVALID_REQUEST",
	4: "METADATA_TOO_LARGE",
}
var MutateResponse_MutateResponseCode_value = map[string]int32{
	"OK":                 1,
	"CONFLICT":           2,
	"INVALID_REQUEST":    3,
	"METADATA_TOO_LARGE": 4,
}

func (x MutateResponse_MutateResponseCode) Enum() *MutateResponse_MutateResponseCode {
	p := new(MutateResponse_MutateResponseCode)
	*p = x
	return p
}
func (x MutateResponse_MutateResponseCode) String() string {
	return proto.EnumName(MutateResponse_MutateResponseCode_name, int32(x))
}
func (x *MutateResponse_MutateResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MutateResponse_MutateResponseCode_value, data, "MutateResponse_MutateResponseCode")
	if err != nil {
		return err
	}
	*x = MutateResponse_MutateResponseCode(value)
	return nil
}

type MutateResponse_AvailabilityStatus int32

const (
	MutateResponse_PENDING                   MutateResponse_AvailabilityStatus = 1
	MutateResponse_MATCHED                   MutateResponse_AvailabilityStatus = 2
	MutateResponse_UPLOAD_REQUESTED          MutateResponse_AvailabilityStatus = 3
	MutateResponse_AVAILABLE                 MutateResponse_AvailabilityStatus = 4
	MutateResponse_FORCE_REUPLOAD            MutateResponse_AvailabilityStatus = 5
	MutateResponse_UPLOAD_PERMANENTLY_FAILED MutateResponse_AvailabilityStatus = 6
)

var MutateResponse_AvailabilityStatus_name = map[int32]string{
	1: "PENDING",
	2: "MATCHED",
	3: "UPLOAD_REQUESTED",
	4: "AVAILABLE",
	5: "FORCE_REUPLOAD",
	6: "UPLOAD_PERMANENTLY_FAILED",
}
var MutateResponse_AvailabilityStatus_value = map[string]int32{
	"PENDING":                   1,
	"MATCHED":                   2,
	"UPLOAD_REQUESTED":          3,
	"AVAILABLE":                 4,
	"FORCE_REUPLOAD":            5,
	"UPLOAD_PERMANENTLY_FAILED": 6,
}

func (x MutateResponse_AvailabilityStatus) Enum() *MutateResponse_AvailabilityStatus {
	p := new(MutateResponse_AvailabilityStatus)
	*p = x
	return p
}
func (x MutateResponse_AvailabilityStatus) String() string {
	return proto.EnumName(MutateResponse_AvailabilityStatus_name, int32(x))
}
func (x *MutateResponse_AvailabilityStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MutateResponse_AvailabilityStatus_value, data, "MutateResponse_AvailabilityStatus")
	if err != nil {
		return err
	}
	*x = MutateResponse_AvailabilityStatus(value)
	return nil
}

type BatchMutateTracksResponse_BatchMutateTracksResponseCode int32

const (
	BatchMutateTracksResponse_OK       BatchMutateTracksResponse_BatchMutateTracksResponseCode = 1
	BatchMutateTracksResponse_CONFLICT BatchMutateTracksResponse_BatchMutateTracksResponseCode = 2
)

var BatchMutateTracksResponse_BatchMutateTracksResponseCode_name = map[int32]string{
	1: "OK",
	2: "CONFLICT",
}
var BatchMutateTracksResponse_BatchMutateTracksResponseCode_value = map[string]int32{
	"OK":       1,
	"CONFLICT": 2,
}

func (x BatchMutateTracksResponse_BatchMutateTracksResponseCode) Enum() *BatchMutateTracksResponse_BatchMutateTracksResponseCode {
	p := new(BatchMutateTracksResponse_BatchMutateTracksResponseCode)
	*p = x
	return p
}
func (x BatchMutateTracksResponse_BatchMutateTracksResponseCode) String() string {
	return proto.EnumName(BatchMutateTracksResponse_BatchMutateTracksResponseCode_name, int32(x))
}
func (x *BatchMutateTracksResponse_BatchMutateTracksResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BatchMutateTracksResponse_BatchMutateTracksResponseCode_value, data, "BatchMutateTracksResponse_BatchMutateTracksResponseCode")
	if err != nil {
		return err
	}
	*x = BatchMutateTracksResponse_BatchMutateTracksResponseCode(value)
	return nil
}

type BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode int32

const (
	BatchMutatePlaylistsResponse_OK       BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode = 1
	BatchMutatePlaylistsResponse_CONFLICT BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode = 2
)

var BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode_name = map[int32]string{
	1: "OK",
	2: "CONFLICT",
}
var BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode_value = map[string]int32{
	"OK":       1,
	"CONFLICT": 2,
}

func (x BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode) Enum() *BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode {
	p := new(BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode)
	*p = x
	return p
}
func (x BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode) String() string {
	return proto.EnumName(BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode_name, int32(x))
}
func (x *BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode_value, data, "BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode")
	if err != nil {
		return err
	}
	*x = BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode(value)
	return nil
}

type BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode int32

const (
	BatchMutatePlaylistEntriesResponse_OK       BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode = 1
	BatchMutatePlaylistEntriesResponse_CONFLICT BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode = 2
)

var BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode_name = map[int32]string{
	1: "OK",
	2: "CONFLICT",
}
var BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode_value = map[string]int32{
	"OK":       1,
	"CONFLICT": 2,
}

func (x BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode) Enum() *BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode {
	p := new(BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode)
	*p = x
	return p
}
func (x BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode) String() string {
	return proto.EnumName(BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode_name, int32(x))
}
func (x *BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode_value, data, "BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode")
	if err != nil {
		return err
	}
	*x = BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode(value)
	return nil
}

type MagicPlaylistSeed_SeedType int32

const (
	MagicPlaylistSeed_TRACK       MagicPlaylistSeed_SeedType = 0
	MagicPlaylistSeed_ARTIST      MagicPlaylistSeed_SeedType = 1
	MagicPlaylistSeed_ALBUM       MagicPlaylistSeed_SeedType = 2
	MagicPlaylistSeed_OPAQUE_SEED MagicPlaylistSeed_SeedType = 3
)

var MagicPlaylistSeed_SeedType_name = map[int32]string{
	0: "TRACK",
	1: "ARTIST",
	2: "ALBUM",
	3: "OPAQUE_SEED",
}
var MagicPlaylistSeed_SeedType_value = map[string]int32{
	"TRACK":       0,
	"ARTIST":      1,
	"ALBUM":       2,
	"OPAQUE_SEED": 3,
}

func (x MagicPlaylistSeed_SeedType) Enum() *MagicPlaylistSeed_SeedType {
	p := new(MagicPlaylistSeed_SeedType)
	*p = x
	return p
}
func (x MagicPlaylistSeed_SeedType) String() string {
	return proto.EnumName(MagicPlaylistSeed_SeedType_name, int32(x))
}
func (x *MagicPlaylistSeed_SeedType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MagicPlaylistSeed_SeedType_value, data, "MagicPlaylistSeed_SeedType")
	if err != nil {
		return err
	}
	*x = MagicPlaylistSeed_SeedType(value)
	return nil
}

type AlbumSortOrder_AlbumAttribute int32

const (
	AlbumSortOrder_LAST_PLAYED_TIME AlbumSortOrder_AlbumAttribute = 1
	AlbumSortOrder_NAME             AlbumSortOrder_AlbumAttribute = 2
	AlbumSortOrder_CREATION_TIME    AlbumSortOrder_AlbumAttribute = 3
)

var AlbumSortOrder_AlbumAttribute_name = map[int32]string{
	1: "LAST_PLAYED_TIME",
	2: "NAME",
	3: "CREATION_TIME",
}
var AlbumSortOrder_AlbumAttribute_value = map[string]int32{
	"LAST_PLAYED_TIME": 1,
	"NAME":             2,
	"CREATION_TIME":    3,
}

func (x AlbumSortOrder_AlbumAttribute) Enum() *AlbumSortOrder_AlbumAttribute {
	p := new(AlbumSortOrder_AlbumAttribute)
	*p = x
	return p
}
func (x AlbumSortOrder_AlbumAttribute) String() string {
	return proto.EnumName(AlbumSortOrder_AlbumAttribute_name, int32(x))
}
func (x *AlbumSortOrder_AlbumAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AlbumSortOrder_AlbumAttribute_value, data, "AlbumSortOrder_AlbumAttribute")
	if err != nil {
		return err
	}
	*x = AlbumSortOrder_AlbumAttribute(value)
	return nil
}

type GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType int32

const (
	GetDynamicPlaylistEntriesRequest_PURCHASED              GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType = 1
	GetDynamicPlaylistEntriesRequest_THUMBS_UP              GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType = 2
	GetDynamicPlaylistEntriesRequest_RECENTLY_ADDED         GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType = 3
	GetDynamicPlaylistEntriesRequest_PROMOTED               GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType = 4
	GetDynamicPlaylistEntriesRequest_PROMOTED_AND_PURCHASED GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType = 5
)

var GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType_name = map[int32]string{
	1: "PURCHASED",
	2: "THUMBS_UP",
	3: "RECENTLY_ADDED",
	4: "PROMOTED",
	5: "PROMOTED_AND_PURCHASED",
}
var GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType_value = map[string]int32{
	"PURCHASED":              1,
	"THUMBS_UP":              2,
	"RECENTLY_ADDED":         3,
	"PROMOTED":               4,
	"PROMOTED_AND_PURCHASED": 5,
}

func (x GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType) Enum() *GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType {
	p := new(GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType)
	*p = x
	return p
}
func (x GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType) String() string {
	return proto.EnumName(GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType_name, int32(x))
}
func (x *GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType_value, data, "GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType")
	if err != nil {
		return err
	}
	*x = GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType(value)
	return nil
}

type GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType int32

const (
	GetDynamicPlaylistEntriesResponse_PURCHASED              GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType = 1
	GetDynamicPlaylistEntriesResponse_THUMBS_UP              GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType = 2
	GetDynamicPlaylistEntriesResponse_RECENTLY_ADDED         GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType = 3
	GetDynamicPlaylistEntriesResponse_PROMOTED               GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType = 4
	GetDynamicPlaylistEntriesResponse_UNKNOWN                GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType = 5
	GetDynamicPlaylistEntriesResponse_PROMOTED_AND_PURCHASED GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType = 6
)

var GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType_name = map[int32]string{
	1: "PURCHASED",
	2: "THUMBS_UP",
	3: "RECENTLY_ADDED",
	4: "PROMOTED",
	5: "UNKNOWN",
	6: "PROMOTED_AND_PURCHASED",
}
var GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType_value = map[string]int32{
	"PURCHASED":              1,
	"THUMBS_UP":              2,
	"RECENTLY_ADDED":         3,
	"PROMOTED":               4,
	"UNKNOWN":                5,
	"PROMOTED_AND_PURCHASED": 6,
}

func (x GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType) Enum() *GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType {
	p := new(GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType)
	*p = x
	return p
}
func (x GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType) String() string {
	return proto.EnumName(GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType_name, int32(x))
}
func (x *GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType_value, data, "GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType")
	if err != nil {
		return err
	}
	*x = GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType(value)
	return nil
}

type GetDynamicPlaylistEntriesResponse_ResponseCode int32

const (
	GetDynamicPlaylistEntriesResponse_OK     GetDynamicPlaylistEntriesResponse_ResponseCode = 1
	GetDynamicPlaylistEntriesResponse_NOT_OK GetDynamicPlaylistEntriesResponse_ResponseCode = 2
)

var GetDynamicPlaylistEntriesResponse_ResponseCode_name = map[int32]string{
	1: "OK",
	2: "NOT_OK",
}
var GetDynamicPlaylistEntriesResponse_ResponseCode_value = map[string]int32{
	"OK":     1,
	"NOT_OK": 2,
}

func (x GetDynamicPlaylistEntriesResponse_ResponseCode) Enum() *GetDynamicPlaylistEntriesResponse_ResponseCode {
	p := new(GetDynamicPlaylistEntriesResponse_ResponseCode)
	*p = x
	return p
}
func (x GetDynamicPlaylistEntriesResponse_ResponseCode) String() string {
	return proto.EnumName(GetDynamicPlaylistEntriesResponse_ResponseCode_name, int32(x))
}
func (x *GetDynamicPlaylistEntriesResponse_ResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetDynamicPlaylistEntriesResponse_ResponseCode_value, data, "GetDynamicPlaylistEntriesResponse_ResponseCode")
	if err != nil {
		return err
	}
	*x = GetDynamicPlaylistEntriesResponse_ResponseCode(value)
	return nil
}

type TrackTypeAggregate_TrackType int32

const (
	TrackTypeAggregate_MATCHED_TRACK               TrackTypeAggregate_TrackType = 1
	TrackTypeAggregate_UNMATCHED_TRACK             TrackTypeAggregate_TrackType = 2
	TrackTypeAggregate_LOCAL_TRACK                 TrackTypeAggregate_TrackType = 3
	TrackTypeAggregate_PURCHASED_TRACK             TrackTypeAggregate_TrackType = 4
	TrackTypeAggregate_METADATA_ONLY_MATCHED_TRACK TrackTypeAggregate_TrackType = 5
	TrackTypeAggregate_PROMO_TRACK                 TrackTypeAggregate_TrackType = 6
)

var TrackTypeAggregate_TrackType_name = map[int32]string{
	1: "MATCHED_TRACK",
	2: "UNMATCHED_TRACK",
	3: "LOCAL_TRACK",
	4: "PURCHASED_TRACK",
	5: "METADATA_ONLY_MATCHED_TRACK",
	6: "PROMO_TRACK",
}
var TrackTypeAggregate_TrackType_value = map[string]int32{
	"MATCHED_TRACK":               1,
	"UNMATCHED_TRACK":             2,
	"LOCAL_TRACK":                 3,
	"PURCHASED_TRACK":             4,
	"METADATA_ONLY_MATCHED_TRACK": 5,
	"PROMO_TRACK":                 6,
}

func (x TrackTypeAggregate_TrackType) Enum() *TrackTypeAggregate_TrackType {
	p := new(TrackTypeAggregate_TrackType)
	*p = x
	return p
}
func (x TrackTypeAggregate_TrackType) String() string {
	return proto.EnumName(TrackTypeAggregate_TrackType_name, int32(x))
}
func (x *TrackTypeAggregate_TrackType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TrackTypeAggregate_TrackType_value, data, "TrackTypeAggregate_TrackType")
	if err != nil {
		return err
	}
	*x = TrackTypeAggregate_TrackType(value)
	return nil
}

type AvailabilityStatusAggregate_AvailabilityStatus int32

const (
	AvailabilityStatusAggregate_PENDING                   AvailabilityStatusAggregate_AvailabilityStatus = 1
	AvailabilityStatusAggregate_MATCHED                   AvailabilityStatusAggregate_AvailabilityStatus = 2
	AvailabilityStatusAggregate_UPLOAD_REQUESTED          AvailabilityStatusAggregate_AvailabilityStatus = 3
	AvailabilityStatusAggregate_AVAILABLE                 AvailabilityStatusAggregate_AvailabilityStatus = 4
	AvailabilityStatusAggregate_FORCE_REUPLOAD            AvailabilityStatusAggregate_AvailabilityStatus = 5
	AvailabilityStatusAggregate_UPLOAD_PERMANENTLY_FAILED AvailabilityStatusAggregate_AvailabilityStatus = 6
)

var AvailabilityStatusAggregate_AvailabilityStatus_name = map[int32]string{
	1: "PENDING",
	2: "MATCHED",
	3: "UPLOAD_REQUESTED",
	4: "AVAILABLE",
	5: "FORCE_REUPLOAD",
	6: "UPLOAD_PERMANENTLY_FAILED",
}
var AvailabilityStatusAggregate_AvailabilityStatus_value = map[string]int32{
	"PENDING":                   1,
	"MATCHED":                   2,
	"UPLOAD_REQUESTED":          3,
	"AVAILABLE":                 4,
	"FORCE_REUPLOAD":            5,
	"UPLOAD_PERMANENTLY_FAILED": 6,
}

func (x AvailabilityStatusAggregate_AvailabilityStatus) Enum() *AvailabilityStatusAggregate_AvailabilityStatus {
	p := new(AvailabilityStatusAggregate_AvailabilityStatus)
	*p = x
	return p
}
func (x AvailabilityStatusAggregate_AvailabilityStatus) String() string {
	return proto.EnumName(AvailabilityStatusAggregate_AvailabilityStatus_name, int32(x))
}
func (x *AvailabilityStatusAggregate_AvailabilityStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AvailabilityStatusAggregate_AvailabilityStatus_value, data, "AvailabilityStatusAggregate_AvailabilityStatus")
	if err != nil {
		return err
	}
	*x = AvailabilityStatusAggregate_AvailabilityStatus(value)
	return nil
}

type RemoteControlCommandResponse_ResponseCode int32

const (
	RemoteControlCommandResponse_OK              RemoteControlCommandResponse_ResponseCode = 1
	RemoteControlCommandResponse_NO_PUBLISHER    RemoteControlCommandResponse_ResponseCode = 2
	RemoteControlCommandResponse_INVALID_REQUEST RemoteControlCommandResponse_ResponseCode = 3
	RemoteControlCommandResponse_PUBLISH_ERROR   RemoteControlCommandResponse_ResponseCode = 4
)

var RemoteControlCommandResponse_ResponseCode_name = map[int32]string{
	1: "OK",
	2: "NO_PUBLISHER",
	3: "INVALID_REQUEST",
	4: "PUBLISH_ERROR",
}
var RemoteControlCommandResponse_ResponseCode_value = map[string]int32{
	"OK":              1,
	"NO_PUBLISHER":    2,
	"INVALID_REQUEST": 3,
	"PUBLISH_ERROR":   4,
}

func (x RemoteControlCommandResponse_ResponseCode) Enum() *RemoteControlCommandResponse_ResponseCode {
	p := new(RemoteControlCommandResponse_ResponseCode)
	*p = x
	return p
}
func (x RemoteControlCommandResponse_ResponseCode) String() string {
	return proto.EnumName(RemoteControlCommandResponse_ResponseCode_name, int32(x))
}
func (x *RemoteControlCommandResponse_ResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RemoteControlCommandResponse_ResponseCode_value, data, "RemoteControlCommandResponse_ResponseCode")
	if err != nil {
		return err
	}
	*x = RemoteControlCommandResponse_ResponseCode(value)
	return nil
}

type AudioRef struct {
	Store               *AudioRef_Store `protobuf:"varint,1,req,name=store,enum=musicmanager.AudioRef_Store" json:"store,omitempty"`
	Ref                 []byte          `protobuf:"bytes,2,req,name=ref" json:"ref,omitempty"`
	Url                 *string         `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	BitRate             *int32          `protobuf:"varint,5,opt,name=bit_rate" json:"bit_rate,omitempty"`
	SampleRate          *int32          `protobuf:"varint,6,opt,name=sample_rate" json:"sample_rate,omitempty"`
	Downloadable        *bool           `protobuf:"varint,7,opt,name=downloadable" json:"downloadable,omitempty"`
	DurationMillis      *int64          `protobuf:"varint,8,opt,name=duration_millis" json:"duration_millis,omitempty"`
	RematchTimestamp    *int64          `protobuf:"varint,9,opt,name=rematch_timestamp" json:"rematch_timestamp,omitempty"`
	InvalidDueToWipeout *bool           `protobuf:"varint,10,opt,name=invalid_due_to_wipeout" json:"invalid_due_to_wipeout,omitempty"`
	XXX_unrecognized    []byte          `json:"-"`
}

func (m *AudioRef) Reset()         { *m = AudioRef{} }
func (m *AudioRef) String() string { return proto.CompactTextString(m) }
func (*AudioRef) ProtoMessage()    {}

func (m *AudioRef) GetStore() AudioRef_Store {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return AudioRef_BLOBSTORE
}

func (m *AudioRef) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *AudioRef) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *AudioRef) GetBitRate() int32 {
	if m != nil && m.BitRate != nil {
		return *m.BitRate
	}
	return 0
}

func (m *AudioRef) GetSampleRate() int32 {
	if m != nil && m.SampleRate != nil {
		return *m.SampleRate
	}
	return 0
}

func (m *AudioRef) GetDownloadable() bool {
	if m != nil && m.Downloadable != nil {
		return *m.Downloadable
	}
	return false
}

func (m *AudioRef) GetDurationMillis() int64 {
	if m != nil && m.DurationMillis != nil {
		return *m.DurationMillis
	}
	return 0
}

func (m *AudioRef) GetRematchTimestamp() int64 {
	if m != nil && m.RematchTimestamp != nil {
		return *m.RematchTimestamp
	}
	return 0
}

func (m *AudioRef) GetInvalidDueToWipeout() bool {
	if m != nil && m.InvalidDueToWipeout != nil {
		return *m.InvalidDueToWipeout
	}
	return false
}

type ImageRef struct {
	Store               *ImageRef_Store  `protobuf:"varint,1,opt,name=store,enum=musicmanager.ImageRef_Store" json:"store,omitempty"`
	Width               *uint32          `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height              *uint32          `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Url                 *string          `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	InvalidDueToWipeout *bool            `protobuf:"varint,7,opt,name=invalid_due_to_wipeout" json:"invalid_due_to_wipeout,omitempty"`
	Origin              *ImageRef_Origin `protobuf:"varint,8,opt,name=origin,enum=musicmanager.ImageRef_Origin" json:"origin,omitempty"`
	XXX_unrecognized    []byte           `json:"-"`
}

func (m *ImageRef) Reset()         { *m = ImageRef{} }
func (m *ImageRef) String() string { return proto.CompactTextString(m) }
func (*ImageRef) ProtoMessage()    {}

func (m *ImageRef) GetStore() ImageRef_Store {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return ImageRef_SHOEBOX
}

func (m *ImageRef) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *ImageRef) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *ImageRef) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *ImageRef) GetInvalidDueToWipeout() bool {
	if m != nil && m.InvalidDueToWipeout != nil {
		return *m.InvalidDueToWipeout
	}
	return false
}

func (m *ImageRef) GetOrigin() ImageRef_Origin {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return ImageRef_PERSONAL
}

type UploadedUitsId3Tag struct {
	Owner            *string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UploadedUitsId3Tag) Reset()         { *m = UploadedUitsId3Tag{} }
func (m *UploadedUitsId3Tag) String() string { return proto.CompactTextString(m) }
func (*UploadedUitsId3Tag) ProtoMessage()    {}

func (m *UploadedUitsId3Tag) GetOwner() string {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return ""
}

func (m *UploadedUitsId3Tag) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// A Track holds metadata about a track.  Most of the fields are
// undocumented; only those that are viewable/editable in the web
// interface or have some other known significance have comments.
type Track struct {
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The client ID of the track.  Trying to upload a track with a client
	// ID that has already been uploaded will be rejected with an
	// ALREADY_EXISTS code.  Can be omitted if you don't want the track to
	// be checked against existing ones.
	ClientId              *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	CreationTimestamp     *int64  `protobuf:"varint,3,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	LastModifiedTimestamp *int64  `protobuf:"varint,4,opt,name=last_modified_timestamp" json:"last_modified_timestamp,omitempty"`
	Deleted               *bool   `protobuf:"varint,5,opt,name=deleted,def=0" json:"deleted,omitempty"`
	// The title of the track.  Must be nonempty when uploading, or the
	// track will be rejected with a PERMANENT_ERROR code.
	Title *string `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	// The artist of the track.
	Artist     *string `protobuf:"bytes,7,opt,name=artist" json:"artist,omitempty"`
	ArtistHash *int64  `protobuf:"varint,46,opt,name=artist_hash" json:"artist_hash,omitempty"`
	// The composer of the track.
	Composer *string `protobuf:"bytes,8,opt,name=composer" json:"composer,omitempty"`
	// The album the track belongs to.
	Album *string `protobuf:"bytes,9,opt,name=album" json:"album,omitempty"`
	// The artist of the album the track belongs to.
	AlbumArtist         *string `protobuf:"bytes,10,opt,name=album_artist" json:"album_artist,omitempty"`
	CanonicalAlbum      *string `protobuf:"bytes,56,opt,name=canonical_album" json:"canonical_album,omitempty"`
	CanonicalArtist     *string `protobuf:"bytes,57,opt,name=canonical_artist" json:"canonical_artist,omitempty"`
	CanonicalGenreAlbum *string `protobuf:"bytes,58,opt,name=canonical_genre_album" json:"canonical_genre_album,omitempty"`
	// The release year of the track.
	Year *int32 `protobuf:"varint,11,opt,name=year" json:"year,omitempty"`
	// A comment about the track.
	Comment *string `protobuf:"bytes,12,opt,name=comment" json:"comment,omitempty"`
	// The number of the track within its disc.
	TrackNumber *int32 `protobuf:"varint,13,opt,name=track_number" json:"track_number,omitempty"`
	// The genre of the track.
	Genre *string `protobuf:"bytes,14,opt,name=genre" json:"genre,omitempty"`
	// The duration of the track in milliseconds.
	DurationMillis     *int64                    `protobuf:"varint,15,opt,name=duration_millis" json:"duration_millis,omitempty"`
	BeatsPerMinute     *int32                    `protobuf:"varint,16,opt,name=beats_per_minute" json:"beats_per_minute,omitempty"`
	OriginalBitRate    *int32                    `protobuf:"varint,44,opt,name=original_bit_rate" json:"original_bit_rate,omitempty"`
	AudioRef           []*AudioRef               `protobuf:"bytes,17,rep,name=audio_ref" json:"audio_ref,omitempty"`
	AlbumArtRef        []*ImageRef               `protobuf:"bytes,18,rep,name=album_art_ref" json:"album_art_ref,omitempty"`
	AvailabilityStatus *Track_AvailabilityStatus `protobuf:"varint,19,opt,name=availability_status,enum=musicmanager.Track_AvailabilityStatus" json:"availability_status,omitempty"`
	// The play count of the track.
	PlayCount   *int32             `protobuf:"varint,20,opt,name=play_count" json:"play_count,omitempty"`
	ContentType *Track_ContentType `protobuf:"varint,25,opt,name=content_type,enum=musicmanager.Track_ContentType" json:"content_type,omitempty"`
	// The total number of tracks on the disc.
	TotalTrackCount *int32 `protobuf:"varint,26,opt,name=total_track_count" json:"total_track_count,omitempty"`
	// The number of the disc on which the track is located within its album.
	DiscNumber *int32 `protobuf:"varint,27,opt,name=disc_number" json:"disc_number,omitempty"`
	// The total number of discs in the track's album.
	TotalDiscCount      *int32           `protobuf:"varint,28,opt,name=total_disc_count" json:"total_disc_count,omitempty"`
	Channels            *Track_Channels  `protobuf:"varint,29,opt,name=channels,enum=musicmanager.Track_Channels" json:"channels,omitempty"`
	TrackType           *Track_TrackType `protobuf:"varint,30,opt,name=track_type,enum=musicmanager.Track_TrackType" json:"track_type,omitempty"`
	UseSingleServerCopy *bool            `protobuf:"varint,59,opt,name=use_single_server_copy" json:"use_single_server_copy,omitempty"`
	// The rating of the track.
	Rating                    *Track_Rating         `protobuf:"varint,31,opt,name=rating,enum=musicmanager.Track_Rating" json:"rating,omitempty"`
	EstimatedSize             *int64                `protobuf:"varint,32,opt,name=estimated_size" json:"estimated_size,omitempty"`
	StoreId                   *string               `protobuf:"bytes,33,opt,name=store_id" json:"store_id,omitempty"`
	MetajamId                 *string               `protobuf:"bytes,34,opt,name=metajam_id" json:"metajam_id,omitempty"`
	MetajamIdConfidence       *float64              `protobuf:"fixed64,43,opt,name=metajam_id_confidence,def=0" json:"metajam_id_confidence,omitempty"`
	Uits                      *string               `protobuf:"bytes,35,opt,name=uits" json:"uits,omitempty"`
	UitsMetadata              *UitsMetadata         `protobuf:"bytes,40,opt,name=uits_metadata" json:"uits_metadata,omitempty"`
	Compilation               *bool                 `protobuf:"varint,36,opt,name=compilation" json:"compilation,omitempty"`
	ClientDateAdded           *int64                `protobuf:"varint,37,opt,name=client_date_added" json:"client_date_added,omitempty"`
	RecentTimestamp           *int64                `protobuf:"varint,38,opt,name=recent_timestamp" json:"recent_timestamp,omitempty"`
	DoNotRematch              *bool                 `protobuf:"varint,39,opt,name=do_not_rematch,def=0" json:"do_not_rematch,omitempty"`
	FromAlbumPurchase         *bool                 `protobuf:"varint,41,opt,name=from_album_purchase" json:"from_album_purchase,omitempty"`
	AlbumMetajamId            *string               `protobuf:"bytes,42,opt,name=album_metajam_id" json:"album_metajam_id,omitempty"`
	TransactionId             *string               `protobuf:"bytes,45,opt,name=transaction_id" json:"transaction_id,omitempty"`
	DebugTrack                *bool                 `protobuf:"varint,47,opt,name=debug_track" json:"debug_track,omitempty"`
	NormalizedTitle           *string               `protobuf:"bytes,48,opt,name=normalized_title" json:"normalized_title,omitempty"`
	NormalizedArtist          *string               `protobuf:"bytes,49,opt,name=normalized_artist" json:"normalized_artist,omitempty"`
	NormalizedAlbum           *string               `protobuf:"bytes,50,opt,name=normalized_album" json:"normalized_album,omitempty"`
	NormalizedAlbumArtist     *string               `protobuf:"bytes,51,opt,name=normalized_album_artist" json:"normalized_album_artist,omitempty"`
	NormalizedCanonicalAlbum  *string               `protobuf:"bytes,54,opt,name=normalized_canonical_album" json:"normalized_canonical_album,omitempty"`
	NormalizedCanonicalArtist *string               `protobuf:"bytes,55,opt,name=normalized_canonical_artist" json:"normalized_canonical_artist,omitempty"`
	UploaderId                *string               `protobuf:"bytes,52,opt,name=uploader_id" json:"uploader_id,omitempty"`
	ClientAlbumId             *string               `protobuf:"bytes,53,opt,name=client_album_id" json:"client_album_id,omitempty"`
	LabelOwnerCode            *string               `protobuf:"bytes,60,opt,name=label_owner_code" json:"label_owner_code,omitempty"`
	OriginalContentType       *Track_ContentType    `protobuf:"varint,61,opt,name=original_content_type,enum=musicmanager.Track_ContentType" json:"original_content_type,omitempty"`
	UploadedUits              []*UploadedUitsId3Tag `protobuf:"bytes,71,rep,name=uploaded_uits" json:"uploaded_uits,omitempty"`
	XXX_unrecognized          []byte                `json:"-"`
}

func (m *Track) Reset()         { *m = Track{} }
func (m *Track) String() string { return proto.CompactTextString(m) }
func (*Track) ProtoMessage()    {}

const Default_Track_Deleted bool = false
const Default_Track_MetajamIdConfidence float64 = 0
const Default_Track_DoNotRematch bool = false

func (m *Track) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Track) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Track) GetCreationTimestamp() int64 {
	if m != nil && m.CreationTimestamp != nil {
		return *m.CreationTimestamp
	}
	return 0
}

func (m *Track) GetLastModifiedTimestamp() int64 {
	if m != nil && m.LastModifiedTimestamp != nil {
		return *m.LastModifiedTimestamp
	}
	return 0
}

func (m *Track) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return Default_Track_Deleted
}

func (m *Track) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Track) GetArtist() string {
	if m != nil && m.Artist != nil {
		return *m.Artist
	}
	return ""
}

func (m *Track) GetArtistHash() int64 {
	if m != nil && m.ArtistHash != nil {
		return *m.ArtistHash
	}
	return 0
}

func (m *Track) GetComposer() string {
	if m != nil && m.Composer != nil {
		return *m.Composer
	}
	return ""
}

func (m *Track) GetAlbum() string {
	if m != nil && m.Album != nil {
		return *m.Album
	}
	return ""
}

func (m *Track) GetAlbumArtist() string {
	if m != nil && m.AlbumArtist != nil {
		return *m.AlbumArtist
	}
	return ""
}

func (m *Track) GetCanonicalAlbum() string {
	if m != nil && m.CanonicalAlbum != nil {
		return *m.CanonicalAlbum
	}
	return ""
}

func (m *Track) GetCanonicalArtist() string {
	if m != nil && m.CanonicalArtist != nil {
		return *m.CanonicalArtist
	}
	return ""
}

func (m *Track) GetCanonicalGenreAlbum() string {
	if m != nil && m.CanonicalGenreAlbum != nil {
		return *m.CanonicalGenreAlbum
	}
	return ""
}

func (m *Track) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *Track) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *Track) GetTrackNumber() int32 {
	if m != nil && m.TrackNumber != nil {
		return *m.TrackNumber
	}
	return 0
}

func (m *Track) GetGenre() string {
	if m != nil && m.Genre != nil {
		return *m.Genre
	}
	return ""
}

func (m *Track) GetDurationMillis() int64 {
	if m != nil && m.DurationMillis != nil {
		return *m.DurationMillis
	}
	return 0
}

func (m *Track) GetBeatsPerMinute() int32 {
	if m != nil && m.BeatsPerMinute != nil {
		return *m.BeatsPerMinute
	}
	return 0
}

func (m *Track) GetOriginalBitRate() int32 {
	if m != nil && m.OriginalBitRate != nil {
		return *m.OriginalBitRate
	}
	return 0
}

func (m *Track) GetAudioRef() []*AudioRef {
	if m != nil {
		return m.AudioRef
	}
	return nil
}

func (m *Track) GetAlbumArtRef() []*ImageRef {
	if m != nil {
		return m.AlbumArtRef
	}
	return nil
}

func (m *Track) GetAvailabilityStatus() Track_AvailabilityStatus {
	if m != nil && m.AvailabilityStatus != nil {
		return *m.AvailabilityStatus
	}
	return Track_PENDING
}

func (m *Track) GetPlayCount() int32 {
	if m != nil && m.PlayCount != nil {
		return *m.PlayCount
	}
	return 0
}

func (m *Track) GetContentType() Track_ContentType {
	if m != nil && m.ContentType != nil {
		return *m.ContentType
	}
	return Track_MP3
}

func (m *Track) GetTotalTrackCount() int32 {
	if m != nil && m.TotalTrackCount != nil {
		return *m.TotalTrackCount
	}
	return 0
}

func (m *Track) GetDiscNumber() int32 {
	if m != nil && m.DiscNumber != nil {
		return *m.DiscNumber
	}
	return 0
}

func (m *Track) GetTotalDiscCount() int32 {
	if m != nil && m.TotalDiscCount != nil {
		return *m.TotalDiscCount
	}
	return 0
}

func (m *Track) GetChannels() Track_Channels {
	if m != nil && m.Channels != nil {
		return *m.Channels
	}
	return Track_MONO
}

func (m *Track) GetTrackType() Track_TrackType {
	if m != nil && m.TrackType != nil {
		return *m.TrackType
	}
	return Track_MATCHED_TRACK
}

func (m *Track) GetUseSingleServerCopy() bool {
	if m != nil && m.UseSingleServerCopy != nil {
		return *m.UseSingleServerCopy
	}
	return false
}

func (m *Track) GetRating() Track_Rating {
	if m != nil && m.Rating != nil {
		return *m.Rating
	}
	return Track_NOT_RATED
}

func (m *Track) GetEstimatedSize() int64 {
	if m != nil && m.EstimatedSize != nil {
		return *m.EstimatedSize
	}
	return 0
}

func (m *Track) GetStoreId() string {
	if m != nil && m.StoreId != nil {
		return *m.StoreId
	}
	return ""
}

func (m *Track) GetMetajamId() string {
	if m != nil && m.MetajamId != nil {
		return *m.MetajamId
	}
	return ""
}

func (m *Track) GetMetajamIdConfidence() float64 {
	if m != nil && m.MetajamIdConfidence != nil {
		return *m.MetajamIdConfidence
	}
	return Default_Track_MetajamIdConfidence
}

func (m *Track) GetUits() string {
	if m != nil && m.Uits != nil {
		return *m.Uits
	}
	return ""
}

func (m *Track) GetUitsMetadata() *UitsMetadata {
	if m != nil {
		return m.UitsMetadata
	}
	return nil
}

func (m *Track) GetCompilation() bool {
	if m != nil && m.Compilation != nil {
		return *m.Compilation
	}
	return false
}

func (m *Track) GetClientDateAdded() int64 {
	if m != nil && m.ClientDateAdded != nil {
		return *m.ClientDateAdded
	}
	return 0
}

func (m *Track) GetRecentTimestamp() int64 {
	if m != nil && m.RecentTimestamp != nil {
		return *m.RecentTimestamp
	}
	return 0
}

func (m *Track) GetDoNotRematch() bool {
	if m != nil && m.DoNotRematch != nil {
		return *m.DoNotRematch
	}
	return Default_Track_DoNotRematch
}

func (m *Track) GetFromAlbumPurchase() bool {
	if m != nil && m.FromAlbumPurchase != nil {
		return *m.FromAlbumPurchase
	}
	return false
}

func (m *Track) GetAlbumMetajamId() string {
	if m != nil && m.AlbumMetajamId != nil {
		return *m.AlbumMetajamId
	}
	return ""
}

func (m *Track) GetTransactionId() string {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return ""
}

func (m *Track) GetDebugTrack() bool {
	if m != nil && m.DebugTrack != nil {
		return *m.DebugTrack
	}
	return false
}

func (m *Track) GetNormalizedTitle() string {
	if m != nil && m.NormalizedTitle != nil {
		return *m.NormalizedTitle
	}
	return ""
}

func (m *Track) GetNormalizedArtist() string {
	if m != nil && m.NormalizedArtist != nil {
		return *m.NormalizedArtist
	}
	return ""
}

func (m *Track) GetNormalizedAlbum() string {
	if m != nil && m.NormalizedAlbum != nil {
		return *m.NormalizedAlbum
	}
	return ""
}

func (m *Track) GetNormalizedAlbumArtist() string {
	if m != nil && m.NormalizedAlbumArtist != nil {
		return *m.NormalizedAlbumArtist
	}
	return ""
}

func (m *Track) GetNormalizedCanonicalAlbum() string {
	if m != nil && m.NormalizedCanonicalAlbum != nil {
		return *m.NormalizedCanonicalAlbum
	}
	return ""
}

func (m *Track) GetNormalizedCanonicalArtist() string {
	if m != nil && m.NormalizedCanonicalArtist != nil {
		return *m.NormalizedCanonicalArtist
	}
	return ""
}

func (m *Track) GetUploaderId() string {
	if m != nil && m.UploaderId != nil {
		return *m.UploaderId
	}
	return ""
}

func (m *Track) GetClientAlbumId() string {
	if m != nil && m.ClientAlbumId != nil {
		return *m.ClientAlbumId
	}
	return ""
}

func (m *Track) GetLabelOwnerCode() string {
	if m != nil && m.LabelOwnerCode != nil {
		return *m.LabelOwnerCode
	}
	return ""
}

func (m *Track) GetOriginalContentType() Track_ContentType {
	if m != nil && m.OriginalContentType != nil {
		return *m.OriginalContentType
	}
	return Track_MP3
}

func (m *Track) GetUploadedUits() []*UploadedUitsId3Tag {
	if m != nil {
		return m.UploadedUits
	}
	return nil
}

type Tracks struct {
	Track            []*Track `protobuf:"bytes,1,rep,name=track" json:"track,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Tracks) Reset()         { *m = Tracks{} }
func (m *Tracks) String() string { return proto.CompactTextString(m) }
func (*Tracks) ProtoMessage()    {}

func (m *Tracks) GetTrack() []*Track {
	if m != nil {
		return m.Track
	}
	return nil
}

type Playlist struct {
	Id                    *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ClientId              *string                `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	CreationTimestamp     *int64                 `protobuf:"varint,3,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	LastModifiedTimestamp *int64                 `protobuf:"varint,4,opt,name=last_modified_timestamp" json:"last_modified_timestamp,omitempty"`
	Deleted               *bool                  `protobuf:"varint,5,opt,name=deleted,def=0" json:"deleted,omitempty"`
	Name                  *string                `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	PlaylistType          *Playlist_PlaylistType `protobuf:"varint,7,opt,name=playlist_type,enum=musicmanager.Playlist_PlaylistType" json:"playlist_type,omitempty"`
	PlaylistArtRef        *ImageRef              `protobuf:"bytes,8,opt,name=playlist_art_ref" json:"playlist_art_ref,omitempty"`
	RecentTimestamp       *int64                 `protobuf:"varint,9,opt,name=recent_timestamp" json:"recent_timestamp,omitempty"`
	XXX_unrecognized      []byte                 `json:"-"`
}

func (m *Playlist) Reset()         { *m = Playlist{} }
func (m *Playlist) String() string { return proto.CompactTextString(m) }
func (*Playlist) ProtoMessage()    {}

const Default_Playlist_Deleted bool = false

func (m *Playlist) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Playlist) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Playlist) GetCreationTimestamp() int64 {
	if m != nil && m.CreationTimestamp != nil {
		return *m.CreationTimestamp
	}
	return 0
}

func (m *Playlist) GetLastModifiedTimestamp() int64 {
	if m != nil && m.LastModifiedTimestamp != nil {
		return *m.LastModifiedTimestamp
	}
	return 0
}

func (m *Playlist) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return Default_Playlist_Deleted
}

func (m *Playlist) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Playlist) GetPlaylistType() Playlist_PlaylistType {
	if m != nil && m.PlaylistType != nil {
		return *m.PlaylistType
	}
	return Playlist_USER_GENERATED
}

func (m *Playlist) GetPlaylistArtRef() *ImageRef {
	if m != nil {
		return m.PlaylistArtRef
	}
	return nil
}

func (m *Playlist) GetRecentTimestamp() int64 {
	if m != nil && m.RecentTimestamp != nil {
		return *m.RecentTimestamp
	}
	return 0
}

type PlaylistEntry struct {
	PlaylistId             *string                               `protobuf:"bytes,1,opt,name=playlist_id" json:"playlist_id,omitempty"`
	AbsolutePosition       *int64                                `protobuf:"varint,2,opt,name=absolute_position" json:"absolute_position,omitempty"`
	PlaceAfterEntryId      *string                               `protobuf:"bytes,3,opt,name=place_after_entry_id" json:"place_after_entry_id,omitempty"`
	TrackId                *string                               `protobuf:"bytes,4,opt,name=track_id" json:"track_id,omitempty"`
	Id                     *string                               `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	ClientId               *string                               `protobuf:"bytes,6,opt,name=client_id" json:"client_id,omitempty"`
	CreationTimestamp      *int64                                `protobuf:"varint,7,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	LastModifiedTimestamp  *int64                                `protobuf:"varint,8,opt,name=last_modified_timestamp" json:"last_modified_timestamp,omitempty"`
	Deleted                *bool                                 `protobuf:"varint,9,opt,name=deleted,def=0" json:"deleted,omitempty"`
	RelativePositionIdType *PlaylistEntry_RelativePositionIdType `protobuf:"varint,10,opt,name=relative_position_id_type,enum=musicmanager.PlaylistEntry_RelativePositionIdType" json:"relative_position_id_type,omitempty"`
	Track                  *Track                                `protobuf:"bytes,15,opt,name=track" json:"track,omitempty"`
	PlaceBeforeEntryId     *string                               `protobuf:"bytes,16,opt,name=place_before_entry_id" json:"place_before_entry_id,omitempty"`
	StringPosition         *string                               `protobuf:"bytes,17,opt,name=string_position" json:"string_position,omitempty"`
	XXX_unrecognized       []byte                                `json:"-"`
}

func (m *PlaylistEntry) Reset()         { *m = PlaylistEntry{} }
func (m *PlaylistEntry) String() string { return proto.CompactTextString(m) }
func (*PlaylistEntry) ProtoMessage()    {}

const Default_PlaylistEntry_Deleted bool = false

func (m *PlaylistEntry) GetPlaylistId() string {
	if m != nil && m.PlaylistId != nil {
		return *m.PlaylistId
	}
	return ""
}

func (m *PlaylistEntry) GetAbsolutePosition() int64 {
	if m != nil && m.AbsolutePosition != nil {
		return *m.AbsolutePosition
	}
	return 0
}

func (m *PlaylistEntry) GetPlaceAfterEntryId() string {
	if m != nil && m.PlaceAfterEntryId != nil {
		return *m.PlaceAfterEntryId
	}
	return ""
}

func (m *PlaylistEntry) GetTrackId() string {
	if m != nil && m.TrackId != nil {
		return *m.TrackId
	}
	return ""
}

func (m *PlaylistEntry) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *PlaylistEntry) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *PlaylistEntry) GetCreationTimestamp() int64 {
	if m != nil && m.CreationTimestamp != nil {
		return *m.CreationTimestamp
	}
	return 0
}

func (m *PlaylistEntry) GetLastModifiedTimestamp() int64 {
	if m != nil && m.LastModifiedTimestamp != nil {
		return *m.LastModifiedTimestamp
	}
	return 0
}

func (m *PlaylistEntry) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return Default_PlaylistEntry_Deleted
}

func (m *PlaylistEntry) GetRelativePositionIdType() PlaylistEntry_RelativePositionIdType {
	if m != nil && m.RelativePositionIdType != nil {
		return *m.RelativePositionIdType
	}
	return PlaylistEntry_SERVER
}

func (m *PlaylistEntry) GetTrack() *Track {
	if m != nil {
		return m.Track
	}
	return nil
}

func (m *PlaylistEntry) GetPlaceBeforeEntryId() string {
	if m != nil && m.PlaceBeforeEntryId != nil {
		return *m.PlaceBeforeEntryId
	}
	return ""
}

func (m *PlaylistEntry) GetStringPosition() string {
	if m != nil && m.StringPosition != nil {
		return *m.StringPosition
	}
	return ""
}

type TrackSearchRestriction struct {
	Attribute        *TrackSearchRestriction_TrackAttribute `protobuf:"varint,1,req,name=attribute,enum=musicmanager.TrackSearchRestriction_TrackAttribute" json:"attribute,omitempty"`
	Value            *string                                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	ComparisonType   *TrackSearchRestriction_ComparisonType `protobuf:"varint,3,req,name=comparison_type,enum=musicmanager.TrackSearchRestriction_ComparisonType" json:"comparison_type,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *TrackSearchRestriction) Reset()         { *m = TrackSearchRestriction{} }
func (m *TrackSearchRestriction) String() string { return proto.CompactTextString(m) }
func (*TrackSearchRestriction) ProtoMessage()    {}

func (m *TrackSearchRestriction) GetAttribute() TrackSearchRestriction_TrackAttribute {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return TrackSearchRestriction_TITLE
}

func (m *TrackSearchRestriction) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *TrackSearchRestriction) GetComparisonType() TrackSearchRestriction_ComparisonType {
	if m != nil && m.ComparisonType != nil {
		return *m.ComparisonType
	}
	return TrackSearchRestriction_EQUAL
}

type TrackSearchRestrictionSet struct {
	Type             *TrackSearchRestrictionSet_RestrictionSetType `protobuf:"varint,1,opt,name=type,enum=musicmanager.TrackSearchRestrictionSet_RestrictionSetType" json:"type,omitempty"`
	Restriction      []*TrackSearchRestriction                     `protobuf:"bytes,2,rep,name=restriction" json:"restriction,omitempty"`
	SubSet           []*TrackSearchRestrictionSet                  `protobuf:"bytes,3,rep,name=sub_set" json:"sub_set,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *TrackSearchRestrictionSet) Reset()         { *m = TrackSearchRestrictionSet{} }
func (m *TrackSearchRestrictionSet) String() string { return proto.CompactTextString(m) }
func (*TrackSearchRestrictionSet) ProtoMessage()    {}

func (m *TrackSearchRestrictionSet) GetType() TrackSearchRestrictionSet_RestrictionSetType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TrackSearchRestrictionSet_AND
}

func (m *TrackSearchRestrictionSet) GetRestriction() []*TrackSearchRestriction {
	if m != nil {
		return m.Restriction
	}
	return nil
}

func (m *TrackSearchRestrictionSet) GetSubSet() []*TrackSearchRestrictionSet {
	if m != nil {
		return m.SubSet
	}
	return nil
}

type TrackSortOrder struct {
	Attribute        *TrackSortOrder_TrackAttribute `protobuf:"varint,1,opt,name=attribute,enum=musicmanager.TrackSortOrder_TrackAttribute" json:"attribute,omitempty"`
	Descending       *bool                          `protobuf:"varint,2,opt,name=descending,def=1" json:"descending,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *TrackSortOrder) Reset()         { *m = TrackSortOrder{} }
func (m *TrackSortOrder) String() string { return proto.CompactTextString(m) }
func (*TrackSortOrder) ProtoMessage()    {}

const Default_TrackSortOrder_Descending bool = true

func (m *TrackSortOrder) GetAttribute() TrackSortOrder_TrackAttribute {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return TrackSortOrder_LAST_MODIFIED_TIME
}

func (m *TrackSortOrder) GetDescending() bool {
	if m != nil && m.Descending != nil {
		return *m.Descending
	}
	return Default_TrackSortOrder_Descending
}

type GetTracksRequest struct {
	GaiaId            *int64                            `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	UpdatedMin        *int64                            `protobuf:"varint,2,opt,name=updated_min" json:"updated_min,omitempty"`
	IncludeDeleted    *bool                             `protobuf:"varint,3,opt,name=include_deleted" json:"include_deleted,omitempty"`
	MaxResults        *int32                            `protobuf:"varint,4,opt,name=max_results" json:"max_results,omitempty"`
	ContinuationToken *string                           `protobuf:"bytes,5,opt,name=continuation_token" json:"continuation_token,omitempty"`
	SearchRestriction []*TrackSearchRestriction         `protobuf:"bytes,6,rep,name=search_restriction" json:"search_restriction,omitempty"`
	SortOrder         []*TrackSortOrder                 `protobuf:"bytes,7,rep,name=sort_order" json:"sort_order,omitempty"`
	RestrictionSet    *TrackSearchRestrictionSet        `protobuf:"bytes,8,opt,name=restriction_set" json:"restriction_set,omitempty"`
	TrackProjection   *GetTracksRequest_TrackProjection `protobuf:"varint,9,opt,name=track_projection,enum=musicmanager.GetTracksRequest_TrackProjection" json:"track_projection,omitempty"`
	XXX_unrecognized  []byte                            `json:"-"`
}

func (m *GetTracksRequest) Reset()         { *m = GetTracksRequest{} }
func (m *GetTracksRequest) String() string { return proto.CompactTextString(m) }
func (*GetTracksRequest) ProtoMessage()    {}

func (m *GetTracksRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetTracksRequest) GetUpdatedMin() int64 {
	if m != nil && m.UpdatedMin != nil {
		return *m.UpdatedMin
	}
	return 0
}

func (m *GetTracksRequest) GetIncludeDeleted() bool {
	if m != nil && m.IncludeDeleted != nil {
		return *m.IncludeDeleted
	}
	return false
}

func (m *GetTracksRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return 0
}

func (m *GetTracksRequest) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

func (m *GetTracksRequest) GetSearchRestriction() []*TrackSearchRestriction {
	if m != nil {
		return m.SearchRestriction
	}
	return nil
}

func (m *GetTracksRequest) GetSortOrder() []*TrackSortOrder {
	if m != nil {
		return m.SortOrder
	}
	return nil
}

func (m *GetTracksRequest) GetRestrictionSet() *TrackSearchRestrictionSet {
	if m != nil {
		return m.RestrictionSet
	}
	return nil
}

func (m *GetTracksRequest) GetTrackProjection() GetTracksRequest_TrackProjection {
	if m != nil && m.TrackProjection != nil {
		return *m.TrackProjection
	}
	return GetTracksRequest_FULL
}

type GetTracksResponse struct {
	ResponseCode          *GetTracksResponse_ResponseCode `protobuf:"varint,1,req,name=response_code,enum=musicmanager.GetTracksResponse_ResponseCode" json:"response_code,omitempty"`
	Track                 []*Track                        `protobuf:"bytes,2,rep,name=track" json:"track,omitempty"`
	EstimatedTotalResults *int64                          `protobuf:"varint,3,opt,name=estimated_total_results" json:"estimated_total_results,omitempty"`
	ContinuationToken     *string                         `protobuf:"bytes,4,opt,name=continuation_token" json:"continuation_token,omitempty"`
	XXX_unrecognized      []byte                          `json:"-"`
}

func (m *GetTracksResponse) Reset()         { *m = GetTracksResponse{} }
func (m *GetTracksResponse) String() string { return proto.CompactTextString(m) }
func (*GetTracksResponse) ProtoMessage()    {}

func (m *GetTracksResponse) GetResponseCode() GetTracksResponse_ResponseCode {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return GetTracksResponse_OK
}

func (m *GetTracksResponse) GetTrack() []*Track {
	if m != nil {
		return m.Track
	}
	return nil
}

func (m *GetTracksResponse) GetEstimatedTotalResults() int64 {
	if m != nil && m.EstimatedTotalResults != nil {
		return *m.EstimatedTotalResults
	}
	return 0
}

func (m *GetTracksResponse) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

type GetPlaylistEntriesRequest struct {
	GaiaId                  *int64  `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	UpdatedMin              *int64  `protobuf:"varint,2,opt,name=updated_min" json:"updated_min,omitempty"`
	IncludeDeleted          *bool   `protobuf:"varint,3,opt,name=include_deleted" json:"include_deleted,omitempty"`
	MaxResults              *int32  `protobuf:"varint,4,opt,name=max_results" json:"max_results,omitempty"`
	ContinuationToken       *string `protobuf:"bytes,5,opt,name=continuation_token" json:"continuation_token,omitempty"`
	PlaylistIdFilter        *string `protobuf:"bytes,6,opt,name=playlist_id_filter" json:"playlist_id_filter,omitempty"`
	IncludeAllTrackMetadata *bool   `protobuf:"varint,7,opt,name=include_all_track_metadata,def=0" json:"include_all_track_metadata,omitempty"`
	OnlyShowAvailableTracks *bool   `protobuf:"varint,8,opt,name=only_show_available_tracks,def=1" json:"only_show_available_tracks,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *GetPlaylistEntriesRequest) Reset()         { *m = GetPlaylistEntriesRequest{} }
func (m *GetPlaylistEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistEntriesRequest) ProtoMessage()    {}

const Default_GetPlaylistEntriesRequest_IncludeAllTrackMetadata bool = false
const Default_GetPlaylistEntriesRequest_OnlyShowAvailableTracks bool = true

func (m *GetPlaylistEntriesRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetPlaylistEntriesRequest) GetUpdatedMin() int64 {
	if m != nil && m.UpdatedMin != nil {
		return *m.UpdatedMin
	}
	return 0
}

func (m *GetPlaylistEntriesRequest) GetIncludeDeleted() bool {
	if m != nil && m.IncludeDeleted != nil {
		return *m.IncludeDeleted
	}
	return false
}

func (m *GetPlaylistEntriesRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return 0
}

func (m *GetPlaylistEntriesRequest) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

func (m *GetPlaylistEntriesRequest) GetPlaylistIdFilter() string {
	if m != nil && m.PlaylistIdFilter != nil {
		return *m.PlaylistIdFilter
	}
	return ""
}

func (m *GetPlaylistEntriesRequest) GetIncludeAllTrackMetadata() bool {
	if m != nil && m.IncludeAllTrackMetadata != nil {
		return *m.IncludeAllTrackMetadata
	}
	return Default_GetPlaylistEntriesRequest_IncludeAllTrackMetadata
}

func (m *GetPlaylistEntriesRequest) GetOnlyShowAvailableTracks() bool {
	if m != nil && m.OnlyShowAvailableTracks != nil {
		return *m.OnlyShowAvailableTracks
	}
	return Default_GetPlaylistEntriesRequest_OnlyShowAvailableTracks
}

type GetPlaylistEntriesResponse struct {
	ResponseCode          *GetPlaylistEntriesResponse_ResponseCode `protobuf:"varint,1,req,name=response_code,enum=musicmanager.GetPlaylistEntriesResponse_ResponseCode" json:"response_code,omitempty"`
	PlaylistEntry         []*PlaylistEntry                         `protobuf:"bytes,2,rep,name=playlist_entry" json:"playlist_entry,omitempty"`
	EstimatedTotalResults *int64                                   `protobuf:"varint,3,opt,name=estimated_total_results" json:"estimated_total_results,omitempty"`
	ContinuationToken     *string                                  `protobuf:"bytes,4,opt,name=continuation_token" json:"continuation_token,omitempty"`
	XXX_unrecognized      []byte                                   `json:"-"`
}

func (m *GetPlaylistEntriesResponse) Reset()         { *m = GetPlaylistEntriesResponse{} }
func (m *GetPlaylistEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistEntriesResponse) ProtoMessage()    {}

func (m *GetPlaylistEntriesResponse) GetResponseCode() GetPlaylistEntriesResponse_ResponseCode {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return GetPlaylistEntriesResponse_OK
}

func (m *GetPlaylistEntriesResponse) GetPlaylistEntry() []*PlaylistEntry {
	if m != nil {
		return m.PlaylistEntry
	}
	return nil
}

func (m *GetPlaylistEntriesResponse) GetEstimatedTotalResults() int64 {
	if m != nil && m.EstimatedTotalResults != nil {
		return *m.EstimatedTotalResults
	}
	return 0
}

func (m *GetPlaylistEntriesResponse) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

type PlaylistSortOrder struct {
	Attribute        *PlaylistSortOrder_PlaylistAttribute `protobuf:"varint,1,opt,name=attribute,enum=musicmanager.PlaylistSortOrder_PlaylistAttribute" json:"attribute,omitempty"`
	Descending       *bool                                `protobuf:"varint,2,opt,name=descending,def=0" json:"descending,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *PlaylistSortOrder) Reset()         { *m = PlaylistSortOrder{} }
func (m *PlaylistSortOrder) String() string { return proto.CompactTextString(m) }
func (*PlaylistSortOrder) ProtoMessage()    {}

const Default_PlaylistSortOrder_Descending bool = false

func (m *PlaylistSortOrder) GetAttribute() PlaylistSortOrder_PlaylistAttribute {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return PlaylistSortOrder_LAST_MODIFIED_TIME
}

func (m *PlaylistSortOrder) GetDescending() bool {
	if m != nil && m.Descending != nil {
		return *m.Descending
	}
	return Default_PlaylistSortOrder_Descending
}

type GetPlaylistsRequest struct {
	GaiaId            *int64             `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	UpdatedMin        *int64             `protobuf:"varint,2,opt,name=updated_min" json:"updated_min,omitempty"`
	IncludeDeleted    *bool              `protobuf:"varint,3,opt,name=include_deleted" json:"include_deleted,omitempty"`
	MaxResults        *int32             `protobuf:"varint,4,opt,name=max_results" json:"max_results,omitempty"`
	ContinuationToken *string            `protobuf:"bytes,5,opt,name=continuation_token" json:"continuation_token,omitempty"`
	SortOrder         *PlaylistSortOrder `protobuf:"bytes,6,opt,name=sort_order" json:"sort_order,omitempty"`
	XXX_unrecognized  []byte             `json:"-"`
}

func (m *GetPlaylistsRequest) Reset()         { *m = GetPlaylistsRequest{} }
func (m *GetPlaylistsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistsRequest) ProtoMessage()    {}

func (m *GetPlaylistsRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetPlaylistsRequest) GetUpdatedMin() int64 {
	if m != nil && m.UpdatedMin != nil {
		return *m.UpdatedMin
	}
	return 0
}

func (m *GetPlaylistsRequest) GetIncludeDeleted() bool {
	if m != nil && m.IncludeDeleted != nil {
		return *m.IncludeDeleted
	}
	return false
}

func (m *GetPlaylistsRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return 0
}

func (m *GetPlaylistsRequest) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

func (m *GetPlaylistsRequest) GetSortOrder() *PlaylistSortOrder {
	if m != nil {
		return m.SortOrder
	}
	return nil
}

type GetPlaylistsResponse struct {
	ResponseCode          *GetPlaylistsResponse_ResponseCode `protobuf:"varint,1,req,name=response_code,enum=musicmanager.GetPlaylistsResponse_ResponseCode" json:"response_code,omitempty"`
	Playlist              []*Playlist                        `protobuf:"bytes,2,rep,name=playlist" json:"playlist,omitempty"`
	EstimatedTotalResults *int64                             `protobuf:"varint,3,opt,name=estimated_total_results" json:"estimated_total_results,omitempty"`
	ContinuationToken     *string                            `protobuf:"bytes,4,opt,name=continuation_token" json:"continuation_token,omitempty"`
	XXX_unrecognized      []byte                             `json:"-"`
}

func (m *GetPlaylistsResponse) Reset()         { *m = GetPlaylistsResponse{} }
func (m *GetPlaylistsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistsResponse) ProtoMessage()    {}

func (m *GetPlaylistsResponse) GetResponseCode() GetPlaylistsResponse_ResponseCode {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return GetPlaylistsResponse_OK
}

func (m *GetPlaylistsResponse) GetPlaylist() []*Playlist {
	if m != nil {
		return m.Playlist
	}
	return nil
}

func (m *GetPlaylistsResponse) GetEstimatedTotalResults() int64 {
	if m != nil && m.EstimatedTotalResults != nil {
		return *m.EstimatedTotalResults
	}
	return 0
}

func (m *GetPlaylistsResponse) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

type LookupTrackRequest struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LookupTrackRequest) Reset()         { *m = LookupTrackRequest{} }
func (m *LookupTrackRequest) String() string { return proto.CompactTextString(m) }
func (*LookupTrackRequest) ProtoMessage()    {}

func (m *LookupTrackRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *LookupTrackRequest) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

type LookupPlaylistEntryRequest struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LookupPlaylistEntryRequest) Reset()         { *m = LookupPlaylistEntryRequest{} }
func (m *LookupPlaylistEntryRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPlaylistEntryRequest) ProtoMessage()    {}

func (m *LookupPlaylistEntryRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *LookupPlaylistEntryRequest) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

type LookupPlaylistRequest struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ClientId         *string `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LookupPlaylistRequest) Reset()         { *m = LookupPlaylistRequest{} }
func (m *LookupPlaylistRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPlaylistRequest) ProtoMessage()    {}

func (m *LookupPlaylistRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *LookupPlaylistRequest) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

type BatchLookupRequest struct {
	GaiaId           *int64                           `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	Track            []*LookupTrackRequest            `protobuf:"bytes,2,rep,name=track" json:"track,omitempty"`
	Playlist         []*LookupPlaylistRequest         `protobuf:"bytes,3,rep,name=playlist" json:"playlist,omitempty"`
	MetadataType     *BatchLookupRequest_MetadataType `protobuf:"varint,4,opt,name=metadata_type,enum=musicmanager.BatchLookupRequest_MetadataType" json:"metadata_type,omitempty"`
	PlaylistEntry    []*LookupPlaylistEntryRequest    `protobuf:"bytes,5,rep,name=playlist_entry" json:"playlist_entry,omitempty"`
	IncludeDeleted   *bool                            `protobuf:"varint,6,opt,name=include_deleted,def=0" json:"include_deleted,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *BatchLookupRequest) Reset()         { *m = BatchLookupRequest{} }
func (m *BatchLookupRequest) String() string { return proto.CompactTextString(m) }
func (*BatchLookupRequest) ProtoMessage()    {}

const Default_BatchLookupRequest_IncludeDeleted bool = false

func (m *BatchLookupRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *BatchLookupRequest) GetTrack() []*LookupTrackRequest {
	if m != nil {
		return m.Track
	}
	return nil
}

func (m *BatchLookupRequest) GetPlaylist() []*LookupPlaylistRequest {
	if m != nil {
		return m.Playlist
	}
	return nil
}

func (m *BatchLookupRequest) GetMetadataType() BatchLookupRequest_MetadataType {
	if m != nil && m.MetadataType != nil {
		return *m.MetadataType
	}
	return BatchLookupRequest_TRACK
}

func (m *BatchLookupRequest) GetPlaylistEntry() []*LookupPlaylistEntryRequest {
	if m != nil {
		return m.PlaylistEntry
	}
	return nil
}

func (m *BatchLookupRequest) GetIncludeDeleted() bool {
	if m != nil && m.IncludeDeleted != nil {
		return *m.IncludeDeleted
	}
	return Default_BatchLookupRequest_IncludeDeleted
}

type BatchLookupResponse struct {
	Track            []*Track         `protobuf:"bytes,1,rep,name=track" json:"track,omitempty"`
	Playlist         []*Playlist      `protobuf:"bytes,2,rep,name=playlist" json:"playlist,omitempty"`
	PlaylistEntry    []*PlaylistEntry `protobuf:"bytes,3,rep,name=playlist_entry" json:"playlist_entry,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *BatchLookupResponse) Reset()         { *m = BatchLookupResponse{} }
func (m *BatchLookupResponse) String() string { return proto.CompactTextString(m) }
func (*BatchLookupResponse) ProtoMessage()    {}

func (m *BatchLookupResponse) GetTrack() []*Track {
	if m != nil {
		return m.Track
	}
	return nil
}

func (m *BatchLookupResponse) GetPlaylist() []*Playlist {
	if m != nil {
		return m.Playlist
	}
	return nil
}

func (m *BatchLookupResponse) GetPlaylistEntry() []*PlaylistEntry {
	if m != nil {
		return m.PlaylistEntry
	}
	return nil
}

type MutateTrackRequest struct {
	CreateTrack        *Track  `protobuf:"bytes,1,opt,name=create_track" json:"create_track,omitempty"`
	UpdateTrack        *Track  `protobuf:"bytes,2,opt,name=update_track" json:"update_track,omitempty"`
	DeleteTrack        *string `protobuf:"bytes,3,opt,name=delete_track" json:"delete_track,omitempty"`
	PartialUpdate      *bool   `protobuf:"varint,4,opt,name=partial_update" json:"partial_update,omitempty"`
	UpdateLastModified *bool   `protobuf:"varint,5,opt,name=update_last_modified,def=1" json:"update_last_modified,omitempty"`
	UndeleteTrack      *string `protobuf:"bytes,6,opt,name=undelete_track" json:"undelete_track,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *MutateTrackRequest) Reset()         { *m = MutateTrackRequest{} }
func (m *MutateTrackRequest) String() string { return proto.CompactTextString(m) }
func (*MutateTrackRequest) ProtoMessage()    {}

const Default_MutateTrackRequest_UpdateLastModified bool = true

func (m *MutateTrackRequest) GetCreateTrack() *Track {
	if m != nil {
		return m.CreateTrack
	}
	return nil
}

func (m *MutateTrackRequest) GetUpdateTrack() *Track {
	if m != nil {
		return m.UpdateTrack
	}
	return nil
}

func (m *MutateTrackRequest) GetDeleteTrack() string {
	if m != nil && m.DeleteTrack != nil {
		return *m.DeleteTrack
	}
	return ""
}

func (m *MutateTrackRequest) GetPartialUpdate() bool {
	if m != nil && m.PartialUpdate != nil {
		return *m.PartialUpdate
	}
	return false
}

func (m *MutateTrackRequest) GetUpdateLastModified() bool {
	if m != nil && m.UpdateLastModified != nil {
		return *m.UpdateLastModified
	}
	return Default_MutateTrackRequest_UpdateLastModified
}

func (m *MutateTrackRequest) GetUndeleteTrack() string {
	if m != nil && m.UndeleteTrack != nil {
		return *m.UndeleteTrack
	}
	return ""
}

type MutateResponse struct {
	ResponseCode       *MutateResponse_MutateResponseCode `protobuf:"varint,1,opt,name=response_code,enum=musicmanager.MutateResponse_MutateResponseCode" json:"response_code,omitempty"`
	Id                 *string                            `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	ChildId            []string                           `protobuf:"bytes,3,rep,name=child_id" json:"child_id,omitempty"`
	ClientId           *string                            `protobuf:"bytes,4,opt,name=client_id" json:"client_id,omitempty"`
	AvailabilityStatus *MutateResponse_AvailabilityStatus `protobuf:"varint,5,opt,name=availability_status,enum=musicmanager.MutateResponse_AvailabilityStatus" json:"availability_status,omitempty"`
	ErrorMessage       *string                            `protobuf:"bytes,6,opt,name=error_message" json:"error_message,omitempty"`
	XXX_unrecognized   []byte                             `json:"-"`
}

func (m *MutateResponse) Reset()         { *m = MutateResponse{} }
func (m *MutateResponse) String() string { return proto.CompactTextString(m) }
func (*MutateResponse) ProtoMessage()    {}

func (m *MutateResponse) GetResponseCode() MutateResponse_MutateResponseCode {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return MutateResponse_OK
}

func (m *MutateResponse) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MutateResponse) GetChildId() []string {
	if m != nil {
		return m.ChildId
	}
	return nil
}

func (m *MutateResponse) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *MutateResponse) GetAvailabilityStatus() MutateResponse_AvailabilityStatus {
	if m != nil && m.AvailabilityStatus != nil {
		return *m.AvailabilityStatus
	}
	return MutateResponse_PENDING
}

func (m *MutateResponse) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

type BatchMutateTracksRequest struct {
	GaiaId                   *int64                `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	TrackMutation            []*MutateTrackRequest `protobuf:"bytes,2,rep,name=track_mutation" json:"track_mutation,omitempty"`
	SendNotification         *bool                 `protobuf:"varint,3,opt,name=send_notification,def=1" json:"send_notification,omitempty"`
	DetectTimestampConflict  *bool                 `protobuf:"varint,4,opt,name=detect_timestamp_conflict,def=1" json:"detect_timestamp_conflict,omitempty"`
	NotifyFineGrainedUpdates *bool                 `protobuf:"varint,5,opt,name=notify_fine_grained_updates,def=1" json:"notify_fine_grained_updates,omitempty"`
	XXX_unrecognized         []byte                `json:"-"`
}

func (m *BatchMutateTracksRequest) Reset()         { *m = BatchMutateTracksRequest{} }
func (m *BatchMutateTracksRequest) String() string { return proto.CompactTextString(m) }
func (*BatchMutateTracksRequest) ProtoMessage()    {}

const Default_BatchMutateTracksRequest_SendNotification bool = true
const Default_BatchMutateTracksRequest_DetectTimestampConflict bool = true
const Default_BatchMutateTracksRequest_NotifyFineGrainedUpdates bool = true

func (m *BatchMutateTracksRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *BatchMutateTracksRequest) GetTrackMutation() []*MutateTrackRequest {
	if m != nil {
		return m.TrackMutation
	}
	return nil
}

func (m *BatchMutateTracksRequest) GetSendNotification() bool {
	if m != nil && m.SendNotification != nil {
		return *m.SendNotification
	}
	return Default_BatchMutateTracksRequest_SendNotification
}

func (m *BatchMutateTracksRequest) GetDetectTimestampConflict() bool {
	if m != nil && m.DetectTimestampConflict != nil {
		return *m.DetectTimestampConflict
	}
	return Default_BatchMutateTracksRequest_DetectTimestampConflict
}

func (m *BatchMutateTracksRequest) GetNotifyFineGrainedUpdates() bool {
	if m != nil && m.NotifyFineGrainedUpdates != nil {
		return *m.NotifyFineGrainedUpdates
	}
	return Default_BatchMutateTracksRequest_NotifyFineGrainedUpdates
}

type BatchMutateTracksResponse struct {
	ResponseCode     []BatchMutateTracksResponse_BatchMutateTracksResponseCode `protobuf:"varint,1,rep,name=response_code,enum=musicmanager.BatchMutateTracksResponse_BatchMutateTracksResponseCode" json:"response_code,omitempty"`
	MutateResponse   []*MutateResponse                                         `protobuf:"bytes,2,rep,name=mutate_response" json:"mutate_response,omitempty"`
	XXX_unrecognized []byte                                                    `json:"-"`
}

func (m *BatchMutateTracksResponse) Reset()         { *m = BatchMutateTracksResponse{} }
func (m *BatchMutateTracksResponse) String() string { return proto.CompactTextString(m) }
func (*BatchMutateTracksResponse) ProtoMessage()    {}

func (m *BatchMutateTracksResponse) GetResponseCode() []BatchMutateTracksResponse_BatchMutateTracksResponseCode {
	if m != nil {
		return m.ResponseCode
	}
	return nil
}

func (m *BatchMutateTracksResponse) GetMutateResponse() []*MutateResponse {
	if m != nil {
		return m.MutateResponse
	}
	return nil
}

type MutatePlaylistRequest struct {
	CreatePlaylist     *Playlist        `protobuf:"bytes,1,opt,name=create_playlist" json:"create_playlist,omitempty"`
	UpdatePlaylist     *Playlist        `protobuf:"bytes,2,opt,name=update_playlist" json:"update_playlist,omitempty"`
	DeletePlaylist     *string          `protobuf:"bytes,3,opt,name=delete_playlist" json:"delete_playlist,omitempty"`
	PartialUpdate      *bool            `protobuf:"varint,4,opt,name=partial_update" json:"partial_update,omitempty"`
	PlaylistEntry      []*PlaylistEntry `protobuf:"bytes,5,rep,name=playlist_entry" json:"playlist_entry,omitempty"`
	UpdateLastModified *bool            `protobuf:"varint,6,opt,name=update_last_modified,def=1" json:"update_last_modified,omitempty"`
	UndeletePlaylist   *string          `protobuf:"bytes,7,opt,name=undelete_playlist" json:"undelete_playlist,omitempty"`
	XXX_unrecognized   []byte           `json:"-"`
}

func (m *MutatePlaylistRequest) Reset()         { *m = MutatePlaylistRequest{} }
func (m *MutatePlaylistRequest) String() string { return proto.CompactTextString(m) }
func (*MutatePlaylistRequest) ProtoMessage()    {}

const Default_MutatePlaylistRequest_UpdateLastModified bool = true

func (m *MutatePlaylistRequest) GetCreatePlaylist() *Playlist {
	if m != nil {
		return m.CreatePlaylist
	}
	return nil
}

func (m *MutatePlaylistRequest) GetUpdatePlaylist() *Playlist {
	if m != nil {
		return m.UpdatePlaylist
	}
	return nil
}

func (m *MutatePlaylistRequest) GetDeletePlaylist() string {
	if m != nil && m.DeletePlaylist != nil {
		return *m.DeletePlaylist
	}
	return ""
}

func (m *MutatePlaylistRequest) GetPartialUpdate() bool {
	if m != nil && m.PartialUpdate != nil {
		return *m.PartialUpdate
	}
	return false
}

func (m *MutatePlaylistRequest) GetPlaylistEntry() []*PlaylistEntry {
	if m != nil {
		return m.PlaylistEntry
	}
	return nil
}

func (m *MutatePlaylistRequest) GetUpdateLastModified() bool {
	if m != nil && m.UpdateLastModified != nil {
		return *m.UpdateLastModified
	}
	return Default_MutatePlaylistRequest_UpdateLastModified
}

func (m *MutatePlaylistRequest) GetUndeletePlaylist() string {
	if m != nil && m.UndeletePlaylist != nil {
		return *m.UndeletePlaylist
	}
	return ""
}

type BatchMutatePlaylistsRequest struct {
	GaiaId                   *int64                   `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	PlaylistMutation         []*MutatePlaylistRequest `protobuf:"bytes,2,rep,name=playlist_mutation" json:"playlist_mutation,omitempty"`
	SendNotification         *bool                    `protobuf:"varint,3,opt,name=send_notification,def=1" json:"send_notification,omitempty"`
	DetectTimestampConflict  *bool                    `protobuf:"varint,4,opt,name=detect_timestamp_conflict,def=1" json:"detect_timestamp_conflict,omitempty"`
	NotifyFineGrainedUpdates *bool                    `protobuf:"varint,5,opt,name=notify_fine_grained_updates,def=0" json:"notify_fine_grained_updates,omitempty"`
	XXX_unrecognized         []byte                   `json:"-"`
}

func (m *BatchMutatePlaylistsRequest) Reset()         { *m = BatchMutatePlaylistsRequest{} }
func (m *BatchMutatePlaylistsRequest) String() string { return proto.CompactTextString(m) }
func (*BatchMutatePlaylistsRequest) ProtoMessage()    {}

const Default_BatchMutatePlaylistsRequest_SendNotification bool = true
const Default_BatchMutatePlaylistsRequest_DetectTimestampConflict bool = true
const Default_BatchMutatePlaylistsRequest_NotifyFineGrainedUpdates bool = false

func (m *BatchMutatePlaylistsRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *BatchMutatePlaylistsRequest) GetPlaylistMutation() []*MutatePlaylistRequest {
	if m != nil {
		return m.PlaylistMutation
	}
	return nil
}

func (m *BatchMutatePlaylistsRequest) GetSendNotification() bool {
	if m != nil && m.SendNotification != nil {
		return *m.SendNotification
	}
	return Default_BatchMutatePlaylistsRequest_SendNotification
}

func (m *BatchMutatePlaylistsRequest) GetDetectTimestampConflict() bool {
	if m != nil && m.DetectTimestampConflict != nil {
		return *m.DetectTimestampConflict
	}
	return Default_BatchMutatePlaylistsRequest_DetectTimestampConflict
}

func (m *BatchMutatePlaylistsRequest) GetNotifyFineGrainedUpdates() bool {
	if m != nil && m.NotifyFineGrainedUpdates != nil {
		return *m.NotifyFineGrainedUpdates
	}
	return Default_BatchMutatePlaylistsRequest_NotifyFineGrainedUpdates
}

type BatchMutatePlaylistsResponse struct {
	ResponseCode     []BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode `protobuf:"varint,1,rep,name=response_code,enum=musicmanager.BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode" json:"response_code,omitempty"`
	MutateResponse   []*MutateResponse                                               `protobuf:"bytes,2,rep,name=mutate_response" json:"mutate_response,omitempty"`
	XXX_unrecognized []byte                                                          `json:"-"`
}

func (m *BatchMutatePlaylistsResponse) Reset()         { *m = BatchMutatePlaylistsResponse{} }
func (m *BatchMutatePlaylistsResponse) String() string { return proto.CompactTextString(m) }
func (*BatchMutatePlaylistsResponse) ProtoMessage()    {}

func (m *BatchMutatePlaylistsResponse) GetResponseCode() []BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode {
	if m != nil {
		return m.ResponseCode
	}
	return nil
}

func (m *BatchMutatePlaylistsResponse) GetMutateResponse() []*MutateResponse {
	if m != nil {
		return m.MutateResponse
	}
	return nil
}

type MutatePlaylistEntryRequest struct {
	CreatePlaylistEntry   *PlaylistEntry `protobuf:"bytes,1,opt,name=create_playlist_entry" json:"create_playlist_entry,omitempty"`
	UpdatePlaylistEntry   *PlaylistEntry `protobuf:"bytes,2,opt,name=update_playlist_entry" json:"update_playlist_entry,omitempty"`
	DeletePlaylistEntry   *PlaylistEntry `protobuf:"bytes,3,opt,name=delete_playlist_entry" json:"delete_playlist_entry,omitempty"`
	UpdateLastModified    *bool          `protobuf:"varint,4,opt,name=update_last_modified,def=1" json:"update_last_modified,omitempty"`
	UndeletePlaylistEntry *string        `protobuf:"bytes,5,opt,name=undelete_playlist_entry" json:"undelete_playlist_entry,omitempty"`
	XXX_unrecognized      []byte         `json:"-"`
}

func (m *MutatePlaylistEntryRequest) Reset()         { *m = MutatePlaylistEntryRequest{} }
func (m *MutatePlaylistEntryRequest) String() string { return proto.CompactTextString(m) }
func (*MutatePlaylistEntryRequest) ProtoMessage()    {}

const Default_MutatePlaylistEntryRequest_UpdateLastModified bool = true

func (m *MutatePlaylistEntryRequest) GetCreatePlaylistEntry() *PlaylistEntry {
	if m != nil {
		return m.CreatePlaylistEntry
	}
	return nil
}

func (m *MutatePlaylistEntryRequest) GetUpdatePlaylistEntry() *PlaylistEntry {
	if m != nil {
		return m.UpdatePlaylistEntry
	}
	return nil
}

func (m *MutatePlaylistEntryRequest) GetDeletePlaylistEntry() *PlaylistEntry {
	if m != nil {
		return m.DeletePlaylistEntry
	}
	return nil
}

func (m *MutatePlaylistEntryRequest) GetUpdateLastModified() bool {
	if m != nil && m.UpdateLastModified != nil {
		return *m.UpdateLastModified
	}
	return Default_MutatePlaylistEntryRequest_UpdateLastModified
}

func (m *MutatePlaylistEntryRequest) GetUndeletePlaylistEntry() string {
	if m != nil && m.UndeletePlaylistEntry != nil {
		return *m.UndeletePlaylistEntry
	}
	return ""
}

type BatchMutatePlaylistEntriesRequest struct {
	GaiaId                   *int64                        `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	PlaylistEntryMutation    []*MutatePlaylistEntryRequest `protobuf:"bytes,2,rep,name=playlist_entry_mutation" json:"playlist_entry_mutation,omitempty"`
	SendNotification         *bool                         `protobuf:"varint,3,opt,name=send_notification,def=1" json:"send_notification,omitempty"`
	DetectTimestampConflict  *bool                         `protobuf:"varint,4,opt,name=detect_timestamp_conflict,def=1" json:"detect_timestamp_conflict,omitempty"`
	NotifyFineGrainedUpdates *bool                         `protobuf:"varint,5,opt,name=notify_fine_grained_updates,def=0" json:"notify_fine_grained_updates,omitempty"`
	XXX_unrecognized         []byte                        `json:"-"`
}

func (m *BatchMutatePlaylistEntriesRequest) Reset()         { *m = BatchMutatePlaylistEntriesRequest{} }
func (m *BatchMutatePlaylistEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*BatchMutatePlaylistEntriesRequest) ProtoMessage()    {}

const Default_BatchMutatePlaylistEntriesRequest_SendNotification bool = true
const Default_BatchMutatePlaylistEntriesRequest_DetectTimestampConflict bool = true
const Default_BatchMutatePlaylistEntriesRequest_NotifyFineGrainedUpdates bool = false

func (m *BatchMutatePlaylistEntriesRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *BatchMutatePlaylistEntriesRequest) GetPlaylistEntryMutation() []*MutatePlaylistEntryRequest {
	if m != nil {
		return m.PlaylistEntryMutation
	}
	return nil
}

func (m *BatchMutatePlaylistEntriesRequest) GetSendNotification() bool {
	if m != nil && m.SendNotification != nil {
		return *m.SendNotification
	}
	return Default_BatchMutatePlaylistEntriesRequest_SendNotification
}

func (m *BatchMutatePlaylistEntriesRequest) GetDetectTimestampConflict() bool {
	if m != nil && m.DetectTimestampConflict != nil {
		return *m.DetectTimestampConflict
	}
	return Default_BatchMutatePlaylistEntriesRequest_DetectTimestampConflict
}

func (m *BatchMutatePlaylistEntriesRequest) GetNotifyFineGrainedUpdates() bool {
	if m != nil && m.NotifyFineGrainedUpdates != nil {
		return *m.NotifyFineGrainedUpdates
	}
	return Default_BatchMutatePlaylistEntriesRequest_NotifyFineGrainedUpdates
}

type BatchMutatePlaylistEntriesResponse struct {
	ResponseCode     []BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode `protobuf:"varint,1,rep,name=response_code,enum=musicmanager.BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode" json:"response_code,omitempty"`
	MutateResponse   []*MutateResponse                                                           `protobuf:"bytes,2,rep,name=mutate_response" json:"mutate_response,omitempty"`
	XXX_unrecognized []byte                                                                      `json:"-"`
}

func (m *BatchMutatePlaylistEntriesResponse) Reset()         { *m = BatchMutatePlaylistEntriesResponse{} }
func (m *BatchMutatePlaylistEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*BatchMutatePlaylistEntriesResponse) ProtoMessage()    {}

func (m *BatchMutatePlaylistEntriesResponse) GetResponseCode() []BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode {
	if m != nil {
		return m.ResponseCode
	}
	return nil
}

func (m *BatchMutatePlaylistEntriesResponse) GetMutateResponse() []*MutateResponse {
	if m != nil {
		return m.MutateResponse
	}
	return nil
}

type MagicPlaylistSeed struct {
	SeedType         *MagicPlaylistSeed_SeedType `protobuf:"varint,1,req,name=seed_type,enum=musicmanager.MagicPlaylistSeed_SeedType" json:"seed_type,omitempty"`
	Seed             *string                     `protobuf:"bytes,2,req,name=seed" json:"seed,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *MagicPlaylistSeed) Reset()         { *m = MagicPlaylistSeed{} }
func (m *MagicPlaylistSeed) String() string { return proto.CompactTextString(m) }
func (*MagicPlaylistSeed) ProtoMessage()    {}

func (m *MagicPlaylistSeed) GetSeedType() MagicPlaylistSeed_SeedType {
	if m != nil && m.SeedType != nil {
		return *m.SeedType
	}
	return MagicPlaylistSeed_TRACK
}

func (m *MagicPlaylistSeed) GetSeed() string {
	if m != nil && m.Seed != nil {
		return *m.Seed
	}
	return ""
}

type MagicPlaylistRequest struct {
	GaiaId                  *int64               `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	PlaylistName            *string              `protobuf:"bytes,2,opt,name=playlist_name" json:"playlist_name,omitempty"`
	PlaylistId              *string              `protobuf:"bytes,3,opt,name=playlist_id" json:"playlist_id,omitempty"`
	Seed                    []*MagicPlaylistSeed `protobuf:"bytes,4,rep,name=seed" json:"seed,omitempty"`
	NumRecommendations      *int32               `protobuf:"varint,5,opt,name=num_recommendations" json:"num_recommendations,omitempty"`
	IncludeAllTrackMetadata *bool                `protobuf:"varint,6,opt,name=include_all_track_metadata,def=0" json:"include_all_track_metadata,omitempty"`
	ModelName               *string              `protobuf:"bytes,7,opt,name=model_name" json:"model_name,omitempty"`
	XXX_unrecognized        []byte               `json:"-"`
}

func (m *MagicPlaylistRequest) Reset()         { *m = MagicPlaylistRequest{} }
func (m *MagicPlaylistRequest) String() string { return proto.CompactTextString(m) }
func (*MagicPlaylistRequest) ProtoMessage()    {}

const Default_MagicPlaylistRequest_IncludeAllTrackMetadata bool = false

func (m *MagicPlaylistRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *MagicPlaylistRequest) GetPlaylistName() string {
	if m != nil && m.PlaylistName != nil {
		return *m.PlaylistName
	}
	return ""
}

func (m *MagicPlaylistRequest) GetPlaylistId() string {
	if m != nil && m.PlaylistId != nil {
		return *m.PlaylistId
	}
	return ""
}

func (m *MagicPlaylistRequest) GetSeed() []*MagicPlaylistSeed {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *MagicPlaylistRequest) GetNumRecommendations() int32 {
	if m != nil && m.NumRecommendations != nil {
		return *m.NumRecommendations
	}
	return 0
}

func (m *MagicPlaylistRequest) GetIncludeAllTrackMetadata() bool {
	if m != nil && m.IncludeAllTrackMetadata != nil {
		return *m.IncludeAllTrackMetadata
	}
	return Default_MagicPlaylistRequest_IncludeAllTrackMetadata
}

func (m *MagicPlaylistRequest) GetModelName() string {
	if m != nil && m.ModelName != nil {
		return *m.ModelName
	}
	return ""
}

type MagicPlaylistResponse struct {
	Playlist         *Playlist        `protobuf:"bytes,1,opt,name=playlist" json:"playlist,omitempty"`
	PlaylistEntry    []*PlaylistEntry `protobuf:"bytes,2,rep,name=playlist_entry" json:"playlist_entry,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *MagicPlaylistResponse) Reset()         { *m = MagicPlaylistResponse{} }
func (m *MagicPlaylistResponse) String() string { return proto.CompactTextString(m) }
func (*MagicPlaylistResponse) ProtoMessage()    {}

func (m *MagicPlaylistResponse) GetPlaylist() *Playlist {
	if m != nil {
		return m.Playlist
	}
	return nil
}

func (m *MagicPlaylistResponse) GetPlaylistEntry() []*PlaylistEntry {
	if m != nil {
		return m.PlaylistEntry
	}
	return nil
}

type FlushLockerRequest struct {
	GaiaId                   *int64  `protobuf:"varint,1,opt,name=gaia_id" json:"gaia_id,omitempty"`
	GaiaCookie               *string `protobuf:"bytes,2,opt,name=gaia_cookie" json:"gaia_cookie,omitempty"`
	RemoveAudioBinaries      *bool   `protobuf:"varint,3,opt,name=remove_audio_binaries,def=1" json:"remove_audio_binaries,omitempty"`
	RemoveImageBinaries      *bool   `protobuf:"varint,4,opt,name=remove_image_binaries,def=1" json:"remove_image_binaries,omitempty"`
	SendNotification         *bool   `protobuf:"varint,5,opt,name=send_notification,def=1" json:"send_notification,omitempty"`
	ResetSubscriptionType    *bool   `protobuf:"varint,6,opt,name=reset_subscription_type,def=0" json:"reset_subscription_type,omitempty"`
	NotifyFineGrainedUpdates *bool   `protobuf:"varint,8,opt,name=notify_fine_grained_updates,def=1" json:"notify_fine_grained_updates,omitempty"`
	XXX_unrecognized         []byte  `json:"-"`
}

func (m *FlushLockerRequest) Reset()         { *m = FlushLockerRequest{} }
func (m *FlushLockerRequest) String() string { return proto.CompactTextString(m) }
func (*FlushLockerRequest) ProtoMessage()    {}

const Default_FlushLockerRequest_RemoveAudioBinaries bool = true
const Default_FlushLockerRequest_RemoveImageBinaries bool = true
const Default_FlushLockerRequest_SendNotification bool = true
const Default_FlushLockerRequest_ResetSubscriptionType bool = false
const Default_FlushLockerRequest_NotifyFineGrainedUpdates bool = true

func (m *FlushLockerRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *FlushLockerRequest) GetGaiaCookie() string {
	if m != nil && m.GaiaCookie != nil {
		return *m.GaiaCookie
	}
	return ""
}

func (m *FlushLockerRequest) GetRemoveAudioBinaries() bool {
	if m != nil && m.RemoveAudioBinaries != nil {
		return *m.RemoveAudioBinaries
	}
	return Default_FlushLockerRequest_RemoveAudioBinaries
}

func (m *FlushLockerRequest) GetRemoveImageBinaries() bool {
	if m != nil && m.RemoveImageBinaries != nil {
		return *m.RemoveImageBinaries
	}
	return Default_FlushLockerRequest_RemoveImageBinaries
}

func (m *FlushLockerRequest) GetSendNotification() bool {
	if m != nil && m.SendNotification != nil {
		return *m.SendNotification
	}
	return Default_FlushLockerRequest_SendNotification
}

func (m *FlushLockerRequest) GetResetSubscriptionType() bool {
	if m != nil && m.ResetSubscriptionType != nil {
		return *m.ResetSubscriptionType
	}
	return Default_FlushLockerRequest_ResetSubscriptionType
}

func (m *FlushLockerRequest) GetNotifyFineGrainedUpdates() bool {
	if m != nil && m.NotifyFineGrainedUpdates != nil {
		return *m.NotifyFineGrainedUpdates
	}
	return Default_FlushLockerRequest_NotifyFineGrainedUpdates
}

type FlushLockerResponse struct {
	TracksRemoved                *int32 `protobuf:"varint,1,opt,name=tracks_removed" json:"tracks_removed,omitempty"`
	EntriesRemoved               *int32 `protobuf:"varint,2,opt,name=entries_removed" json:"entries_removed,omitempty"`
	PlaylistsRemoved             *int32 `protobuf:"varint,3,opt,name=playlists_removed" json:"playlists_removed,omitempty"`
	SuccessResetSubscriptionType *bool  `protobuf:"varint,4,opt,name=success_reset_subscription_type" json:"success_reset_subscription_type,omitempty"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *FlushLockerResponse) Reset()         { *m = FlushLockerResponse{} }
func (m *FlushLockerResponse) String() string { return proto.CompactTextString(m) }
func (*FlushLockerResponse) ProtoMessage()    {}

func (m *FlushLockerResponse) GetTracksRemoved() int32 {
	if m != nil && m.TracksRemoved != nil {
		return *m.TracksRemoved
	}
	return 0
}

func (m *FlushLockerResponse) GetEntriesRemoved() int32 {
	if m != nil && m.EntriesRemoved != nil {
		return *m.EntriesRemoved
	}
	return 0
}

func (m *FlushLockerResponse) GetPlaylistsRemoved() int32 {
	if m != nil && m.PlaylistsRemoved != nil {
		return *m.PlaylistsRemoved
	}
	return 0
}

func (m *FlushLockerResponse) GetSuccessResetSubscriptionType() bool {
	if m != nil && m.SuccessResetSubscriptionType != nil {
		return *m.SuccessResetSubscriptionType
	}
	return false
}

type LockerNotification struct {
	GaiaId           *int64 `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	Payload          []byte `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LockerNotification) Reset()         { *m = LockerNotification{} }
func (m *LockerNotification) String() string { return proto.CompactTextString(m) }
func (*LockerNotification) ProtoMessage()    {}

func (m *LockerNotification) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *LockerNotification) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Album struct {
	Name              *string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AlbumArtist       *string   `protobuf:"bytes,2,opt,name=album_artist" json:"album_artist,omitempty"`
	AlbumArt          *ImageRef `protobuf:"bytes,3,opt,name=album_art" json:"album_art,omitempty"`
	TrackCount        *int32    `protobuf:"varint,4,opt,name=track_count" json:"track_count,omitempty"`
	LastTimePlayed    *int64    `protobuf:"varint,5,opt,name=last_time_played" json:"last_time_played,omitempty"`
	IsCompilation     *bool     `protobuf:"varint,6,opt,name=is_compilation" json:"is_compilation,omitempty"`
	AlbumMetajamId    *string   `protobuf:"bytes,7,opt,name=album_metajam_id" json:"album_metajam_id,omitempty"`
	CreationTimestamp *int64    `protobuf:"varint,8,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	Artist            *string   `protobuf:"bytes,9,opt,name=artist" json:"artist,omitempty"`
	XXX_unrecognized  []byte    `json:"-"`
}

func (m *Album) Reset()         { *m = Album{} }
func (m *Album) String() string { return proto.CompactTextString(m) }
func (*Album) ProtoMessage()    {}

func (m *Album) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Album) GetAlbumArtist() string {
	if m != nil && m.AlbumArtist != nil {
		return *m.AlbumArtist
	}
	return ""
}

func (m *Album) GetAlbumArt() *ImageRef {
	if m != nil {
		return m.AlbumArt
	}
	return nil
}

func (m *Album) GetTrackCount() int32 {
	if m != nil && m.TrackCount != nil {
		return *m.TrackCount
	}
	return 0
}

func (m *Album) GetLastTimePlayed() int64 {
	if m != nil && m.LastTimePlayed != nil {
		return *m.LastTimePlayed
	}
	return 0
}

func (m *Album) GetIsCompilation() bool {
	if m != nil && m.IsCompilation != nil {
		return *m.IsCompilation
	}
	return false
}

func (m *Album) GetAlbumMetajamId() string {
	if m != nil && m.AlbumMetajamId != nil {
		return *m.AlbumMetajamId
	}
	return ""
}

func (m *Album) GetCreationTimestamp() int64 {
	if m != nil && m.CreationTimestamp != nil {
		return *m.CreationTimestamp
	}
	return 0
}

func (m *Album) GetArtist() string {
	if m != nil && m.Artist != nil {
		return *m.Artist
	}
	return ""
}

type AlbumSortOrder struct {
	Attribute        *AlbumSortOrder_AlbumAttribute `protobuf:"varint,1,opt,name=attribute,enum=musicmanager.AlbumSortOrder_AlbumAttribute" json:"attribute,omitempty"`
	Descending       *bool                          `protobuf:"varint,2,opt,name=descending,def=0" json:"descending,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *AlbumSortOrder) Reset()         { *m = AlbumSortOrder{} }
func (m *AlbumSortOrder) String() string { return proto.CompactTextString(m) }
func (*AlbumSortOrder) ProtoMessage()    {}

const Default_AlbumSortOrder_Descending bool = false

func (m *AlbumSortOrder) GetAttribute() AlbumSortOrder_AlbumAttribute {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return AlbumSortOrder_LAST_PLAYED_TIME
}

func (m *AlbumSortOrder) GetDescending() bool {
	if m != nil && m.Descending != nil {
		return *m.Descending
	}
	return Default_AlbumSortOrder_Descending
}

type GetAlbumsRequest struct {
	GaiaId           *int64          `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	SortOrder        *AlbumSortOrder `protobuf:"bytes,2,opt,name=sort_order" json:"sort_order,omitempty"`
	MaxResults       *int32          `protobuf:"varint,3,opt,name=max_results" json:"max_results,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GetAlbumsRequest) Reset()         { *m = GetAlbumsRequest{} }
func (m *GetAlbumsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAlbumsRequest) ProtoMessage()    {}

func (m *GetAlbumsRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetAlbumsRequest) GetSortOrder() *AlbumSortOrder {
	if m != nil {
		return m.SortOrder
	}
	return nil
}

func (m *GetAlbumsRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return 0
}

type GetAlbumsResponse struct {
	Album            []*Album `protobuf:"bytes,1,rep,name=album" json:"album,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GetAlbumsResponse) Reset()         { *m = GetAlbumsResponse{} }
func (m *GetAlbumsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAlbumsResponse) ProtoMessage()    {}

func (m *GetAlbumsResponse) GetAlbum() []*Album {
	if m != nil {
		return m.Album
	}
	return nil
}

type Artist struct {
	Name             *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TotalTrackCount  *int32   `protobuf:"varint,2,opt,name=total_track_count" json:"total_track_count,omitempty"`
	Album            []*Album `protobuf:"bytes,3,rep,name=album" json:"album,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Artist) Reset()         { *m = Artist{} }
func (m *Artist) String() string { return proto.CompactTextString(m) }
func (*Artist) ProtoMessage()    {}

func (m *Artist) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Artist) GetTotalTrackCount() int32 {
	if m != nil && m.TotalTrackCount != nil {
		return *m.TotalTrackCount
	}
	return 0
}

func (m *Artist) GetAlbum() []*Album {
	if m != nil {
		return m.Album
	}
	return nil
}

type ArtistSortOrder struct {
	Descending       *bool  `protobuf:"varint,2,opt,name=descending,def=0" json:"descending,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArtistSortOrder) Reset()         { *m = ArtistSortOrder{} }
func (m *ArtistSortOrder) String() string { return proto.CompactTextString(m) }
func (*ArtistSortOrder) ProtoMessage()    {}

const Default_ArtistSortOrder_Descending bool = false

func (m *ArtistSortOrder) GetDescending() bool {
	if m != nil && m.Descending != nil {
		return *m.Descending
	}
	return Default_ArtistSortOrder_Descending
}

type GetArtistsRequest struct {
	GaiaId           *int64           `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	SortOrder        *ArtistSortOrder `protobuf:"bytes,2,opt,name=sort_order" json:"sort_order,omitempty"`
	MaxResults       *int32           `protobuf:"varint,3,opt,name=max_results" json:"max_results,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GetArtistsRequest) Reset()         { *m = GetArtistsRequest{} }
func (m *GetArtistsRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtistsRequest) ProtoMessage()    {}

func (m *GetArtistsRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetArtistsRequest) GetSortOrder() *ArtistSortOrder {
	if m != nil {
		return m.SortOrder
	}
	return nil
}

func (m *GetArtistsRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return 0
}

type GetArtistsResponse struct {
	Artist           []*Artist `protobuf:"bytes,1,rep,name=artist" json:"artist,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GetArtistsResponse) Reset()         { *m = GetArtistsResponse{} }
func (m *GetArtistsResponse) String() string { return proto.CompactTextString(m) }
func (*GetArtistsResponse) ProtoMessage()    {}

func (m *GetArtistsResponse) GetArtist() []*Artist {
	if m != nil {
		return m.Artist
	}
	return nil
}

type MusicGenre struct {
	Name             *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TotalTrackCount  *int32   `protobuf:"varint,2,opt,name=total_track_count" json:"total_track_count,omitempty"`
	Album            []*Album `protobuf:"bytes,3,rep,name=album" json:"album,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MusicGenre) Reset()         { *m = MusicGenre{} }
func (m *MusicGenre) String() string { return proto.CompactTextString(m) }
func (*MusicGenre) ProtoMessage()    {}

func (m *MusicGenre) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MusicGenre) GetTotalTrackCount() int32 {
	if m != nil && m.TotalTrackCount != nil {
		return *m.TotalTrackCount
	}
	return 0
}

func (m *MusicGenre) GetAlbum() []*Album {
	if m != nil {
		return m.Album
	}
	return nil
}

type GenreSortOrder struct {
	Descending       *bool  `protobuf:"varint,2,opt,name=descending,def=0" json:"descending,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GenreSortOrder) Reset()         { *m = GenreSortOrder{} }
func (m *GenreSortOrder) String() string { return proto.CompactTextString(m) }
func (*GenreSortOrder) ProtoMessage()    {}

const Default_GenreSortOrder_Descending bool = false

func (m *GenreSortOrder) GetDescending() bool {
	if m != nil && m.Descending != nil {
		return *m.Descending
	}
	return Default_GenreSortOrder_Descending
}

type GetGenresRequest struct {
	GaiaId           *int64          `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	SortOrder        *GenreSortOrder `protobuf:"bytes,2,opt,name=sort_order" json:"sort_order,omitempty"`
	MaxResults       *int32          `protobuf:"varint,3,opt,name=max_results" json:"max_results,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GetGenresRequest) Reset()         { *m = GetGenresRequest{} }
func (m *GetGenresRequest) String() string { return proto.CompactTextString(m) }
func (*GetGenresRequest) ProtoMessage()    {}

func (m *GetGenresRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetGenresRequest) GetSortOrder() *GenreSortOrder {
	if m != nil {
		return m.SortOrder
	}
	return nil
}

func (m *GetGenresRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return 0
}

type GetGenresResponse struct {
	Genre            []*MusicGenre `protobuf:"bytes,1,rep,name=genre" json:"genre,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GetGenresResponse) Reset()         { *m = GetGenresResponse{} }
func (m *GetGenresResponse) String() string { return proto.CompactTextString(m) }
func (*GetGenresResponse) ProtoMessage()    {}

func (m *GetGenresResponse) GetGenre() []*MusicGenre {
	if m != nil {
		return m.Genre
	}
	return nil
}

type GetDynamicPlaylistEntriesRequest struct {
	GaiaId                  *int64                                                       `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	PlaylistEntriesType     *GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType `protobuf:"varint,4,req,name=playlist_entries_type,enum=musicmanager.GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType" json:"playlist_entries_type,omitempty"`
	MaxResults              *int32                                                       `protobuf:"varint,2,opt,name=max_results" json:"max_results,omitempty"`
	ContinuationToken       *string                                                      `protobuf:"bytes,3,opt,name=continuation_token" json:"continuation_token,omitempty"`
	IncludeAllTrackMetadata *bool                                                        `protobuf:"varint,5,opt,name=include_all_track_metadata,def=0" json:"include_all_track_metadata,omitempty"`
	XXX_unrecognized        []byte                                                       `json:"-"`
}

func (m *GetDynamicPlaylistEntriesRequest) Reset()         { *m = GetDynamicPlaylistEntriesRequest{} }
func (m *GetDynamicPlaylistEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDynamicPlaylistEntriesRequest) ProtoMessage()    {}

const Default_GetDynamicPlaylistEntriesRequest_IncludeAllTrackMetadata bool = false

func (m *GetDynamicPlaylistEntriesRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetDynamicPlaylistEntriesRequest) GetPlaylistEntriesType() GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType {
	if m != nil && m.PlaylistEntriesType != nil {
		return *m.PlaylistEntriesType
	}
	return GetDynamicPlaylistEntriesRequest_PURCHASED
}

func (m *GetDynamicPlaylistEntriesRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return 0
}

func (m *GetDynamicPlaylistEntriesRequest) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

func (m *GetDynamicPlaylistEntriesRequest) GetIncludeAllTrackMetadata() bool {
	if m != nil && m.IncludeAllTrackMetadata != nil {
		return *m.IncludeAllTrackMetadata
	}
	return Default_GetDynamicPlaylistEntriesRequest_IncludeAllTrackMetadata
}

type GetDynamicPlaylistEntriesResponse struct {
	ResponseCode          *GetDynamicPlaylistEntriesResponse_ResponseCode               `protobuf:"varint,1,req,name=response_code,enum=musicmanager.GetDynamicPlaylistEntriesResponse_ResponseCode" json:"response_code,omitempty"`
	PlaylistEntry         []*PlaylistEntry                                              `protobuf:"bytes,2,rep,name=playlist_entry" json:"playlist_entry,omitempty"`
	EstimatedTotalResults *int64                                                        `protobuf:"varint,3,opt,name=estimated_total_results" json:"estimated_total_results,omitempty"`
	ContinuationToken     *string                                                       `protobuf:"bytes,4,opt,name=continuation_token" json:"continuation_token,omitempty"`
	PlaylistEntriesType   *GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType `protobuf:"varint,5,opt,name=playlist_entries_type,enum=musicmanager.GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType" json:"playlist_entries_type,omitempty"`
	XXX_unrecognized      []byte                                                        `json:"-"`
}

func (m *GetDynamicPlaylistEntriesResponse) Reset()         { *m = GetDynamicPlaylistEntriesResponse{} }
func (m *GetDynamicPlaylistEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDynamicPlaylistEntriesResponse) ProtoMessage()    {}

func (m *GetDynamicPlaylistEntriesResponse) GetResponseCode() GetDynamicPlaylistEntriesResponse_ResponseCode {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return GetDynamicPlaylistEntriesResponse_OK
}

func (m *GetDynamicPlaylistEntriesResponse) GetPlaylistEntry() []*PlaylistEntry {
	if m != nil {
		return m.PlaylistEntry
	}
	return nil
}

func (m *GetDynamicPlaylistEntriesResponse) GetEstimatedTotalResults() int64 {
	if m != nil && m.EstimatedTotalResults != nil {
		return *m.EstimatedTotalResults
	}
	return 0
}

func (m *GetDynamicPlaylistEntriesResponse) GetContinuationToken() string {
	if m != nil && m.ContinuationToken != nil {
		return *m.ContinuationToken
	}
	return ""
}

func (m *GetDynamicPlaylistEntriesResponse) GetPlaylistEntriesType() GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType {
	if m != nil && m.PlaylistEntriesType != nil {
		return *m.PlaylistEntriesType
	}
	return GetDynamicPlaylistEntriesResponse_PURCHASED
}

type GetAggregationsByTrackTypeRequest struct {
	GaiaId           *int64 `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAggregationsByTrackTypeRequest) Reset()         { *m = GetAggregationsByTrackTypeRequest{} }
func (m *GetAggregationsByTrackTypeRequest) String() string { return proto.CompactTextString(m) }
func (*GetAggregationsByTrackTypeRequest) ProtoMessage()    {}

func (m *GetAggregationsByTrackTypeRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

type TrackTypeAggregate struct {
	TrackTypeValue   *TrackTypeAggregate_TrackType `protobuf:"varint,1,opt,name=track_type_value,enum=musicmanager.TrackTypeAggregate_TrackType" json:"track_type_value,omitempty"`
	Count            *int32                        `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *TrackTypeAggregate) Reset()         { *m = TrackTypeAggregate{} }
func (m *TrackTypeAggregate) String() string { return proto.CompactTextString(m) }
func (*TrackTypeAggregate) ProtoMessage()    {}

func (m *TrackTypeAggregate) GetTrackTypeValue() TrackTypeAggregate_TrackType {
	if m != nil && m.TrackTypeValue != nil {
		return *m.TrackTypeValue
	}
	return TrackTypeAggregate_MATCHED_TRACK
}

func (m *TrackTypeAggregate) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type GetAggregationsByTrackTypeResponse struct {
	TrackTypeAggregate []*TrackTypeAggregate `protobuf:"bytes,1,rep,name=track_type_aggregate" json:"track_type_aggregate,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *GetAggregationsByTrackTypeResponse) Reset()         { *m = GetAggregationsByTrackTypeResponse{} }
func (m *GetAggregationsByTrackTypeResponse) String() string { return proto.CompactTextString(m) }
func (*GetAggregationsByTrackTypeResponse) ProtoMessage()    {}

func (m *GetAggregationsByTrackTypeResponse) GetTrackTypeAggregate() []*TrackTypeAggregate {
	if m != nil {
		return m.TrackTypeAggregate
	}
	return nil
}

type GetAggregationsByAvailabilityStatusRequest struct {
	GaiaId           *int64 `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAggregationsByAvailabilityStatusRequest) Reset() {
	*m = GetAggregationsByAvailabilityStatusRequest{}
}
func (m *GetAggregationsByAvailabilityStatusRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetAggregationsByAvailabilityStatusRequest) ProtoMessage() {}

func (m *GetAggregationsByAvailabilityStatusRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

type AvailabilityStatusAggregate struct {
	AvailabilityStatus *AvailabilityStatusAggregate_AvailabilityStatus `protobuf:"varint,1,opt,name=availability_status,enum=musicmanager.AvailabilityStatusAggregate_AvailabilityStatus" json:"availability_status,omitempty"`
	Count              *int32                                          `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized   []byte                                          `json:"-"`
}

func (m *AvailabilityStatusAggregate) Reset()         { *m = AvailabilityStatusAggregate{} }
func (m *AvailabilityStatusAggregate) String() string { return proto.CompactTextString(m) }
func (*AvailabilityStatusAggregate) ProtoMessage()    {}

func (m *AvailabilityStatusAggregate) GetAvailabilityStatus() AvailabilityStatusAggregate_AvailabilityStatus {
	if m != nil && m.AvailabilityStatus != nil {
		return *m.AvailabilityStatus
	}
	return AvailabilityStatusAggregate_PENDING
}

func (m *AvailabilityStatusAggregate) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type GetAggregationsByAvailabilityStatusResponse struct {
	AvailabilityStatusAggregate []*AvailabilityStatusAggregate `protobuf:"bytes,1,rep,name=availability_status_aggregate" json:"availability_status_aggregate,omitempty"`
	XXX_unrecognized            []byte                         `json:"-"`
}

func (m *GetAggregationsByAvailabilityStatusResponse) Reset() {
	*m = GetAggregationsByAvailabilityStatusResponse{}
}
func (m *GetAggregationsByAvailabilityStatusResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetAggregationsByAvailabilityStatusResponse) ProtoMessage() {}

func (m *GetAggregationsByAvailabilityStatusResponse) GetAvailabilityStatusAggregate() []*AvailabilityStatusAggregate {
	if m != nil {
		return m.AvailabilityStatusAggregate
	}
	return nil
}

type AddPromoTracksRequest struct {
	GaiaId           *int64   `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	Genre            []string `protobuf:"bytes,2,rep,name=genre" json:"genre,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AddPromoTracksRequest) Reset()         { *m = AddPromoTracksRequest{} }
func (m *AddPromoTracksRequest) String() string { return proto.CompactTextString(m) }
func (*AddPromoTracksRequest) ProtoMessage()    {}

func (m *AddPromoTracksRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *AddPromoTracksRequest) GetGenre() []string {
	if m != nil {
		return m.Genre
	}
	return nil
}

type AddPromoTracksResponse struct {
	Track            []*Track `protobuf:"bytes,1,rep,name=track" json:"track,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AddPromoTracksResponse) Reset()         { *m = AddPromoTracksResponse{} }
func (m *AddPromoTracksResponse) String() string { return proto.CompactTextString(m) }
func (*AddPromoTracksResponse) ProtoMessage()    {}

func (m *AddPromoTracksResponse) GetTrack() []*Track {
	if m != nil {
		return m.Track
	}
	return nil
}

type GetPlaylistAggregationsRequest struct {
	GaiaId           *int64 `protobuf:"varint,1,req,name=gaia_id" json:"gaia_id,omitempty"`
	MaxResults       *int32 `protobuf:"varint,2,opt,name=max_results,def=14" json:"max_results,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetPlaylistAggregationsRequest) Reset()         { *m = GetPlaylistAggregationsRequest{} }
func (m *GetPlaylistAggregationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistAggregationsRequest) ProtoMessage()    {}

const Default_GetPlaylistAggregationsRequest_MaxResults int32 = 14

func (m *GetPlaylistAggregationsRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *GetPlaylistAggregationsRequest) GetMaxResults() int32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return Default_GetPlaylistAggregationsRequest_MaxResults
}

type PlaylistAggregate struct {
	PlaylistId       *string   `protobuf:"bytes,1,opt,name=playlist_id" json:"playlist_id,omitempty"`
	Name             *string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AlbumArt         *ImageRef `protobuf:"bytes,3,opt,name=album_art" json:"album_art,omitempty"`
	TrackCount       *int64    `protobuf:"varint,4,opt,name=track_count" json:"track_count,omitempty"`
	LastTimePlayed   *int64    `protobuf:"varint,5,opt,name=last_time_played" json:"last_time_played,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *PlaylistAggregate) Reset()         { *m = PlaylistAggregate{} }
func (m *PlaylistAggregate) String() string { return proto.CompactTextString(m) }
func (*PlaylistAggregate) ProtoMessage()    {}

func (m *PlaylistAggregate) GetPlaylistId() string {
	if m != nil && m.PlaylistId != nil {
		return *m.PlaylistId
	}
	return ""
}

func (m *PlaylistAggregate) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PlaylistAggregate) GetAlbumArt() *ImageRef {
	if m != nil {
		return m.AlbumArt
	}
	return nil
}

func (m *PlaylistAggregate) GetTrackCount() int64 {
	if m != nil && m.TrackCount != nil {
		return *m.TrackCount
	}
	return 0
}

func (m *PlaylistAggregate) GetLastTimePlayed() int64 {
	if m != nil && m.LastTimePlayed != nil {
		return *m.LastTimePlayed
	}
	return 0
}

type GetPlaylistAggregationsResponse struct {
	PlaylistAggregate []*PlaylistAggregate `protobuf:"bytes,1,rep,name=playlist_aggregate" json:"playlist_aggregate,omitempty"`
	XXX_unrecognized  []byte               `json:"-"`
}

func (m *GetPlaylistAggregationsResponse) Reset()         { *m = GetPlaylistAggregationsResponse{} }
func (m *GetPlaylistAggregationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistAggregationsResponse) ProtoMessage()    {}

func (m *GetPlaylistAggregationsResponse) GetPlaylistAggregate() []*PlaylistAggregate {
	if m != nil {
		return m.PlaylistAggregate
	}
	return nil
}

type RemoteControlCommandRequest struct {
	GaiaId           *int64  `protobuf:"varint,1,opt,name=gaia_id" json:"gaia_id,omitempty"`
	Command          *string `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemoteControlCommandRequest) Reset()         { *m = RemoteControlCommandRequest{} }
func (m *RemoteControlCommandRequest) String() string { return proto.CompactTextString(m) }
func (*RemoteControlCommandRequest) ProtoMessage()    {}

func (m *RemoteControlCommandRequest) GetGaiaId() int64 {
	if m != nil && m.GaiaId != nil {
		return *m.GaiaId
	}
	return 0
}

func (m *RemoteControlCommandRequest) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

type RemoteControlCommandResponse struct {
	ResponseCode     *RemoteControlCommandResponse_ResponseCode `protobuf:"varint,1,opt,name=response_code,enum=musicmanager.RemoteControlCommandResponse_ResponseCode" json:"response_code,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *RemoteControlCommandResponse) Reset()         { *m = RemoteControlCommandResponse{} }
func (m *RemoteControlCommandResponse) String() string { return proto.CompactTextString(m) }
func (*RemoteControlCommandResponse) ProtoMessage()    {}

func (m *RemoteControlCommandResponse) GetResponseCode() RemoteControlCommandResponse_ResponseCode {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return RemoteControlCommandResponse_OK
}

func init() {
	proto.RegisterEnum("musicmanager.AudioRef_Store", AudioRef_Store_name, AudioRef_Store_value)
	proto.RegisterEnum("musicmanager.ImageRef_Store", ImageRef_Store_name, ImageRef_Store_value)
	proto.RegisterEnum("musicmanager.ImageRef_Origin", ImageRef_Origin_name, ImageRef_Origin_value)
	proto.RegisterEnum("musicmanager.Track_AvailabilityStatus", Track_AvailabilityStatus_name, Track_AvailabilityStatus_value)
	proto.RegisterEnum("musicmanager.Track_ContentType", Track_ContentType_name, Track_ContentType_value)
	proto.RegisterEnum("musicmanager.Track_Channels", Track_Channels_name, Track_Channels_value)
	proto.RegisterEnum("musicmanager.Track_TrackType", Track_TrackType_name, Track_TrackType_value)
	proto.RegisterEnum("musicmanager.Track_Rating", Track_Rating_name, Track_Rating_value)
	proto.RegisterEnum("musicmanager.Playlist_PlaylistType", Playlist_PlaylistType_name, Playlist_PlaylistType_value)
	proto.RegisterEnum("musicmanager.PlaylistEntry_RelativePositionIdType", PlaylistEntry_RelativePositionIdType_name, PlaylistEntry_RelativePositionIdType_value)
	proto.RegisterEnum("musicmanager.TrackSearchRestriction_TrackAttribute", TrackSearchRestriction_TrackAttribute_name, TrackSearchRestriction_TrackAttribute_value)
	proto.RegisterEnum("musicmanager.TrackSearchRestriction_ComparisonType", TrackSearchRestriction_ComparisonType_name, TrackSearchRestriction_ComparisonType_value)
	proto.RegisterEnum("musicmanager.TrackSearchRestrictionSet_RestrictionSetType", TrackSearchRestrictionSet_RestrictionSetType_name, TrackSearchRestrictionSet_RestrictionSetType_value)
	proto.RegisterEnum("musicmanager.TrackSortOrder_TrackAttribute", TrackSortOrder_TrackAttribute_name, TrackSortOrder_TrackAttribute_value)
	proto.RegisterEnum("musicmanager.GetTracksRequest_TrackProjection", GetTracksRequest_TrackProjection_name, GetTracksRequest_TrackProjection_value)
	proto.RegisterEnum("musicmanager.GetTracksResponse_ResponseCode", GetTracksResponse_ResponseCode_name, GetTracksResponse_ResponseCode_value)
	proto.RegisterEnum("musicmanager.GetPlaylistEntriesResponse_ResponseCode", GetPlaylistEntriesResponse_ResponseCode_name, GetPlaylistEntriesResponse_ResponseCode_value)
	proto.RegisterEnum("musicmanager.PlaylistSortOrder_PlaylistAttribute", PlaylistSortOrder_PlaylistAttribute_name, PlaylistSortOrder_PlaylistAttribute_value)
	proto.RegisterEnum("musicmanager.GetPlaylistsResponse_ResponseCode", GetPlaylistsResponse_ResponseCode_name, GetPlaylistsResponse_ResponseCode_value)
	proto.RegisterEnum("musicmanager.BatchLookupRequest_MetadataType", BatchLookupRequest_MetadataType_name, BatchLookupRequest_MetadataType_value)
	proto.RegisterEnum("musicmanager.MutateResponse_MutateResponseCode", MutateResponse_MutateResponseCode_name, MutateResponse_MutateResponseCode_value)
	proto.RegisterEnum("musicmanager.MutateResponse_AvailabilityStatus", MutateResponse_AvailabilityStatus_name, MutateResponse_AvailabilityStatus_value)
	proto.RegisterEnum("musicmanager.BatchMutateTracksResponse_BatchMutateTracksResponseCode", BatchMutateTracksResponse_BatchMutateTracksResponseCode_name, BatchMutateTracksResponse_BatchMutateTracksResponseCode_value)
	proto.RegisterEnum("musicmanager.BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode", BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode_name, BatchMutatePlaylistsResponse_BatchMutatePlaylistsResponseCode_value)
	proto.RegisterEnum("musicmanager.BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode", BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode_name, BatchMutatePlaylistEntriesResponse_BatchMutatePlaylistEntriesResponseCode_value)
	proto.RegisterEnum("musicmanager.MagicPlaylistSeed_SeedType", MagicPlaylistSeed_SeedType_name, MagicPlaylistSeed_SeedType_value)
	proto.RegisterEnum("musicmanager.AlbumSortOrder_AlbumAttribute", AlbumSortOrder_AlbumAttribute_name, AlbumSortOrder_AlbumAttribute_value)
	proto.RegisterEnum("musicmanager.GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType", GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType_name, GetDynamicPlaylistEntriesRequest_DynamicPlaylistEntriesType_value)
	proto.RegisterEnum("musicmanager.GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType", GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType_name, GetDynamicPlaylistEntriesResponse_DynamicPlaylistEntriesType_value)
	proto.RegisterEnum("musicmanager.GetDynamicPlaylistEntriesResponse_ResponseCode", GetDynamicPlaylistEntriesResponse_ResponseCode_name, GetDynamicPlaylistEntriesResponse_ResponseCode_value)
	proto.RegisterEnum("musicmanager.TrackTypeAggregate_TrackType", TrackTypeAggregate_TrackType_name, TrackTypeAggregate_TrackType_value)
	proto.RegisterEnum("musicmanager.AvailabilityStatusAggregate_AvailabilityStatus", AvailabilityStatusAggregate_AvailabilityStatus_name, AvailabilityStatusAggregate_AvailabilityStatus_value)
	proto.RegisterEnum("musicmanager.RemoteControlCommandResponse_ResponseCode", RemoteControlCommandResponse_ResponseCode_name, RemoteControlCommandResponse_ResponseCode_value)
}
