// Code generated by protoc-gen-go.
// source: my-git.appspot.com/go.google.musicmanager/internal/locker_proto/data/locker.data.proto
// DO NOT EDIT!

/*
Package google_musicmanager_v0 is a generated protocol buffer package.

It is generated from these files:
	my-git.appspot.com/go.google.musicmanager/internal/locker_proto/data/locker.data.proto

It has these top-level messages:
	AudioRef
	ImageRef
	Track
	Playlist
	PlaylistEntry
	Album
	Artist
	Genre
	TrackSortOrder
	PlaylistSortOrder
	AlbumSortOrder
	ArtistSortOrder
	GenreSortOrder
	TrackTypeAggregate
	AvailabilityStatusAggregate
	PlaylistAggregate
	MagicPlaylistSeed
	LockerNotification
	TrackSearchRestriction
	TrackSearchRestrictionSet
*/
package google_musicmanager_v0

import proto "github.com/golang/protobuf/proto"
import google_musicmanager_v01 "my-git.appspot.com/go.google.musicmanager/internal/uits_proto/data"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type AudioRef_Store int32

const (
	AudioRef_DEFAULT   AudioRef_Store = 0
	AudioRef_BLOBSTORE AudioRef_Store = 1
	AudioRef_SM_V2     AudioRef_Store = 2
)

var AudioRef_Store_name = map[int32]string{
	0: "DEFAULT",
	1: "BLOBSTORE",
	2: "SM_V2",
}
var AudioRef_Store_value = map[string]int32{
	"DEFAULT":   0,
	"BLOBSTORE": 1,
	"SM_V2":     2,
}

func (x AudioRef_Store) String() string {
	return proto.EnumName(AudioRef_Store_name, int32(x))
}

type ImageRef_Store int32

const (
	ImageRef_DEFAULT_STORE ImageRef_Store = 0
	ImageRef_SHOEBOX       ImageRef_Store = 3
)

var ImageRef_Store_name = map[int32]string{
	0: "DEFAULT_STORE",
	3: "SHOEBOX",
}
var ImageRef_Store_value = map[string]int32{
	"DEFAULT_STORE": 0,
	"SHOEBOX":       3,
}

func (x ImageRef_Store) String() string {
	return proto.EnumName(ImageRef_Store_name, int32(x))
}

type ImageRef_Origin int32

const (
	ImageRef_DEFAULT_ORIGIN ImageRef_Origin = 0
	ImageRef_PERSONAL       ImageRef_Origin = 1
	ImageRef_STORE          ImageRef_Origin = 2
)

var ImageRef_Origin_name = map[int32]string{
	0: "DEFAULT_ORIGIN",
	1: "PERSONAL",
	2: "STORE",
}
var ImageRef_Origin_value = map[string]int32{
	"DEFAULT_ORIGIN": 0,
	"PERSONAL":       1,
	"STORE":          2,
}

func (x ImageRef_Origin) String() string {
	return proto.EnumName(ImageRef_Origin_name, int32(x))
}

type Track_AvailabilityStatus int32

const (
	Track_DEFAULT_AVAILABILITY      Track_AvailabilityStatus = 0
	Track_PENDING                   Track_AvailabilityStatus = 1
	Track_MATCHED                   Track_AvailabilityStatus = 2
	Track_UPLOAD_REQUESTED          Track_AvailabilityStatus = 3
	Track_AVAILABLE                 Track_AvailabilityStatus = 4
	Track_FORCE_REUPLOAD            Track_AvailabilityStatus = 5
	Track_UPLOAD_PERMANENTLY_FAILED Track_AvailabilityStatus = 6
)

var Track_AvailabilityStatus_name = map[int32]string{
	0: "DEFAULT_AVAILABILITY",
	1: "PENDING",
	2: "MATCHED",
	3: "UPLOAD_REQUESTED",
	4: "AVAILABLE",
	5: "FORCE_REUPLOAD",
	6: "UPLOAD_PERMANENTLY_FAILED",
}
var Track_AvailabilityStatus_value = map[string]int32{
	"DEFAULT_AVAILABILITY":      0,
	"PENDING":                   1,
	"MATCHED":                   2,
	"UPLOAD_REQUESTED":          3,
	"AVAILABLE":                 4,
	"FORCE_REUPLOAD":            5,
	"UPLOAD_PERMANENTLY_FAILED": 6,
}

func (x Track_AvailabilityStatus) String() string {
	return proto.EnumName(Track_AvailabilityStatus_name, int32(x))
}

type Track_ContentType int32

const (
	Track_DEFAULT_FORMAT Track_ContentType = 0
	Track_MP3            Track_ContentType = 1
	Track_M4A            Track_ContentType = 2
	Track_AAC            Track_ContentType = 3
	Track_FLAC           Track_ContentType = 4
	Track_OGG            Track_ContentType = 5
	Track_WMA            Track_ContentType = 6
	Track_M4P            Track_ContentType = 7
	Track_ALAC           Track_ContentType = 8
)

var Track_ContentType_name = map[int32]string{
	0: "DEFAULT_FORMAT",
	1: "MP3",
	2: "M4A",
	3: "AAC",
	4: "FLAC",
	5: "OGG",
	6: "WMA",
	7: "M4P",
	8: "ALAC",
}
var Track_ContentType_value = map[string]int32{
	"DEFAULT_FORMAT": 0,
	"MP3":            1,
	"M4A":            2,
	"AAC":            3,
	"FLAC":           4,
	"OGG":            5,
	"WMA":            6,
	"M4P":            7,
	"ALAC":           8,
}

func (x Track_ContentType) String() string {
	return proto.EnumName(Track_ContentType_name, int32(x))
}

type Track_Channels int32

const (
	Track_DEFAULT_CHANNELS Track_Channels = 0
	Track_MONO             Track_Channels = 1
	Track_STEREO           Track_Channels = 2
)

var Track_Channels_name = map[int32]string{
	0: "DEFAULT_CHANNELS",
	1: "MONO",
	2: "STEREO",
}
var Track_Channels_value = map[string]int32{
	"DEFAULT_CHANNELS": 0,
	"MONO":             1,
	"STEREO":           2,
}

func (x Track_Channels) String() string {
	return proto.EnumName(Track_Channels_name, int32(x))
}

type Track_TrackType int32

const (
	Track_DEFAULT_TRACK               Track_TrackType = 0
	Track_MATCHED_TRACK               Track_TrackType = 1
	Track_UNMATCHED_TRACK             Track_TrackType = 2
	Track_LOCAL_TRACK                 Track_TrackType = 3
	Track_PURCHASED_TRACK             Track_TrackType = 4
	Track_METADATA_ONLY_MATCHED_TRACK Track_TrackType = 5
	Track_PROMO_TRACK                 Track_TrackType = 6
)

var Track_TrackType_name = map[int32]string{
	0: "DEFAULT_TRACK",
	1: "MATCHED_TRACK",
	2: "UNMATCHED_TRACK",
	3: "LOCAL_TRACK",
	4: "PURCHASED_TRACK",
	5: "METADATA_ONLY_MATCHED_TRACK",
	6: "PROMO_TRACK",
}
var Track_TrackType_value = map[string]int32{
	"DEFAULT_TRACK":               0,
	"MATCHED_TRACK":               1,
	"UNMATCHED_TRACK":             2,
	"LOCAL_TRACK":                 3,
	"PURCHASED_TRACK":             4,
	"METADATA_ONLY_MATCHED_TRACK": 5,
	"PROMO_TRACK":                 6,
}

func (x Track_TrackType) String() string {
	return proto.EnumName(Track_TrackType_name, int32(x))
}

type Track_Rating int32

const (
	Track_DEFAULT_RATING Track_Rating = 0
	Track_NOT_RATED      Track_Rating = 1
	Track_ONE_STAR       Track_Rating = 2
	Track_TWO_STARS      Track_Rating = 3
	Track_THREE_STARS    Track_Rating = 4
	Track_FOUR_STARS     Track_Rating = 5
	Track_FIVE_STARS     Track_Rating = 6
)

var Track_Rating_name = map[int32]string{
	0: "DEFAULT_RATING",
	1: "NOT_RATED",
	2: "ONE_STAR",
	3: "TWO_STARS",
	4: "THREE_STARS",
	5: "FOUR_STARS",
	6: "FIVE_STARS",
}
var Track_Rating_value = map[string]int32{
	"DEFAULT_RATING": 0,
	"NOT_RATED":      1,
	"ONE_STAR":       2,
	"TWO_STARS":      3,
	"THREE_STARS":    4,
	"FOUR_STARS":     5,
	"FIVE_STARS":     6,
}

func (x Track_Rating) String() string {
	return proto.EnumName(Track_Rating_name, int32(x))
}

type Playlist_PlaylistType int32

const (
	Playlist_DEFAULT        Playlist_PlaylistType = 0
	Playlist_USER_GENERATED Playlist_PlaylistType = 1
	Playlist_MAGIC          Playlist_PlaylistType = 2
	Playlist_PROMO          Playlist_PlaylistType = 3
)

var Playlist_PlaylistType_name = map[int32]string{
	0: "DEFAULT",
	1: "USER_GENERATED",
	2: "MAGIC",
	3: "PROMO",
}
var Playlist_PlaylistType_value = map[string]int32{
	"DEFAULT":        0,
	"USER_GENERATED": 1,
	"MAGIC":          2,
	"PROMO":          3,
}

func (x Playlist_PlaylistType) String() string {
	return proto.EnumName(Playlist_PlaylistType_name, int32(x))
}

type PlaylistEntry_RelativePositionIdType int32

const (
	PlaylistEntry_DEFAULT PlaylistEntry_RelativePositionIdType = 0
	PlaylistEntry_SERVER  PlaylistEntry_RelativePositionIdType = 1
	PlaylistEntry_CLIENT  PlaylistEntry_RelativePositionIdType = 2
)

var PlaylistEntry_RelativePositionIdType_name = map[int32]string{
	0: "DEFAULT",
	1: "SERVER",
	2: "CLIENT",
}
var PlaylistEntry_RelativePositionIdType_value = map[string]int32{
	"DEFAULT": 0,
	"SERVER":  1,
	"CLIENT":  2,
}

func (x PlaylistEntry_RelativePositionIdType) String() string {
	return proto.EnumName(PlaylistEntry_RelativePositionIdType_name, int32(x))
}

type TrackSortOrder_TrackAttribute int32

const (
	TrackSortOrder_DEFAULT            TrackSortOrder_TrackAttribute = 0
	TrackSortOrder_LAST_MODIFIED_TIME TrackSortOrder_TrackAttribute = 1
	TrackSortOrder_ARTIST             TrackSortOrder_TrackAttribute = 2
	TrackSortOrder_ALBUM              TrackSortOrder_TrackAttribute = 3
	TrackSortOrder_TITLE              TrackSortOrder_TrackAttribute = 4
	TrackSortOrder_TRACK_NUMBER       TrackSortOrder_TrackAttribute = 6
	TrackSortOrder_PLAY_COUNT         TrackSortOrder_TrackAttribute = 9
	TrackSortOrder_DURATION_MILLIS    TrackSortOrder_TrackAttribute = 10
	TrackSortOrder_RATING             TrackSortOrder_TrackAttribute = 11
	TrackSortOrder_CREATION_TIME      TrackSortOrder_TrackAttribute = 12
)

var TrackSortOrder_TrackAttribute_name = map[int32]string{
	0:  "DEFAULT",
	1:  "LAST_MODIFIED_TIME",
	2:  "ARTIST",
	3:  "ALBUM",
	4:  "TITLE",
	6:  "TRACK_NUMBER",
	9:  "PLAY_COUNT",
	10: "DURATION_MILLIS",
	11: "RATING",
	12: "CREATION_TIME",
}
var TrackSortOrder_TrackAttribute_value = map[string]int32{
	"DEFAULT":            0,
	"LAST_MODIFIED_TIME": 1,
	"ARTIST":             2,
	"ALBUM":              3,
	"TITLE":              4,
	"TRACK_NUMBER":       6,
	"PLAY_COUNT":         9,
	"DURATION_MILLIS":    10,
	"RATING":             11,
	"CREATION_TIME":      12,
}

func (x TrackSortOrder_TrackAttribute) String() string {
	return proto.EnumName(TrackSortOrder_TrackAttribute_name, int32(x))
}

type PlaylistSortOrder_PlaylistAttribute int32

const (
	PlaylistSortOrder_DEFAULT            PlaylistSortOrder_PlaylistAttribute = 0
	PlaylistSortOrder_LAST_MODIFIED_TIME PlaylistSortOrder_PlaylistAttribute = 1
	PlaylistSortOrder_TITLE              PlaylistSortOrder_PlaylistAttribute = 2
	PlaylistSortOrder_CREATION_TIME      PlaylistSortOrder_PlaylistAttribute = 3
	PlaylistSortOrder_RECENT_TIMESTAMP   PlaylistSortOrder_PlaylistAttribute = 4
)

var PlaylistSortOrder_PlaylistAttribute_name = map[int32]string{
	0: "DEFAULT",
	1: "LAST_MODIFIED_TIME",
	2: "TITLE",
	3: "CREATION_TIME",
	4: "RECENT_TIMESTAMP",
}
var PlaylistSortOrder_PlaylistAttribute_value = map[string]int32{
	"DEFAULT":            0,
	"LAST_MODIFIED_TIME": 1,
	"TITLE":              2,
	"CREATION_TIME":      3,
	"RECENT_TIMESTAMP":   4,
}

func (x PlaylistSortOrder_PlaylistAttribute) String() string {
	return proto.EnumName(PlaylistSortOrder_PlaylistAttribute_name, int32(x))
}

type AlbumSortOrder_AlbumAttribute int32

const (
	AlbumSortOrder_DEFAULT          AlbumSortOrder_AlbumAttribute = 0
	AlbumSortOrder_LAST_PLAYED_TIME AlbumSortOrder_AlbumAttribute = 1
	AlbumSortOrder_NAME             AlbumSortOrder_AlbumAttribute = 2
	AlbumSortOrder_CREATION_TIME    AlbumSortOrder_AlbumAttribute = 3
)

var AlbumSortOrder_AlbumAttribute_name = map[int32]string{
	0: "DEFAULT",
	1: "LAST_PLAYED_TIME",
	2: "NAME",
	3: "CREATION_TIME",
}
var AlbumSortOrder_AlbumAttribute_value = map[string]int32{
	"DEFAULT":          0,
	"LAST_PLAYED_TIME": 1,
	"NAME":             2,
	"CREATION_TIME":    3,
}

func (x AlbumSortOrder_AlbumAttribute) String() string {
	return proto.EnumName(AlbumSortOrder_AlbumAttribute_name, int32(x))
}

type TrackTypeAggregate_TrackType int32

const (
	TrackTypeAggregate_DEFAULT_TRACK               TrackTypeAggregate_TrackType = 0
	TrackTypeAggregate_MATCHED_TRACK               TrackTypeAggregate_TrackType = 1
	TrackTypeAggregate_UNMATCHED_TRACK             TrackTypeAggregate_TrackType = 2
	TrackTypeAggregate_LOCAL_TRACK                 TrackTypeAggregate_TrackType = 3
	TrackTypeAggregate_PURCHASED_TRACK             TrackTypeAggregate_TrackType = 4
	TrackTypeAggregate_METADATA_ONLY_MATCHED_TRACK TrackTypeAggregate_TrackType = 5
	TrackTypeAggregate_PROMO_TRACK                 TrackTypeAggregate_TrackType = 6
)

var TrackTypeAggregate_TrackType_name = map[int32]string{
	0: "DEFAULT_TRACK",
	1: "MATCHED_TRACK",
	2: "UNMATCHED_TRACK",
	3: "LOCAL_TRACK",
	4: "PURCHASED_TRACK",
	5: "METADATA_ONLY_MATCHED_TRACK",
	6: "PROMO_TRACK",
}
var TrackTypeAggregate_TrackType_value = map[string]int32{
	"DEFAULT_TRACK":               0,
	"MATCHED_TRACK":               1,
	"UNMATCHED_TRACK":             2,
	"LOCAL_TRACK":                 3,
	"PURCHASED_TRACK":             4,
	"METADATA_ONLY_MATCHED_TRACK": 5,
	"PROMO_TRACK":                 6,
}

func (x TrackTypeAggregate_TrackType) String() string {
	return proto.EnumName(TrackTypeAggregate_TrackType_name, int32(x))
}

type AvailabilityStatusAggregate_AvailabilityStatus int32

const (
	AvailabilityStatusAggregate_DEFAULT                   AvailabilityStatusAggregate_AvailabilityStatus = 0
	AvailabilityStatusAggregate_PENDING                   AvailabilityStatusAggregate_AvailabilityStatus = 1
	AvailabilityStatusAggregate_MATCHED                   AvailabilityStatusAggregate_AvailabilityStatus = 2
	AvailabilityStatusAggregate_UPLOAD_REQUESTED          AvailabilityStatusAggregate_AvailabilityStatus = 3
	AvailabilityStatusAggregate_AVAILABLE                 AvailabilityStatusAggregate_AvailabilityStatus = 4
	AvailabilityStatusAggregate_FORCE_REUPLOAD            AvailabilityStatusAggregate_AvailabilityStatus = 5
	AvailabilityStatusAggregate_UPLOAD_PERMANENTLY_FAILED AvailabilityStatusAggregate_AvailabilityStatus = 6
)

var AvailabilityStatusAggregate_AvailabilityStatus_name = map[int32]string{
	0: "DEFAULT",
	1: "PENDING",
	2: "MATCHED",
	3: "UPLOAD_REQUESTED",
	4: "AVAILABLE",
	5: "FORCE_REUPLOAD",
	6: "UPLOAD_PERMANENTLY_FAILED",
}
var AvailabilityStatusAggregate_AvailabilityStatus_value = map[string]int32{
	"DEFAULT":                   0,
	"PENDING":                   1,
	"MATCHED":                   2,
	"UPLOAD_REQUESTED":          3,
	"AVAILABLE":                 4,
	"FORCE_REUPLOAD":            5,
	"UPLOAD_PERMANENTLY_FAILED": 6,
}

func (x AvailabilityStatusAggregate_AvailabilityStatus) String() string {
	return proto.EnumName(AvailabilityStatusAggregate_AvailabilityStatus_name, int32(x))
}

type MagicPlaylistSeed_SeedType int32

const (
	MagicPlaylistSeed_TRACK       MagicPlaylistSeed_SeedType = 0
	MagicPlaylistSeed_ARTIST      MagicPlaylistSeed_SeedType = 1
	MagicPlaylistSeed_ALBUM       MagicPlaylistSeed_SeedType = 2
	MagicPlaylistSeed_OPAQUE_SEED MagicPlaylistSeed_SeedType = 3
)

var MagicPlaylistSeed_SeedType_name = map[int32]string{
	0: "TRACK",
	1: "ARTIST",
	2: "ALBUM",
	3: "OPAQUE_SEED",
}
var MagicPlaylistSeed_SeedType_value = map[string]int32{
	"TRACK":       0,
	"ARTIST":      1,
	"ALBUM":       2,
	"OPAQUE_SEED": 3,
}

func (x MagicPlaylistSeed_SeedType) String() string {
	return proto.EnumName(MagicPlaylistSeed_SeedType_name, int32(x))
}

type TrackSearchRestriction_TrackAttribute int32

const (
	TrackSearchRestriction_DEFAULT             TrackSearchRestriction_TrackAttribute = 0
	TrackSearchRestriction_TITLE               TrackSearchRestriction_TrackAttribute = 1
	TrackSearchRestriction_ARTIST              TrackSearchRestriction_TrackAttribute = 2
	TrackSearchRestriction_ALBUM               TrackSearchRestriction_TrackAttribute = 3
	TrackSearchRestriction_ALBUM_ARTIST        TrackSearchRestriction_TrackAttribute = 4
	TrackSearchRestriction_GENRE               TrackSearchRestriction_TrackAttribute = 5
	TrackSearchRestriction_AVAILABILITY_STATUS TrackSearchRestriction_TrackAttribute = 6
	TrackSearchRestriction_TRACK_TYPE          TrackSearchRestriction_TrackAttribute = 7
	TrackSearchRestriction_YEAR                TrackSearchRestriction_TrackAttribute = 8
	TrackSearchRestriction_STORE_ID            TrackSearchRestriction_TrackAttribute = 9
	TrackSearchRestriction_ALBUM_METAJAM_ID    TrackSearchRestriction_TrackAttribute = 10
)

var TrackSearchRestriction_TrackAttribute_name = map[int32]string{
	0:  "DEFAULT",
	1:  "TITLE",
	2:  "ARTIST",
	3:  "ALBUM",
	4:  "ALBUM_ARTIST",
	5:  "GENRE",
	6:  "AVAILABILITY_STATUS",
	7:  "TRACK_TYPE",
	8:  "YEAR",
	9:  "STORE_ID",
	10: "ALBUM_METAJAM_ID",
}
var TrackSearchRestriction_TrackAttribute_value = map[string]int32{
	"DEFAULT":             0,
	"TITLE":               1,
	"ARTIST":              2,
	"ALBUM":               3,
	"ALBUM_ARTIST":        4,
	"GENRE":               5,
	"AVAILABILITY_STATUS": 6,
	"TRACK_TYPE":          7,
	"YEAR":                8,
	"STORE_ID":            9,
	"ALBUM_METAJAM_ID":    10,
}

func (x TrackSearchRestriction_TrackAttribute) String() string {
	return proto.EnumName(TrackSearchRestriction_TrackAttribute_name, int32(x))
}

type TrackSearchRestriction_ComparisonType int32

const (
	TrackSearchRestriction_EQUAL         TrackSearchRestriction_ComparisonType = 0
	TrackSearchRestriction_NOT_EQUAL     TrackSearchRestriction_ComparisonType = 1
	TrackSearchRestriction_GREATER_THAN  TrackSearchRestriction_ComparisonType = 2
	TrackSearchRestriction_GREATER_EQUAL TrackSearchRestriction_ComparisonType = 3
	TrackSearchRestriction_LESS_THAN     TrackSearchRestriction_ComparisonType = 4
	TrackSearchRestriction_LESS_EQUAL    TrackSearchRestriction_ComparisonType = 5
	TrackSearchRestriction_PARTIAL_MATCH TrackSearchRestriction_ComparisonType = 6
)

var TrackSearchRestriction_ComparisonType_name = map[int32]string{
	0: "EQUAL",
	1: "NOT_EQUAL",
	2: "GREATER_THAN",
	3: "GREATER_EQUAL",
	4: "LESS_THAN",
	5: "LESS_EQUAL",
	6: "PARTIAL_MATCH",
}
var TrackSearchRestriction_ComparisonType_value = map[string]int32{
	"EQUAL":         0,
	"NOT_EQUAL":     1,
	"GREATER_THAN":  2,
	"GREATER_EQUAL": 3,
	"LESS_THAN":     4,
	"LESS_EQUAL":    5,
	"PARTIAL_MATCH": 6,
}

func (x TrackSearchRestriction_ComparisonType) String() string {
	return proto.EnumName(TrackSearchRestriction_ComparisonType_name, int32(x))
}

type TrackSearchRestrictionSet_RestrictionSetType int32

const (
	TrackSearchRestrictionSet_AND TrackSearchRestrictionSet_RestrictionSetType = 0
	TrackSearchRestrictionSet_OR  TrackSearchRestrictionSet_RestrictionSetType = 1
)

var TrackSearchRestrictionSet_RestrictionSetType_name = map[int32]string{
	0: "AND",
	1: "OR",
}
var TrackSearchRestrictionSet_RestrictionSetType_value = map[string]int32{
	"AND": 0,
	"OR":  1,
}

func (x TrackSearchRestrictionSet_RestrictionSetType) String() string {
	return proto.EnumName(TrackSearchRestrictionSet_RestrictionSetType_name, int32(x))
}

type AudioRef struct {
	Store               AudioRef_Store `protobuf:"varint,1,opt,name=store,enum=google.musicmanager.v0.AudioRef_Store" json:"store,omitempty"`
	Ref                 []byte         `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Url                 string         `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	BitRate             int32          `protobuf:"varint,5,opt,name=bit_rate" json:"bit_rate,omitempty"`
	SampleRate          int32          `protobuf:"varint,6,opt,name=sample_rate" json:"sample_rate,omitempty"`
	Downloadable        bool           `protobuf:"varint,7,opt,name=downloadable" json:"downloadable,omitempty"`
	DurationMillis      int64          `protobuf:"varint,8,opt,name=duration_millis" json:"duration_millis,omitempty"`
	RematchTimestamp    int64          `protobuf:"varint,9,opt,name=rematch_timestamp" json:"rematch_timestamp,omitempty"`
	InvalidDueToWipeout bool           `protobuf:"varint,10,opt,name=invalid_due_to_wipeout" json:"invalid_due_to_wipeout,omitempty"`
}

func (m *AudioRef) Reset()         { *m = AudioRef{} }
func (m *AudioRef) String() string { return proto.CompactTextString(m) }
func (*AudioRef) ProtoMessage()    {}

type ImageRef struct {
	Store               ImageRef_Store  `protobuf:"varint,1,opt,name=store,enum=google.musicmanager.v0.ImageRef_Store" json:"store,omitempty"`
	Width               uint32          `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height              uint32          `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Url                 string          `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	InvalidDueToWipeout bool            `protobuf:"varint,7,opt,name=invalid_due_to_wipeout" json:"invalid_due_to_wipeout,omitempty"`
	Origin              ImageRef_Origin `protobuf:"varint,8,opt,name=origin,enum=google.musicmanager.v0.ImageRef_Origin" json:"origin,omitempty"`
}

func (m *ImageRef) Reset()         { *m = ImageRef{} }
func (m *ImageRef) String() string { return proto.CompactTextString(m) }
func (*ImageRef) ProtoMessage()    {}

type Track struct {
	Id                        string                                        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ClientId                  string                                        `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	CreationTimestamp         int64                                         `protobuf:"varint,3,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	LastModifiedTimestamp     int64                                         `protobuf:"varint,4,opt,name=last_modified_timestamp" json:"last_modified_timestamp,omitempty"`
	Deleted                   bool                                          `protobuf:"varint,5,opt,name=deleted" json:"deleted,omitempty"`
	Title                     string                                        `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	Artist                    string                                        `protobuf:"bytes,7,opt,name=artist" json:"artist,omitempty"`
	ArtistHash                int64                                         `protobuf:"varint,46,opt,name=artist_hash" json:"artist_hash,omitempty"`
	Composer                  string                                        `protobuf:"bytes,8,opt,name=composer" json:"composer,omitempty"`
	Album                     string                                        `protobuf:"bytes,9,opt,name=album" json:"album,omitempty"`
	AlbumArtist               string                                        `protobuf:"bytes,10,opt,name=album_artist" json:"album_artist,omitempty"`
	CanonicalAlbum            string                                        `protobuf:"bytes,56,opt,name=canonical_album" json:"canonical_album,omitempty"`
	CanonicalArtist           string                                        `protobuf:"bytes,57,opt,name=canonical_artist" json:"canonical_artist,omitempty"`
	CanonicalGenreAlbum       string                                        `protobuf:"bytes,58,opt,name=canonical_genre_album" json:"canonical_genre_album,omitempty"`
	Year                      int32                                         `protobuf:"varint,11,opt,name=year" json:"year,omitempty"`
	Comment                   string                                        `protobuf:"bytes,12,opt,name=comment" json:"comment,omitempty"`
	TrackNumber               int32                                         `protobuf:"varint,13,opt,name=track_number" json:"track_number,omitempty"`
	Genre                     string                                        `protobuf:"bytes,14,opt,name=genre" json:"genre,omitempty"`
	DurationMillis            int64                                         `protobuf:"varint,15,opt,name=duration_millis" json:"duration_millis,omitempty"`
	BeatsPerMinute            int32                                         `protobuf:"varint,16,opt,name=beats_per_minute" json:"beats_per_minute,omitempty"`
	OriginalBitRate           int32                                         `protobuf:"varint,44,opt,name=original_bit_rate" json:"original_bit_rate,omitempty"`
	AudioRef                  []*AudioRef                                   `protobuf:"bytes,17,rep,name=audio_ref" json:"audio_ref,omitempty"`
	AlbumArtRef               []*ImageRef                                   `protobuf:"bytes,18,rep,name=album_art_ref" json:"album_art_ref,omitempty"`
	AvailabilityStatus        Track_AvailabilityStatus                      `protobuf:"varint,19,opt,name=availability_status,enum=google.musicmanager.v0.Track_AvailabilityStatus" json:"availability_status,omitempty"`
	PlayCount                 int32                                         `protobuf:"varint,20,opt,name=play_count" json:"play_count,omitempty"`
	ContentType               Track_ContentType                             `protobuf:"varint,25,opt,name=content_type,enum=google.musicmanager.v0.Track_ContentType" json:"content_type,omitempty"`
	TotalTrackCount           int32                                         `protobuf:"varint,26,opt,name=total_track_count" json:"total_track_count,omitempty"`
	DiscNumber                int32                                         `protobuf:"varint,27,opt,name=disc_number" json:"disc_number,omitempty"`
	TotalDiscCount            int32                                         `protobuf:"varint,28,opt,name=total_disc_count" json:"total_disc_count,omitempty"`
	Channels                  Track_Channels                                `protobuf:"varint,29,opt,name=channels,enum=google.musicmanager.v0.Track_Channels" json:"channels,omitempty"`
	TrackType                 Track_TrackType                               `protobuf:"varint,30,opt,name=track_type,enum=google.musicmanager.v0.Track_TrackType" json:"track_type,omitempty"`
	UseSingleServerCopy       bool                                          `protobuf:"varint,59,opt,name=use_single_server_copy" json:"use_single_server_copy,omitempty"`
	Rating                    Track_Rating                                  `protobuf:"varint,31,opt,name=rating,enum=google.musicmanager.v0.Track_Rating" json:"rating,omitempty"`
	EstimatedSize             int64                                         `protobuf:"varint,32,opt,name=estimated_size" json:"estimated_size,omitempty"`
	StoreId                   string                                        `protobuf:"bytes,33,opt,name=store_id" json:"store_id,omitempty"`
	MetajamId                 string                                        `protobuf:"bytes,34,opt,name=metajam_id" json:"metajam_id,omitempty"`
	MetajamIdConfidence       float64                                       `protobuf:"fixed64,43,opt,name=metajam_id_confidence" json:"metajam_id_confidence,omitempty"`
	Uits                      string                                        `protobuf:"bytes,35,opt,name=uits" json:"uits,omitempty"`
	UitsMetadata              *google_musicmanager_v01.UitsMetadata         `protobuf:"bytes,40,opt,name=uits_metadata" json:"uits_metadata,omitempty"`
	Compilation               bool                                          `protobuf:"varint,36,opt,name=compilation" json:"compilation,omitempty"`
	ClientDateAdded           int64                                         `protobuf:"varint,37,opt,name=client_date_added" json:"client_date_added,omitempty"`
	RecentTimestamp           int64                                         `protobuf:"varint,38,opt,name=recent_timestamp" json:"recent_timestamp,omitempty"`
	DoNotRematch              bool                                          `protobuf:"varint,39,opt,name=do_not_rematch" json:"do_not_rematch,omitempty"`
	FromAlbumPurchase         bool                                          `protobuf:"varint,41,opt,name=from_album_purchase" json:"from_album_purchase,omitempty"`
	AlbumMetajamId            string                                        `protobuf:"bytes,42,opt,name=album_metajam_id" json:"album_metajam_id,omitempty"`
	TransactionId             string                                        `protobuf:"bytes,45,opt,name=transaction_id" json:"transaction_id,omitempty"`
	DebugTrack                bool                                          `protobuf:"varint,47,opt,name=debug_track" json:"debug_track,omitempty"`
	NormalizedTitle           string                                        `protobuf:"bytes,48,opt,name=normalized_title" json:"normalized_title,omitempty"`
	NormalizedArtist          string                                        `protobuf:"bytes,49,opt,name=normalized_artist" json:"normalized_artist,omitempty"`
	NormalizedAlbum           string                                        `protobuf:"bytes,50,opt,name=normalized_album" json:"normalized_album,omitempty"`
	NormalizedAlbumArtist     string                                        `protobuf:"bytes,51,opt,name=normalized_album_artist" json:"normalized_album_artist,omitempty"`
	NormalizedCanonicalAlbum  string                                        `protobuf:"bytes,54,opt,name=normalized_canonical_album" json:"normalized_canonical_album,omitempty"`
	NormalizedCanonicalArtist string                                        `protobuf:"bytes,55,opt,name=normalized_canonical_artist" json:"normalized_canonical_artist,omitempty"`
	UploaderId                string                                        `protobuf:"bytes,52,opt,name=uploader_id" json:"uploader_id,omitempty"`
	ClientAlbumId             string                                        `protobuf:"bytes,53,opt,name=client_album_id" json:"client_album_id,omitempty"`
	LabelOwnerCode            string                                        `protobuf:"bytes,60,opt,name=label_owner_code" json:"label_owner_code,omitempty"`
	OriginalContentType       Track_ContentType                             `protobuf:"varint,61,opt,name=original_content_type,enum=google.musicmanager.v0.Track_ContentType" json:"original_content_type,omitempty"`
	UploadedUits              []*google_musicmanager_v01.UploadedUitsId3Tag `protobuf:"bytes,71,rep,name=uploaded_uits" json:"uploaded_uits,omitempty"`
}

func (m *Track) Reset()         { *m = Track{} }
func (m *Track) String() string { return proto.CompactTextString(m) }
func (*Track) ProtoMessage()    {}

func (m *Track) GetAudioRef() []*AudioRef {
	if m != nil {
		return m.AudioRef
	}
	return nil
}

func (m *Track) GetAlbumArtRef() []*ImageRef {
	if m != nil {
		return m.AlbumArtRef
	}
	return nil
}

func (m *Track) GetUitsMetadata() *google_musicmanager_v01.UitsMetadata {
	if m != nil {
		return m.UitsMetadata
	}
	return nil
}

func (m *Track) GetUploadedUits() []*google_musicmanager_v01.UploadedUitsId3Tag {
	if m != nil {
		return m.UploadedUits
	}
	return nil
}

type Playlist struct {
	Id                    string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ClientId              string                `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	CreationTimestamp     int64                 `protobuf:"varint,3,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	LastModifiedTimestamp int64                 `protobuf:"varint,4,opt,name=last_modified_timestamp" json:"last_modified_timestamp,omitempty"`
	Deleted               bool                  `protobuf:"varint,5,opt,name=deleted" json:"deleted,omitempty"`
	Name                  string                `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	PlaylistType          Playlist_PlaylistType `protobuf:"varint,7,opt,name=playlist_type,enum=google.musicmanager.v0.Playlist_PlaylistType" json:"playlist_type,omitempty"`
	PlaylistArtRef        *ImageRef             `protobuf:"bytes,8,opt,name=playlist_art_ref" json:"playlist_art_ref,omitempty"`
	RecentTimestamp       int64                 `protobuf:"varint,9,opt,name=recent_timestamp" json:"recent_timestamp,omitempty"`
}

func (m *Playlist) Reset()         { *m = Playlist{} }
func (m *Playlist) String() string { return proto.CompactTextString(m) }
func (*Playlist) ProtoMessage()    {}

func (m *Playlist) GetPlaylistArtRef() *ImageRef {
	if m != nil {
		return m.PlaylistArtRef
	}
	return nil
}

type PlaylistEntry struct {
	PlaylistId             string                               `protobuf:"bytes,1,opt,name=playlist_id" json:"playlist_id,omitempty"`
	AbsolutePosition       int64                                `protobuf:"varint,2,opt,name=absolute_position" json:"absolute_position,omitempty"`
	PlaceAfterEntryId      string                               `protobuf:"bytes,3,opt,name=place_after_entry_id" json:"place_after_entry_id,omitempty"`
	TrackId                string                               `protobuf:"bytes,4,opt,name=track_id" json:"track_id,omitempty"`
	Id                     string                               `protobuf:"bytes,5,opt,name=id" json:"id,omitempty"`
	ClientId               string                               `protobuf:"bytes,6,opt,name=client_id" json:"client_id,omitempty"`
	CreationTimestamp      int64                                `protobuf:"varint,7,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	LastModifiedTimestamp  int64                                `protobuf:"varint,8,opt,name=last_modified_timestamp" json:"last_modified_timestamp,omitempty"`
	Deleted                bool                                 `protobuf:"varint,9,opt,name=deleted" json:"deleted,omitempty"`
	RelativePositionIdType PlaylistEntry_RelativePositionIdType `protobuf:"varint,10,opt,name=relative_position_id_type,enum=google.musicmanager.v0.PlaylistEntry_RelativePositionIdType" json:"relative_position_id_type,omitempty"`
	Track                  *Track                               `protobuf:"bytes,15,opt,name=track" json:"track,omitempty"`
	PlaceBeforeEntryId     string                               `protobuf:"bytes,16,opt,name=place_before_entry_id" json:"place_before_entry_id,omitempty"`
	StringPosition         string                               `protobuf:"bytes,17,opt,name=string_position" json:"string_position,omitempty"`
}

func (m *PlaylistEntry) Reset()         { *m = PlaylistEntry{} }
func (m *PlaylistEntry) String() string { return proto.CompactTextString(m) }
func (*PlaylistEntry) ProtoMessage()    {}

func (m *PlaylistEntry) GetTrack() *Track {
	if m != nil {
		return m.Track
	}
	return nil
}

type Album struct {
	Name              string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AlbumArtist       string    `protobuf:"bytes,2,opt,name=album_artist" json:"album_artist,omitempty"`
	AlbumArt          *ImageRef `protobuf:"bytes,3,opt,name=album_art" json:"album_art,omitempty"`
	TrackCount        int32     `protobuf:"varint,4,opt,name=track_count" json:"track_count,omitempty"`
	LastTimePlayed    int64     `protobuf:"varint,5,opt,name=last_time_played" json:"last_time_played,omitempty"`
	IsCompilation     bool      `protobuf:"varint,6,opt,name=is_compilation" json:"is_compilation,omitempty"`
	AlbumMetajamId    string    `protobuf:"bytes,7,opt,name=album_metajam_id" json:"album_metajam_id,omitempty"`
	CreationTimestamp int64     `protobuf:"varint,8,opt,name=creation_timestamp" json:"creation_timestamp,omitempty"`
	Artist            string    `protobuf:"bytes,9,opt,name=artist" json:"artist,omitempty"`
}

func (m *Album) Reset()         { *m = Album{} }
func (m *Album) String() string { return proto.CompactTextString(m) }
func (*Album) ProtoMessage()    {}

func (m *Album) GetAlbumArt() *ImageRef {
	if m != nil {
		return m.AlbumArt
	}
	return nil
}

type Artist struct {
	Name            string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TotalTrackCount int32    `protobuf:"varint,2,opt,name=total_track_count" json:"total_track_count,omitempty"`
	Album           []*Album `protobuf:"bytes,3,rep,name=album" json:"album,omitempty"`
}

func (m *Artist) Reset()         { *m = Artist{} }
func (m *Artist) String() string { return proto.CompactTextString(m) }
func (*Artist) ProtoMessage()    {}

func (m *Artist) GetAlbum() []*Album {
	if m != nil {
		return m.Album
	}
	return nil
}

type Genre struct {
	Name            string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TotalTrackCount int32    `protobuf:"varint,2,opt,name=total_track_count" json:"total_track_count,omitempty"`
	Album           []*Album `protobuf:"bytes,3,rep,name=album" json:"album,omitempty"`
}

func (m *Genre) Reset()         { *m = Genre{} }
func (m *Genre) String() string { return proto.CompactTextString(m) }
func (*Genre) ProtoMessage()    {}

func (m *Genre) GetAlbum() []*Album {
	if m != nil {
		return m.Album
	}
	return nil
}

type TrackSortOrder struct {
	Attribute  TrackSortOrder_TrackAttribute `protobuf:"varint,1,opt,name=attribute,enum=google.musicmanager.v0.TrackSortOrder_TrackAttribute" json:"attribute,omitempty"`
	Descending bool                          `protobuf:"varint,2,opt,name=descending" json:"descending,omitempty"`
}

func (m *TrackSortOrder) Reset()         { *m = TrackSortOrder{} }
func (m *TrackSortOrder) String() string { return proto.CompactTextString(m) }
func (*TrackSortOrder) ProtoMessage()    {}

type PlaylistSortOrder struct {
	Attribute  PlaylistSortOrder_PlaylistAttribute `protobuf:"varint,1,opt,name=attribute,enum=google.musicmanager.v0.PlaylistSortOrder_PlaylistAttribute" json:"attribute,omitempty"`
	Descending bool                                `protobuf:"varint,2,opt,name=descending" json:"descending,omitempty"`
}

func (m *PlaylistSortOrder) Reset()         { *m = PlaylistSortOrder{} }
func (m *PlaylistSortOrder) String() string { return proto.CompactTextString(m) }
func (*PlaylistSortOrder) ProtoMessage()    {}

type AlbumSortOrder struct {
	Attribute  AlbumSortOrder_AlbumAttribute `protobuf:"varint,1,opt,name=attribute,enum=google.musicmanager.v0.AlbumSortOrder_AlbumAttribute" json:"attribute,omitempty"`
	Descending bool                          `protobuf:"varint,2,opt,name=descending" json:"descending,omitempty"`
}

func (m *AlbumSortOrder) Reset()         { *m = AlbumSortOrder{} }
func (m *AlbumSortOrder) String() string { return proto.CompactTextString(m) }
func (*AlbumSortOrder) ProtoMessage()    {}

type ArtistSortOrder struct {
	Descending bool `protobuf:"varint,2,opt,name=descending" json:"descending,omitempty"`
}

func (m *ArtistSortOrder) Reset()         { *m = ArtistSortOrder{} }
func (m *ArtistSortOrder) String() string { return proto.CompactTextString(m) }
func (*ArtistSortOrder) ProtoMessage()    {}

type GenreSortOrder struct {
	Descending bool `protobuf:"varint,2,opt,name=descending" json:"descending,omitempty"`
}

func (m *GenreSortOrder) Reset()         { *m = GenreSortOrder{} }
func (m *GenreSortOrder) String() string { return proto.CompactTextString(m) }
func (*GenreSortOrder) ProtoMessage()    {}

type TrackTypeAggregate struct {
	TrackTypeValue TrackTypeAggregate_TrackType `protobuf:"varint,1,opt,name=track_type_value,enum=google.musicmanager.v0.TrackTypeAggregate_TrackType" json:"track_type_value,omitempty"`
	Count          int32                        `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *TrackTypeAggregate) Reset()         { *m = TrackTypeAggregate{} }
func (m *TrackTypeAggregate) String() string { return proto.CompactTextString(m) }
func (*TrackTypeAggregate) ProtoMessage()    {}

type AvailabilityStatusAggregate struct {
	AvailabilityStatus AvailabilityStatusAggregate_AvailabilityStatus `protobuf:"varint,1,opt,name=availability_status,enum=google.musicmanager.v0.AvailabilityStatusAggregate_AvailabilityStatus" json:"availability_status,omitempty"`
	Count              int32                                          `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *AvailabilityStatusAggregate) Reset()         { *m = AvailabilityStatusAggregate{} }
func (m *AvailabilityStatusAggregate) String() string { return proto.CompactTextString(m) }
func (*AvailabilityStatusAggregate) ProtoMessage()    {}

type PlaylistAggregate struct {
	PlaylistId     string    `protobuf:"bytes,1,opt,name=playlist_id" json:"playlist_id,omitempty"`
	Name           string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AlbumArt       *ImageRef `protobuf:"bytes,3,opt,name=album_art" json:"album_art,omitempty"`
	TrackCount     int64     `protobuf:"varint,4,opt,name=track_count" json:"track_count,omitempty"`
	LastTimePlayed int64     `protobuf:"varint,5,opt,name=last_time_played" json:"last_time_played,omitempty"`
}

func (m *PlaylistAggregate) Reset()         { *m = PlaylistAggregate{} }
func (m *PlaylistAggregate) String() string { return proto.CompactTextString(m) }
func (*PlaylistAggregate) ProtoMessage()    {}

func (m *PlaylistAggregate) GetAlbumArt() *ImageRef {
	if m != nil {
		return m.AlbumArt
	}
	return nil
}

type MagicPlaylistSeed struct {
	SeedType MagicPlaylistSeed_SeedType `protobuf:"varint,1,opt,name=seed_type,enum=google.musicmanager.v0.MagicPlaylistSeed_SeedType" json:"seed_type,omitempty"`
	Seed     string                     `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
}

func (m *MagicPlaylistSeed) Reset()         { *m = MagicPlaylistSeed{} }
func (m *MagicPlaylistSeed) String() string { return proto.CompactTextString(m) }
func (*MagicPlaylistSeed) ProtoMessage()    {}

type LockerNotification struct {
	GaiaId  int64  `protobuf:"varint,1,opt,name=gaia_id" json:"gaia_id,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *LockerNotification) Reset()         { *m = LockerNotification{} }
func (m *LockerNotification) String() string { return proto.CompactTextString(m) }
func (*LockerNotification) ProtoMessage()    {}

type TrackSearchRestriction struct {
	Attribute      TrackSearchRestriction_TrackAttribute `protobuf:"varint,1,opt,name=attribute,enum=google.musicmanager.v0.TrackSearchRestriction_TrackAttribute" json:"attribute,omitempty"`
	Value          string                                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	ComparisonType TrackSearchRestriction_ComparisonType `protobuf:"varint,3,opt,name=comparison_type,enum=google.musicmanager.v0.TrackSearchRestriction_ComparisonType" json:"comparison_type,omitempty"`
}

func (m *TrackSearchRestriction) Reset()         { *m = TrackSearchRestriction{} }
func (m *TrackSearchRestriction) String() string { return proto.CompactTextString(m) }
func (*TrackSearchRestriction) ProtoMessage()    {}

type TrackSearchRestrictionSet struct {
	Type        TrackSearchRestrictionSet_RestrictionSetType `protobuf:"varint,1,opt,name=type,enum=google.musicmanager.v0.TrackSearchRestrictionSet_RestrictionSetType" json:"type,omitempty"`
	Restriction []*TrackSearchRestriction                    `protobuf:"bytes,2,rep,name=restriction" json:"restriction,omitempty"`
	SubSet      []*TrackSearchRestrictionSet                 `protobuf:"bytes,3,rep,name=sub_set" json:"sub_set,omitempty"`
}

func (m *TrackSearchRestrictionSet) Reset()         { *m = TrackSearchRestrictionSet{} }
func (m *TrackSearchRestrictionSet) String() string { return proto.CompactTextString(m) }
func (*TrackSearchRestrictionSet) ProtoMessage()    {}

func (m *TrackSearchRestrictionSet) GetRestriction() []*TrackSearchRestriction {
	if m != nil {
		return m.Restriction
	}
	return nil
}

func (m *TrackSearchRestrictionSet) GetSubSet() []*TrackSearchRestrictionSet {
	if m != nil {
		return m.SubSet
	}
	return nil
}

func init() {
	proto.RegisterEnum("google.musicmanager.v0.AudioRef_Store", AudioRef_Store_name, AudioRef_Store_value)
	proto.RegisterEnum("google.musicmanager.v0.ImageRef_Store", ImageRef_Store_name, ImageRef_Store_value)
	proto.RegisterEnum("google.musicmanager.v0.ImageRef_Origin", ImageRef_Origin_name, ImageRef_Origin_value)
	proto.RegisterEnum("google.musicmanager.v0.Track_AvailabilityStatus", Track_AvailabilityStatus_name, Track_AvailabilityStatus_value)
	proto.RegisterEnum("google.musicmanager.v0.Track_ContentType", Track_ContentType_name, Track_ContentType_value)
	proto.RegisterEnum("google.musicmanager.v0.Track_Channels", Track_Channels_name, Track_Channels_value)
	proto.RegisterEnum("google.musicmanager.v0.Track_TrackType", Track_TrackType_name, Track_TrackType_value)
	proto.RegisterEnum("google.musicmanager.v0.Track_Rating", Track_Rating_name, Track_Rating_value)
	proto.RegisterEnum("google.musicmanager.v0.Playlist_PlaylistType", Playlist_PlaylistType_name, Playlist_PlaylistType_value)
	proto.RegisterEnum("google.musicmanager.v0.PlaylistEntry_RelativePositionIdType", PlaylistEntry_RelativePositionIdType_name, PlaylistEntry_RelativePositionIdType_value)
	proto.RegisterEnum("google.musicmanager.v0.TrackSortOrder_TrackAttribute", TrackSortOrder_TrackAttribute_name, TrackSortOrder_TrackAttribute_value)
	proto.RegisterEnum("google.musicmanager.v0.PlaylistSortOrder_PlaylistAttribute", PlaylistSortOrder_PlaylistAttribute_name, PlaylistSortOrder_PlaylistAttribute_value)
	proto.RegisterEnum("google.musicmanager.v0.AlbumSortOrder_AlbumAttribute", AlbumSortOrder_AlbumAttribute_name, AlbumSortOrder_AlbumAttribute_value)
	proto.RegisterEnum("google.musicmanager.v0.TrackTypeAggregate_TrackType", TrackTypeAggregate_TrackType_name, TrackTypeAggregate_TrackType_value)
	proto.RegisterEnum("google.musicmanager.v0.AvailabilityStatusAggregate_AvailabilityStatus", AvailabilityStatusAggregate_AvailabilityStatus_name, AvailabilityStatusAggregate_AvailabilityStatus_value)
	proto.RegisterEnum("google.musicmanager.v0.MagicPlaylistSeed_SeedType", MagicPlaylistSeed_SeedType_name, MagicPlaylistSeed_SeedType_value)
	proto.RegisterEnum("google.musicmanager.v0.TrackSearchRestriction_TrackAttribute", TrackSearchRestriction_TrackAttribute_name, TrackSearchRestriction_TrackAttribute_value)
	proto.RegisterEnum("google.musicmanager.v0.TrackSearchRestriction_ComparisonType", TrackSearchRestriction_ComparisonType_name, TrackSearchRestriction_ComparisonType_value)
	proto.RegisterEnum("google.musicmanager.v0.TrackSearchRestrictionSet_RestrictionSetType", TrackSearchRestrictionSet_RestrictionSetType_name, TrackSearchRestrictionSet_RestrictionSetType_value)
}
