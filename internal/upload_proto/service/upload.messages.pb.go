// Code generated by protoc-gen-go.
// source: go-google-musicmanager/internal/upload_proto/service/upload.messages.proto
// DO NOT EDIT!

/*
Package google_musicmanager_v0 is a generated protocol buffer package.

It is generated from these files:
	go-google-musicmanager/internal/upload_proto/service/upload.messages.proto

It has these top-level messages:
	UploadResponse
	UploadPlaylistRequest
	UploadPlaylistResponse
	UploadPlaylistEntryRequest
	UploadPlaylistEntryResponse
	UploadMetadataRequest
	UploadMetadataResponse
	UploadSampleRequest
	UploadSampleResponse
	ClientStateRequest
	ClientStateResponse
	GetJobsRequest
	GetJobsResponse
	UpAuthRequest
	UpdateUploadStateRequest
	DeleteUploadRequestedRequest
	UploadMetadataInternalRequest
	PlaylistResponse
	PlaylistEntryResponse
	TrackSampleResponse
*/
package google_musicmanager_v0

import proto "github.com/golang/protobuf/proto"
import google_musicmanager_v03 "go-google-musicmanager/internal/upload_proto/data"
import google_musicmanager_v02 "go-google-musicmanager/internal/locker_proto/data"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type UploadResponse_ResponseType int32

const (
	UploadResponse_UNKNOWN_RESPONSE                 UploadResponse_ResponseType = 0
	UploadResponse_METADATA_RESPONSE                UploadResponse_ResponseType = 1
	UploadResponse_PLAYLIST_RESPONSE                UploadResponse_ResponseType = 2
	UploadResponse_PLAYLIST_ENTRY_RESPONSE          UploadResponse_ResponseType = 3
	UploadResponse_SAMPLE_RESPONSE                  UploadResponse_ResponseType = 4
	UploadResponse_GETJOBS_RESPONSE                 UploadResponse_ResponseType = 5
	UploadResponse_AUTH_RESPONSE                    UploadResponse_ResponseType = 6
	UploadResponse_CLIENT_STATE_RESPONSE            UploadResponse_ResponseType = 7
	UploadResponse_UPDATE_UPLOAD_STATE_RESPONSE     UploadResponse_ResponseType = 8
	UploadResponse_DELETE_UPLOAD_REQUESTED_RESPONSE UploadResponse_ResponseType = 9
)

var UploadResponse_ResponseType_name = map[int32]string{
	0: "UNKNOWN_RESPONSE",
	1: "METADATA_RESPONSE",
	2: "PLAYLIST_RESPONSE",
	3: "PLAYLIST_ENTRY_RESPONSE",
	4: "SAMPLE_RESPONSE",
	5: "GETJOBS_RESPONSE",
	6: "AUTH_RESPONSE",
	7: "CLIENT_STATE_RESPONSE",
	8: "UPDATE_UPLOAD_STATE_RESPONSE",
	9: "DELETE_UPLOAD_REQUESTED_RESPONSE",
}
var UploadResponse_ResponseType_value = map[string]int32{
	"UNKNOWN_RESPONSE":                 0,
	"METADATA_RESPONSE":                1,
	"PLAYLIST_RESPONSE":                2,
	"PLAYLIST_ENTRY_RESPONSE":          3,
	"SAMPLE_RESPONSE":                  4,
	"GETJOBS_RESPONSE":                 5,
	"AUTH_RESPONSE":                    6,
	"CLIENT_STATE_RESPONSE":            7,
	"UPDATE_UPLOAD_STATE_RESPONSE":     8,
	"DELETE_UPLOAD_REQUESTED_RESPONSE": 9,
}

func (x UploadResponse_ResponseType) String() string {
	return proto.EnumName(UploadResponse_ResponseType_name, int32(x))
}

type UploadResponse_AuthStatus int32

const (
	UploadResponse_UNKNOWN                        UploadResponse_AuthStatus = 0
	UploadResponse_OK                             UploadResponse_AuthStatus = 8
	UploadResponse_MAX_LIMIT_REACHED              UploadResponse_AuthStatus = 9
	UploadResponse_CLIENT_BOUND_TO_OTHER_ACCOUNT  UploadResponse_AuthStatus = 10
	UploadResponse_CLIENT_NOT_AUTHORIZED          UploadResponse_AuthStatus = 11
	UploadResponse_MAX_PER_MACHINE_USERS_EXCEEDED UploadResponse_AuthStatus = 12
	UploadResponse_CLIENT_PLEASE_RETRY            UploadResponse_AuthStatus = 13
	UploadResponse_NOT_SUBSCRIBED                 UploadResponse_AuthStatus = 14
	UploadResponse_INVALID_REQUEST                UploadResponse_AuthStatus = 15
	UploadResponse_UPGRADE_MUSIC_MANAGER          UploadResponse_AuthStatus = 16
)

var UploadResponse_AuthStatus_name = map[int32]string{
	0:  "UNKNOWN",
	8:  "OK",
	9:  "MAX_LIMIT_REACHED",
	10: "CLIENT_BOUND_TO_OTHER_ACCOUNT",
	11: "CLIENT_NOT_AUTHORIZED",
	12: "MAX_PER_MACHINE_USERS_EXCEEDED",
	13: "CLIENT_PLEASE_RETRY",
	14: "NOT_SUBSCRIBED",
	15: "INVALID_REQUEST",
	16: "UPGRADE_MUSIC_MANAGER",
}
var UploadResponse_AuthStatus_value = map[string]int32{
	"UNKNOWN":                        0,
	"OK":                             8,
	"MAX_LIMIT_REACHED":              9,
	"CLIENT_BOUND_TO_OTHER_ACCOUNT":  10,
	"CLIENT_NOT_AUTHORIZED":          11,
	"MAX_PER_MACHINE_USERS_EXCEEDED": 12,
	"CLIENT_PLEASE_RETRY":            13,
	"NOT_SUBSCRIBED":                 14,
	"INVALID_REQUEST":                15,
	"UPGRADE_MUSIC_MANAGER":          16,
}

func (x UploadResponse_AuthStatus) String() string {
	return proto.EnumName(UploadResponse_AuthStatus_name, int32(x))
}

type UpdateUploadStateRequest_UploadState int32

const (
	UpdateUploadStateRequest_DEFAULT UpdateUploadStateRequest_UploadState = 0
	UpdateUploadStateRequest_START   UpdateUploadStateRequest_UploadState = 1
	UpdateUploadStateRequest_PAUSED  UpdateUploadStateRequest_UploadState = 2
	UpdateUploadStateRequest_STOPPED UpdateUploadStateRequest_UploadState = 3
)

var UpdateUploadStateRequest_UploadState_name = map[int32]string{
	0: "DEFAULT",
	1: "START",
	2: "PAUSED",
	3: "STOPPED",
}
var UpdateUploadStateRequest_UploadState_value = map[string]int32{
	"DEFAULT": 0,
	"START":   1,
	"PAUSED":  2,
	"STOPPED": 3,
}

func (x UpdateUploadStateRequest_UploadState) String() string {
	return proto.EnumName(UpdateUploadStateRequest_UploadState_name, int32(x))
}

type TrackSampleResponse_ResponseCode int32

const (
	TrackSampleResponse_UNKNOWN                     TrackSampleResponse_ResponseCode = 0
	TrackSampleResponse_MATCHED                     TrackSampleResponse_ResponseCode = 1
	TrackSampleResponse_UPLOAD_REQUESTED            TrackSampleResponse_ResponseCode = 2
	TrackSampleResponse_INVALID_SIGNATURE           TrackSampleResponse_ResponseCode = 3
	TrackSampleResponse_ALREADY_EXISTS              TrackSampleResponse_ResponseCode = 4
	TrackSampleResponse_TRANSIENT_ERROR             TrackSampleResponse_ResponseCode = 5
	TrackSampleResponse_PERMANENT_ERROR             TrackSampleResponse_ResponseCode = 6
	TrackSampleResponse_TRACK_COUNT_LIMIT_REACHED   TrackSampleResponse_ResponseCode = 7
	TrackSampleResponse_REJECT_STORE_TRACK          TrackSampleResponse_ResponseCode = 8
	TrackSampleResponse_REJECT_STORE_TRACK_BY_LABEL TrackSampleResponse_ResponseCode = 9
	TrackSampleResponse_REJECT_DRM_TRACK            TrackSampleResponse_ResponseCode = 10
)

var TrackSampleResponse_ResponseCode_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "MATCHED",
	2:  "UPLOAD_REQUESTED",
	3:  "INVALID_SIGNATURE",
	4:  "ALREADY_EXISTS",
	5:  "TRANSIENT_ERROR",
	6:  "PERMANENT_ERROR",
	7:  "TRACK_COUNT_LIMIT_REACHED",
	8:  "REJECT_STORE_TRACK",
	9:  "REJECT_STORE_TRACK_BY_LABEL",
	10: "REJECT_DRM_TRACK",
}
var TrackSampleResponse_ResponseCode_value = map[string]int32{
	"UNKNOWN":                     0,
	"MATCHED":                     1,
	"UPLOAD_REQUESTED":            2,
	"INVALID_SIGNATURE":           3,
	"ALREADY_EXISTS":              4,
	"TRANSIENT_ERROR":             5,
	"PERMANENT_ERROR":             6,
	"TRACK_COUNT_LIMIT_REACHED":   7,
	"REJECT_STORE_TRACK":          8,
	"REJECT_STORE_TRACK_BY_LABEL": 9,
	"REJECT_DRM_TRACK":            10,
}

func (x TrackSampleResponse_ResponseCode) String() string {
	return proto.EnumName(TrackSampleResponse_ResponseCode_name, int32(x))
}

type UploadResponse struct {
	ResponseType          UploadResponse_ResponseType           `protobuf:"varint,1,opt,name=response_type,enum=google.musicmanager.v0.UploadResponse_ResponseType" json:"response_type,omitempty"`
	MetadataResponse      *UploadMetadataResponse               `protobuf:"bytes,2,opt,name=metadata_response" json:"metadata_response,omitempty"`
	PlaylistResponse      *UploadPlaylistResponse               `protobuf:"bytes,3,opt,name=playlist_response" json:"playlist_response,omitempty"`
	PlaylistEntryResponse *UploadPlaylistEntryResponse          `protobuf:"bytes,4,opt,name=playlist_entry_response" json:"playlist_entry_response,omitempty"`
	SampleResponse        *UploadSampleResponse                 `protobuf:"bytes,5,opt,name=sample_response" json:"sample_response,omitempty"`
	GetjobsResponse       *GetJobsResponse                      `protobuf:"bytes,7,opt,name=getjobs_response" json:"getjobs_response,omitempty"`
	ClientstateResponse   *ClientStateResponse                  `protobuf:"bytes,8,opt,name=clientstate_response" json:"clientstate_response,omitempty"`
	Policy                *google_musicmanager_v03.ClientPolicy `protobuf:"bytes,6,opt,name=policy" json:"policy,omitempty"`
	AuthStatus            UploadResponse_AuthStatus             `protobuf:"varint,11,opt,name=auth_status,enum=google.musicmanager.v0.UploadResponse_AuthStatus" json:"auth_status,omitempty"`
	AuthError             bool                                  `protobuf:"varint,12,opt,name=auth_error" json:"auth_error,omitempty"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}

func (m *UploadResponse) GetMetadataResponse() *UploadMetadataResponse {
	if m != nil {
		return m.MetadataResponse
	}
	return nil
}

func (m *UploadResponse) GetPlaylistResponse() *UploadPlaylistResponse {
	if m != nil {
		return m.PlaylistResponse
	}
	return nil
}

func (m *UploadResponse) GetPlaylistEntryResponse() *UploadPlaylistEntryResponse {
	if m != nil {
		return m.PlaylistEntryResponse
	}
	return nil
}

func (m *UploadResponse) GetSampleResponse() *UploadSampleResponse {
	if m != nil {
		return m.SampleResponse
	}
	return nil
}

func (m *UploadResponse) GetGetjobsResponse() *GetJobsResponse {
	if m != nil {
		return m.GetjobsResponse
	}
	return nil
}

func (m *UploadResponse) GetClientstateResponse() *ClientStateResponse {
	if m != nil {
		return m.ClientstateResponse
	}
	return nil
}

func (m *UploadResponse) GetPolicy() *google_musicmanager_v03.ClientPolicy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type UploadPlaylistRequest struct {
	UploadOperation *google_musicmanager_v03.UploadOperation `protobuf:"bytes,1,opt,name=upload_operation" json:"upload_operation,omitempty"`
	Playlist        []*google_musicmanager_v02.Playlist      `protobuf:"bytes,2,rep,name=playlist" json:"playlist,omitempty"`
	UploaderId      string                                   `protobuf:"bytes,3,opt,name=uploader_id" json:"uploader_id,omitempty"`
}

func (m *UploadPlaylistRequest) Reset()         { *m = UploadPlaylistRequest{} }
func (m *UploadPlaylistRequest) String() string { return proto.CompactTextString(m) }
func (*UploadPlaylistRequest) ProtoMessage()    {}

func (m *UploadPlaylistRequest) GetUploadOperation() *google_musicmanager_v03.UploadOperation {
	if m != nil {
		return m.UploadOperation
	}
	return nil
}

func (m *UploadPlaylistRequest) GetPlaylist() []*google_musicmanager_v02.Playlist {
	if m != nil {
		return m.Playlist
	}
	return nil
}

type UploadPlaylistResponse struct {
	PlaylistResponse []*PlaylistResponse `protobuf:"bytes,1,rep,name=playlist_response" json:"playlist_response,omitempty"`
}

func (m *UploadPlaylistResponse) Reset()         { *m = UploadPlaylistResponse{} }
func (m *UploadPlaylistResponse) String() string { return proto.CompactTextString(m) }
func (*UploadPlaylistResponse) ProtoMessage()    {}

func (m *UploadPlaylistResponse) GetPlaylistResponse() []*PlaylistResponse {
	if m != nil {
		return m.PlaylistResponse
	}
	return nil
}

type UploadPlaylistEntryRequest struct {
	UploadOperation *google_musicmanager_v03.UploadOperation `protobuf:"bytes,1,opt,name=upload_operation" json:"upload_operation,omitempty"`
	PlaylistEntry   []*google_musicmanager_v02.PlaylistEntry `protobuf:"bytes,2,rep,name=playlist_entry" json:"playlist_entry,omitempty"`
	UploaderId      string                                   `protobuf:"bytes,3,opt,name=uploader_id" json:"uploader_id,omitempty"`
}

func (m *UploadPlaylistEntryRequest) Reset()         { *m = UploadPlaylistEntryRequest{} }
func (m *UploadPlaylistEntryRequest) String() string { return proto.CompactTextString(m) }
func (*UploadPlaylistEntryRequest) ProtoMessage()    {}

func (m *UploadPlaylistEntryRequest) GetUploadOperation() *google_musicmanager_v03.UploadOperation {
	if m != nil {
		return m.UploadOperation
	}
	return nil
}

func (m *UploadPlaylistEntryRequest) GetPlaylistEntry() []*google_musicmanager_v02.PlaylistEntry {
	if m != nil {
		return m.PlaylistEntry
	}
	return nil
}

type UploadPlaylistEntryResponse struct {
	PlaylistEntryResponse []*PlaylistEntryResponse `protobuf:"bytes,1,rep,name=playlist_entry_response" json:"playlist_entry_response,omitempty"`
}

func (m *UploadPlaylistEntryResponse) Reset()         { *m = UploadPlaylistEntryResponse{} }
func (m *UploadPlaylistEntryResponse) String() string { return proto.CompactTextString(m) }
func (*UploadPlaylistEntryResponse) ProtoMessage()    {}

func (m *UploadPlaylistEntryResponse) GetPlaylistEntryResponse() []*PlaylistEntryResponse {
	if m != nil {
		return m.PlaylistEntryResponse
	}
	return nil
}

type UploadMetadataRequest struct {
	Track      []*google_musicmanager_v02.Track `protobuf:"bytes,1,rep,name=track" json:"track,omitempty"`
	UploaderId string                           `protobuf:"bytes,2,opt,name=uploader_id" json:"uploader_id,omitempty"`
}

func (m *UploadMetadataRequest) Reset()         { *m = UploadMetadataRequest{} }
func (m *UploadMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*UploadMetadataRequest) ProtoMessage()    {}

func (m *UploadMetadataRequest) GetTrack() []*google_musicmanager_v02.Track {
	if m != nil {
		return m.Track
	}
	return nil
}

type UploadMetadataResponse struct {
	SignedChallengeInfo []*google_musicmanager_v03.SignedChallengeInfo `protobuf:"bytes,1,rep,name=signed_challenge_info" json:"signed_challenge_info,omitempty"`
	UploadId            []string                                       `protobuf:"bytes,2,rep,name=upload_id" json:"upload_id,omitempty"`
	TrackSampleResponse []*TrackSampleResponse                         `protobuf:"bytes,3,rep,name=track_sample_response" json:"track_sample_response,omitempty"`
}

func (m *UploadMetadataResponse) Reset()         { *m = UploadMetadataResponse{} }
func (m *UploadMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*UploadMetadataResponse) ProtoMessage()    {}

func (m *UploadMetadataResponse) GetSignedChallengeInfo() []*google_musicmanager_v03.SignedChallengeInfo {
	if m != nil {
		return m.SignedChallengeInfo
	}
	return nil
}

func (m *UploadMetadataResponse) GetTrackSampleResponse() []*TrackSampleResponse {
	if m != nil {
		return m.TrackSampleResponse
	}
	return nil
}

type UploadSampleRequest struct {
	TrackSample []*google_musicmanager_v03.TrackSample `protobuf:"bytes,1,rep,name=track_sample" json:"track_sample,omitempty"`
	UploaderId  string                                 `protobuf:"bytes,2,opt,name=uploader_id" json:"uploader_id,omitempty"`
}

func (m *UploadSampleRequest) Reset()         { *m = UploadSampleRequest{} }
func (m *UploadSampleRequest) String() string { return proto.CompactTextString(m) }
func (*UploadSampleRequest) ProtoMessage()    {}

func (m *UploadSampleRequest) GetTrackSample() []*google_musicmanager_v03.TrackSample {
	if m != nil {
		return m.TrackSample
	}
	return nil
}

type UploadSampleResponse struct {
	TrackSampleResponse []*TrackSampleResponse `protobuf:"bytes,1,rep,name=track_sample_response" json:"track_sample_response,omitempty"`
}

func (m *UploadSampleResponse) Reset()         { *m = UploadSampleResponse{} }
func (m *UploadSampleResponse) String() string { return proto.CompactTextString(m) }
func (*UploadSampleResponse) ProtoMessage()    {}

func (m *UploadSampleResponse) GetTrackSampleResponse() []*TrackSampleResponse {
	if m != nil {
		return m.TrackSampleResponse
	}
	return nil
}

type ClientStateRequest struct {
	UploaderId              string `protobuf:"bytes,1,opt,name=uploader_id" json:"uploader_id,omitempty"`
	GetPurchasedTracksSince int64  `protobuf:"varint,2,opt,name=get_purchased_tracks_since" json:"get_purchased_tracks_since,omitempty"`
}

func (m *ClientStateRequest) Reset()         { *m = ClientStateRequest{} }
func (m *ClientStateRequest) String() string { return proto.CompactTextString(m) }
func (*ClientStateRequest) ProtoMessage()    {}

type ClientStateResponse struct {
	LockerTrackLimit         int64 `protobuf:"varint,1,opt,name=locker_track_limit" json:"locker_track_limit,omitempty"`
	UserSongsInLocker        int64 `protobuf:"varint,2,opt,name=user_songs_in_locker" json:"user_songs_in_locker,omitempty"`
	TrackSizeLimitInMb       int32 `protobuf:"varint,3,opt,name=track_size_limit_in_mb" json:"track_size_limit_in_mb,omitempty"`
	UserPurchasedTracksSince int64 `protobuf:"varint,4,opt,name=user_purchased_tracks_since" json:"user_purchased_tracks_since,omitempty"`
	TotalTrackCount          int64 `protobuf:"varint,5,opt,name=total_track_count" json:"total_track_count,omitempty"`
}

func (m *ClientStateResponse) Reset()         { *m = ClientStateResponse{} }
func (m *ClientStateResponse) String() string { return proto.CompactTextString(m) }
func (*ClientStateResponse) ProtoMessage()    {}

type GetJobsRequest struct {
	UploaderId string `protobuf:"bytes,1,opt,name=uploader_id" json:"uploader_id,omitempty"`
}

func (m *GetJobsRequest) Reset()         { *m = GetJobsRequest{} }
func (m *GetJobsRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobsRequest) ProtoMessage()    {}

type GetJobsResponse struct {
	TracksToUpload   []*google_musicmanager_v03.TracksToUpload `protobuf:"bytes,1,rep,name=tracks_to_upload" json:"tracks_to_upload,omitempty"`
	GetTracksSuccess bool                                      `protobuf:"varint,2,opt,name=get_tracks_success" json:"get_tracks_success,omitempty"`
}

func (m *GetJobsResponse) Reset()         { *m = GetJobsResponse{} }
func (m *GetJobsResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobsResponse) ProtoMessage()    {}

func (m *GetJobsResponse) GetTracksToUpload() []*google_musicmanager_v03.TracksToUpload {
	if m != nil {
		return m.TracksToUpload
	}
	return nil
}

type UpAuthRequest struct {
	UploaderId   string `protobuf:"bytes,1,opt,name=uploader_id" json:"uploader_id,omitempty"`
	FriendlyName string `protobuf:"bytes,2,opt,name=friendly_name" json:"friendly_name,omitempty"`
}

func (m *UpAuthRequest) Reset()         { *m = UpAuthRequest{} }
func (m *UpAuthRequest) String() string { return proto.CompactTextString(m) }
func (*UpAuthRequest) ProtoMessage()    {}

type UpdateUploadStateRequest struct {
	State      UpdateUploadStateRequest_UploadState `protobuf:"varint,1,opt,name=state,enum=google.musicmanager.v0.UpdateUploadStateRequest_UploadState" json:"state,omitempty"`
	UploaderId string                               `protobuf:"bytes,2,opt,name=uploader_id" json:"uploader_id,omitempty"`
}

func (m *UpdateUploadStateRequest) Reset()         { *m = UpdateUploadStateRequest{} }
func (m *UpdateUploadStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUploadStateRequest) ProtoMessage()    {}

type DeleteUploadRequestedRequest struct {
	UploaderId string `protobuf:"bytes,1,opt,name=uploader_id" json:"uploader_id,omitempty"`
}

func (m *DeleteUploadRequestedRequest) Reset()         { *m = DeleteUploadRequestedRequest{} }
func (m *DeleteUploadRequestedRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteUploadRequestedRequest) ProtoMessage()    {}

type UploadMetadataInternalRequest struct {
	Gaiaid  uint64                 `protobuf:"varint,1,opt,name=gaiaid" json:"gaiaid,omitempty"`
	Request *UploadMetadataRequest `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
}

func (m *UploadMetadataInternalRequest) Reset()         { *m = UploadMetadataInternalRequest{} }
func (m *UploadMetadataInternalRequest) String() string { return proto.CompactTextString(m) }
func (*UploadMetadataInternalRequest) ProtoMessage()    {}

func (m *UploadMetadataInternalRequest) GetRequest() *UploadMetadataRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type PlaylistResponse struct {
	ResponseStatus *google_musicmanager_v03.ResponseStatus `protobuf:"bytes,1,opt,name=response_status" json:"response_status,omitempty"`
	ClientId       string                                  `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	ServerId       string                                  `protobuf:"bytes,3,opt,name=server_id" json:"server_id,omitempty"`
}

func (m *PlaylistResponse) Reset()         { *m = PlaylistResponse{} }
func (m *PlaylistResponse) String() string { return proto.CompactTextString(m) }
func (*PlaylistResponse) ProtoMessage()    {}

func (m *PlaylistResponse) GetResponseStatus() *google_musicmanager_v03.ResponseStatus {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

type PlaylistEntryResponse struct {
	ResponseStatus *google_musicmanager_v03.ResponseStatus `protobuf:"bytes,1,opt,name=response_status" json:"response_status,omitempty"`
	ClientId       string                                  `protobuf:"bytes,2,opt,name=client_id" json:"client_id,omitempty"`
	ServerId       string                                  `protobuf:"bytes,3,opt,name=server_id" json:"server_id,omitempty"`
}

func (m *PlaylistEntryResponse) Reset()         { *m = PlaylistEntryResponse{} }
func (m *PlaylistEntryResponse) String() string { return proto.CompactTextString(m) }
func (*PlaylistEntryResponse) ProtoMessage()    {}

func (m *PlaylistEntryResponse) GetResponseStatus() *google_musicmanager_v03.ResponseStatus {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

type TrackSampleResponse struct {
	ClientTrackId string                           `protobuf:"bytes,1,opt,name=client_track_id" json:"client_track_id,omitempty"`
	ResponseCode  TrackSampleResponse_ResponseCode `protobuf:"varint,2,opt,name=response_code,enum=google.musicmanager.v0.TrackSampleResponse_ResponseCode" json:"response_code,omitempty"`
	ServerTrackId string                           `protobuf:"bytes,3,opt,name=server_track_id" json:"server_track_id,omitempty"`
	AlbumArtUrl   string                           `protobuf:"bytes,4,opt,name=album_art_url" json:"album_art_url,omitempty"`
	ExpectMatch   bool                             `protobuf:"varint,5,opt,name=expect_match" json:"expect_match,omitempty"`
}

func (m *TrackSampleResponse) Reset()         { *m = TrackSampleResponse{} }
func (m *TrackSampleResponse) String() string { return proto.CompactTextString(m) }
func (*TrackSampleResponse) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("google.musicmanager.v0.UploadResponse_ResponseType", UploadResponse_ResponseType_name, UploadResponse_ResponseType_value)
	proto.RegisterEnum("google.musicmanager.v0.UploadResponse_AuthStatus", UploadResponse_AuthStatus_name, UploadResponse_AuthStatus_value)
	proto.RegisterEnum("google.musicmanager.v0.UpdateUploadStateRequest_UploadState", UpdateUploadStateRequest_UploadState_name, UpdateUploadStateRequest_UploadState_value)
	proto.RegisterEnum("google.musicmanager.v0.TrackSampleResponse_ResponseCode", TrackSampleResponse_ResponseCode_name, TrackSampleResponse_ResponseCode_value)
}
